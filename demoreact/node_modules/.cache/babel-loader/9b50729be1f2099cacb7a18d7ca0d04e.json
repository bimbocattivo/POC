{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/workspace/POC/demoreact/src/components/SPM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport PropTypes from 'prop-types';\nimport { select } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScatterPlotMatrix(props) {\n  _s();\n\n  //Sono i riferimenti ai g che ho costruito nel return.\n  let refSvg, svg;\n  let xAxis,\n      yAxis,\n      domainByTrait = {},\n      yScales = {},\n      xScales = {};\n  const size = props.size,\n        padding = props.padding,\n        legendRectSize = 18,\n        legendSpacing = 4;\n  const data = props.data;\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  const traits = props.dims;\n  const numberOfTraits = traits.length;\n\n  function cross(a, b) {\n    var c = [],\n        n = a.length,\n        m = b.length,\n        i,\n        j;\n\n    for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({\n      x: a[i],\n      i: i,\n      y: b[j],\n      j: j\n    });\n\n    return c;\n  }\n\n  function plot(p) {\n    var cell = d3.select(this);\n    cell.append(\"rect\").attr(\"class\", \"frame\").attr(\"x\", padding / 2).attr(\"y\", padding / 2).attr(\"width\", size - padding).attr(\"height\", size - padding);\n    cell.selectAll(\"circle\").data(data).enter().append(\"circle\").transition().duration(500).attr(\"cx\", function (d) {\n      return xScales[p.x](d[p.x]);\n    }).attr(\"cy\", function (d) {\n      return yScales[p.y](d[p.y]);\n    }).attr(\"r\", 4).style(\"fill\", function (d) {\n      return color(d[props.dimColor]);\n    });\n  }\n\n  useEffect(() => {\n    svg = select(refSvg);\n    svg.attr(\"viewBox\", \"0 0 \" + (size * numberOfTraits + padding + legendRectSize + 125) + \" \" + (size * numberOfTraits + padding));\n    update();\n  });\n\n  function updateScales() {\n    traits.forEach(function (trait) {\n      domainByTrait[trait] = d3.extent(data, function (d) {\n        return +d[trait];\n      });\n      let xScale, yScale;\n\n      if (domainByTrait[trait][0] || domainByTrait[trait][0] == 0) {\n        //controllo se il minore Ã¨ un numero\n        xScale = d3.scaleLinear().domain(domainByTrait[trait]);\n        yScale = d3.scaleLinear().domain(domainByTrait[trait]);\n      } else {\n        let domain = props.data.map(l => l[trait]);\n        xScale = d3.scalePoint().domain([...new Set(domain)]);\n        yScale = d3.scalePoint().domain([...new Set(domain)]);\n      }\n\n      xScale.range([padding / 2, size - padding / 2]);\n      yScale.range([size - padding / 2, padding / 2]);\n      xScales[trait] = xScale;\n      yScales[trait] = yScale;\n    }); //calcola i massimi e i minimi\n  }\n\n  function updateAxis() {\n    svg.selectAll(\".x.axis\").remove();\n    svg.selectAll(\".x.axis\").data(traits).enter().append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + (i * size + 20) + \",0)\";\n    }).each(function (d) {\n      xAxis = d3.axisBottom(xScales[d]).ticks(6) //quante tacchette sull'asse\n      .tickSize(size * numberOfTraits);\n      d3.select(this).call(xAxis);\n    });\n    svg.selectAll(\".y.axis\").remove();\n    svg.selectAll(\".y.axis\").data(traits).enter().append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", function (d, i) {\n      return \"translate(20,\" + i * size + \")\";\n    }).each(function (d) {\n      yAxis = d3.axisLeft(yScales[d]).ticks(6).tickSize(-size * numberOfTraits);\n      d3.select(this).call(yAxis);\n    });\n  }\n\n  function updatePoints() {\n    svg.selectAll(\".cell\").remove();\n    let cell = svg.selectAll(\".cell\").data(cross(traits, traits)) //quindi abbiamo tutte le possibili coppie tra le varie dimensioni, ora creo il \"g\" che ospita il grafichino\n    .enter().append(\"g\").attr(\"class\", \"cell\").attr(\"transform\", function (d) {\n      return \"translate(\" + (d.i * size + 20) + \",\" + d.j * size + \")\";\n    }) //creo il grafichino\n    .each(plot);\n    cell.filter(function (d) {\n      return d.i === d.j;\n    }) //toglie quelle uguali\n    .append(\"text\").attr(\"x\", padding).attr(\"y\", padding).attr(\"dy\", \".71em\").text(function (d) {\n      return d.x;\n    });\n    cell.filter(function (d) {\n      return d.i === d.j;\n    });\n  }\n\n  function updateLegend() {\n    svg.selectAll('.legend').remove();\n    var legend = svg.selectAll('.legend').data(color.domain()).enter().append('g').attr('class', 'legend').attr('transform', function (d, i) {\n      var height = legendRectSize + legendSpacing;\n      var offset = padding;\n      var horz = size * numberOfTraits + padding;\n      var vert = i * height + offset;\n      return 'translate(' + horz + ',' + vert + ')';\n    });\n    legend.append('rect').attr('width', legendRectSize).attr('height', legendRectSize).style('fill', color).style('stroke', color);\n    legend.append('text').attr('x', legendRectSize + legendSpacing).attr('y', legendRectSize - legendSpacing).text(function (d) {\n      return d;\n    });\n  }\n\n  function update() {\n    updateScales();\n    updateAxis();\n    updatePoints();\n    updateLegend();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: node => {\n        refSvg = node;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ScatterPlotMatrix, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ScatterPlotMatrix;\nScatterPlotMatrix.propTypes = {\n  data: PropTypes.array,\n  dims: PropTypes.array,\n  padding: PropTypes.number,\n  size: PropTypes.number,\n  radius: PropTypes.number,\n  color: PropTypes.string,\n  margin: PropTypes.object,\n  dim1Title: PropTypes.string,\n  dim2Title: PropTypes.string,\n  dim3Title: PropTypes.string,\n  dim4Title: PropTypes.string,\n  dimColor: PropTypes.string,\n  title: PropTypes.string\n};\nScatterPlotMatrix.defaultProps = {\n  data: [{\n    x: 10,\n    y: 20,\n    z: 10,\n    h: 20\n  }, {\n    x: 15,\n    y: 35,\n    z: 15,\n    h: 26\n  }],\n  padding: 20,\n  size: 300,\n  radius: 5,\n  color: \"blue\",\n  margin: {\n    left: 50,\n    right: 10,\n    top: 20,\n    bottom: 50\n  },\n  dim1Title: \"Dim 1 Title\",\n  dim2Title: \"Dim 2 Title\",\n  dim3Title: \"Dim 3 Title\",\n  dim4Title: \"Dim 4 Title\",\n  title: \"Prova\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterPlotMatrix\");","map":{"version":3,"sources":["/Users/dude/Documents/workspace/POC/demoreact/src/components/SPM.js"],"names":["React","useEffect","d3","PropTypes","select","ScatterPlotMatrix","props","refSvg","svg","xAxis","yAxis","domainByTrait","yScales","xScales","size","padding","legendRectSize","legendSpacing","data","color","scaleOrdinal","schemeCategory10","traits","dims","numberOfTraits","length","cross","a","b","c","n","m","i","j","push","x","y","plot","p","cell","append","attr","selectAll","enter","transition","duration","d","style","dimColor","update","updateScales","forEach","trait","extent","xScale","yScale","scaleLinear","domain","map","l","scalePoint","Set","range","updateAxis","remove","each","axisBottom","ticks","tickSize","call","axisLeft","updatePoints","filter","text","updateLegend","legend","height","offset","horz","vert","node","propTypes","array","number","radius","string","margin","object","dim1Title","dim2Title","dim3Title","dim4Title","title","defaultProps","z","h","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport * as d3 from \"d3\"\nimport PropTypes from 'prop-types';\nimport { select} from \"d3\";\n\n\nexport default function ScatterPlotMatrix (props) {\n    \n    //Sono i riferimenti ai g che ho costruito nel return.\n    let refSvg, svg;\n    let xAxis, yAxis, domainByTrait={}, yScales={}, xScales={};\n    const size = props.size, padding = props.padding, legendRectSize = 18, legendSpacing = 4;\n    const data = props.data;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const traits = props.dims;\n    const numberOfTraits = traits.length;\n\n    function cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) \n            for (j = -1; ++j < m;) \n                c.push({x: a[i], \n                        i: i, \n                        y: b[j], \n                        j: j});\n        return c;\n    }\n    \n    function plot(p) {\n        var cell = d3.select(this);\n        cell.append(\"rect\")\n            .attr(\"class\", \"frame\")\n            .attr(\"x\", padding / 2)\n            .attr(\"y\", padding / 2)\n            .attr(\"width\", size - padding)\n            .attr(\"height\", size - padding);\n\n        cell.selectAll(\"circle\")\n            .data(data)\n            .enter().append(\"circle\")\n                .transition().duration(500)\n                .attr(\"cx\", function(d) { return xScales[p.x](d[p.x]); })\n                .attr(\"cy\", function(d) { return yScales[p.y](d[p.y]); })\n                .attr(\"r\", 4)\n                .style(\"fill\", function(d) { return color(d[props.dimColor]); });\n    }\n    useEffect(() => {\n        svg = select(refSvg);\n        svg.attr(\"viewBox\", \"0 0 \" + (size * numberOfTraits + padding + legendRectSize + 125) + \" \" + (size * numberOfTraits + padding))\n        update();\n    })\n    function updateScales(){\n        traits.forEach(function(trait) {\n            domainByTrait[trait] = d3.extent(data, function(d) {return +d[trait]; });\n            let xScale, yScale;\n            if(domainByTrait[trait][0] || domainByTrait[trait][0]==0){//controllo se il minore Ã¨ un numero\n                xScale=d3.scaleLinear().domain(domainByTrait[trait])\n                yScale=d3.scaleLinear().domain(domainByTrait[trait])\n            }else{\n                let domain = props.data.map(l => l[trait]);\n                xScale=d3.scalePoint().domain([... new Set(domain)])\n                yScale=d3.scalePoint().domain([... new Set(domain)])\n            }\n            xScale.range([padding / 2, size - padding / 2]);\n            yScale.range([size - padding / 2, padding / 2]);\n            xScales[trait]=xScale;\n            yScales[trait]=yScale;\n        }); //calcola i massimi e i minimi\n        \n    }\n    function updateAxis(){\n        svg.selectAll(\".x.axis\").remove();\n        svg.selectAll(\".x.axis\")\n        .data(traits) \n        .enter() \n        .append(\"g\") \n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", function(d, i) { \n                return \"translate(\" + (i * size + 20)+\",0)\"; \n            })\n            .each(function(d) {\n                xAxis = d3.axisBottom(xScales[d])\n                    .ticks(6) //quante tacchette sull'asse\n                    .tickSize(size * numberOfTraits);\n                d3.select(this).call(xAxis);\n            });\n\n        svg.selectAll(\".y.axis\").remove();\n        svg.selectAll(\".y.axis\")\n        .data(traits)\n        .enter()\n        .append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", function(d, i) {\n                return \"translate(20,\" + i * size+\")\"; \n            })\n            .each(function(d) { \n                yAxis = d3.axisLeft(yScales[d])\n                    .ticks(6)\n                    .tickSize(-size * numberOfTraits);\n                d3.select(this).call(yAxis); \n            });\n    }\n    function updatePoints(){\n        svg.selectAll(\".cell\").remove();\n        let cell = svg.selectAll(\".cell\")\n            .data(cross(traits, traits))\n             //quindi abbiamo tutte le possibili coppie tra le varie dimensioni, ora creo il \"g\" che ospita il grafichino\n            .enter().append(\"g\")\n                .attr(\"class\", \"cell\")\n                .attr(\"transform\", function(d) { \n                    return \"translate(\" + (d.i * size +20) + \",\" + d.j * size + \")\"; })\n             //creo il grafichino\n            .each(plot);\n\n            cell.filter(function(d) { return d.i === d.j; }) //toglie quelle uguali\n            .append(\"text\")\n                .attr(\"x\", padding)\n                .attr(\"y\", padding)\n                .attr(\"dy\", \".71em\")\n            .text(function(d) { return d.x; });\n            cell.filter(function (d) {\n                return d.i === d.j;\n            })\n            \n\n    }\n    function updateLegend(){\n        svg.selectAll('.legend').remove();\n        var legend = svg.selectAll('.legend')\n            .data(color.domain())\n            .enter()\n            .append('g')\n            .attr('class', 'legend')\n            .attr('transform', function (d, i) {\n                var height = legendRectSize + legendSpacing;\n                var offset = padding;\n                var horz = size * numberOfTraits + padding;\n                var vert = i * height + offset;\n                return 'translate(' + horz + ',' + vert + ')';\n            });\n            legend.append('rect')\n              .attr('width', legendRectSize)\n              .attr('height', legendRectSize)\n              .style('fill', color)\n              .style('stroke', color);\n     \n            legend.append('text')\n              .attr('x', legendRectSize + legendSpacing)\n              .attr('y', legendRectSize - legendSpacing)\n              .text(function (d) {\n                return d;\n              });\n\n    }\n    function update(){\n        updateScales();\n        updateAxis();\n        updatePoints();\n        updateLegend();\n    }\n    return (\n        <div className=\"p-4\">\n            <svg ref={(node) => { refSvg = node; }} >\n            </svg>\n        </div>\n    )\n}\nScatterPlotMatrix.propTypes = {\n    data : PropTypes.array,\n    dims: PropTypes.array,\n    padding: PropTypes.number,\n    size: PropTypes.number,\n    radius: PropTypes.number,\n    color: PropTypes.string,\n    margin: PropTypes.object,\n    dim1Title: PropTypes.string,\n    dim2Title: PropTypes.string,\n    dim3Title: PropTypes.string,\n    dim4Title: PropTypes.string,\n    dimColor: PropTypes.string,\n    title: PropTypes.string\n}\nScatterPlotMatrix.defaultProps = {\n    data: [{ x: 10, y: 20, z: 10, h: 20 }, { x: 15, y: 35, z: 15, h: 26  }],\n    padding: 20,\n    size: 300,\n    radius: 5,\n    color: \"blue\",\n    margin: {\n        left: 50,\n        right: 10,\n        top: 20,\n        bottom: 50\n    },\n    dim1Title: \"Dim 1 Title\",\n    dim2Title: \"Dim 2 Title\",\n    dim3Title: \"Dim 3 Title\",\n    dim4Title: \"Dim 4 Title\",\n    title: \"Prova\"\n};"]},"metadata":{},"sourceType":"module"}