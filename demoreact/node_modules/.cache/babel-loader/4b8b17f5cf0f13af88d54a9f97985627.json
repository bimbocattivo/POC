{"ast":null,"code":"let _Symbol$iterator;\n\nfunction t(t, e) {\n  return Math.sqrt(r(t, e));\n}\n\nfunction e(t) {\n  let e,\n      s,\n      r = t.length,\n      i = 0,\n      n = 0;\n\n  for (let o = 0; o < r; ++o) e = t[o] - n, s = i + e, n = s - i - e, i = s;\n\n  return i;\n}\n\nfunction s(t) {\n  let e = t.length,\n      s = 0,\n      r = 0;\n\n  for (let i = 0; i < e; ++i) {\n    let e = t[i],\n        n = s + e;\n    Math.abs(s) >= Math.abs(e) ? r += s - n + e : r += e - n + s, s = n;\n  }\n\n  return s + r;\n}\n\nfunction r(t, e) {\n  if (t.length != e.length) return;\n  let r = t.length,\n      i = new Array(r);\n\n  for (let s = 0; s < r; ++s) {\n    let r = t[s],\n        n = e[s];\n    i[s] = (r - n) * (r - n);\n  }\n\n  return s(i);\n}\n\nfunction i(t, e) {\n  if (t.length !== e.length) return;\n  let s = t.length,\n      r = 0,\n      i = 0,\n      n = 0;\n\n  for (let o = 0; o < s; ++o) r += t[o] * e[o], i += t[o] * t[o], n += e[o] * e[o];\n\n  return Math.acos(r / (Math.sqrt(i) * Math.sqrt(n)));\n}\n\nfunction n(t, e) {\n  if (t.length != e.length) return;\n  let s = t.length,\n      r = 0;\n\n  for (let i = 0; i < s; ++i) r += Math.abs(t[i] - e[i]);\n\n  return r;\n}\n\nfunction o(t, e) {\n  if (t.length != e.length) return;\n  let s = t.length,\n      r = [];\n\n  for (let i = 0; i < s; ++i) r.push(Math.abs(t[i] - e[i]));\n\n  return Math.max(...r);\n}\n\nfunction h(t, e) {\n  if (t.length !== e.length) return;\n  let s = t.length,\n      r = 0;\n\n  for (let i = 0; i < s; ++i) r += Math.abs(t[i] - e[i]) / (Math.abs(t[i]) + Math.abs(e[i]));\n\n  return r;\n}\n\nfunction a(e, s, r = null, i = t) {\n  const n = e.shape[0];\n  let o = r !== null && r !== void 0 ? r : l(e, i),\n      h = new Array(n);\n\n  for (let t = 0; t < n; ++t) h[t] = Array.from(o.row(t)).map((e, s) => ({\n    i: t,\n    j: s,\n    distance: e\n  })).sort((t, e) => t.distance - e.distance).slice(1, s + 1);\n\n  return h;\n}\n\n_Symbol$iterator = Symbol.iterator;\n\nclass _ {\n  constructor(t = null, e = null, s = null) {\n    this[_Symbol$iterator] = this.iterate_rows;\n\n    if (this._rows = t, this._cols = e, this._data = null, t && e) {\n      if (!s) return this._data = new Float64Array(t * e), this;\n\n      if (\"function\" == typeof s) {\n        this._data = new Float64Array(t * e);\n\n        for (let r = 0; r < t; ++r) for (let t = 0; t < e; ++t) this._data[r * e + t] = s(r, t);\n\n        return this;\n      }\n\n      if (\"string\" == typeof s) {\n        if (\"zeros\" === s) return new _(t, e, 0);\n\n        if (\"identity\" === s || \"I\" === s) {\n          this._data = new Float64Array(t * e);\n\n          for (let s = 0; s < t; ++s) this._data[s * e + s] = 1;\n\n          return this;\n        }\n\n        if (\"center\" === s && t == e) {\n          this._data = new Float64Array(t * e), s = (e, s) => (e === s ? 1 : 0) - 1 / t;\n\n          for (let r = 0; r < t; ++r) for (let t = 0; t < e; ++t) this._data[r * e + t] = s(r, t);\n\n          return this;\n        }\n      }\n\n      if (\"number\" == typeof s) {\n        this._data = new Float64Array(t * e);\n\n        for (let r = 0; r < t; ++r) for (let t = 0; t < e; ++t) this._data[r * e + t] = s;\n\n        return this;\n      }\n    }\n\n    return this;\n  }\n\n  static from(t, e = \"row\") {\n    if (t instanceof _) return t.clone();\n\n    if (!(Array.isArray(t) || t instanceof Float64Array)) {\n      if (\"number\" == typeof t) return new _(1, 1, t);\n      throw \"error\";\n    }\n\n    {\n      let s = t.length;\n      if (0 === s) throw \"Array is empty\";\n\n      if (!(Array.isArray(t[0]) || t[0] instanceof Float64Array)) {\n        if (\"row\" === e) return new _(1, s, (e, s) => t[s]);\n        if (\"col\" === e) return new _(s, 1, e => t[e]);\n        if (\"diag\" === e) return new _(s, s, (e, s) => e == s ? t[e] : 0);\n        throw \"1d array has NaN entries\";\n      }\n\n      if (Array.isArray(t[0]) || t[0] instanceof Float64Array) {\n        let e = t[0].length;\n\n        for (let r = 0; r < s; ++r) if (t[r].length !== e) throw \"various array lengths\";\n\n        return new _(s, e, (e, s) => t[e][s]);\n      }\n    }\n  }\n\n  row(t) {\n    const e = this._data,\n          s = this._cols;\n    return e.subarray(t * s, (t + 1) * s);\n  }\n\n  *iterate_rows() {\n    const t = this._cols,\n          e = this._rows,\n          s = this._data;\n\n    for (let r = 0; r < e; ++r) yield s.subarray(r * t, (r + 1) * t);\n  }\n\n  set_row(t, e) {\n    let s = this._cols;\n\n    if (Array.isArray(e) && e.length === s) {\n      let r = t * s;\n\n      for (let t = 0; t < s; ++t) this._data[r + t] = e[t];\n    } else if (e instanceof _ && e.shape[1] === s && 1 === e.shape[0]) {\n      let r = t * s;\n\n      for (let t = 0; t < s; ++t) this._data[r + t] = e._data[t];\n    }\n\n    return this;\n  }\n\n  col(t) {\n    let e = new Float64Array(this._rows);\n\n    for (let s = 0; s < this._rows; ++s) e[s] = this._data[s * this._cols + t];\n\n    return e;\n  }\n\n  entry(t, e) {\n    return this._data[t * this._cols + e];\n  }\n\n  set_entry(t, e, s) {\n    return this._data[t * this._cols + e] = s, this;\n  }\n\n  transpose() {\n    return new _(this._cols, this._rows, (t, e) => this.entry(e, t));\n  }\n\n  get T() {\n    return this.transpose();\n  }\n\n  inverse() {\n    const t = this._rows,\n          e = this._cols;\n    let s = new _(t, 2 * e, (t, s) => s >= e ? t === s - e ? 1 : 0 : this.entry(t, s)),\n        r = 0,\n        i = 0;\n\n    for (; r < t && i < e;) {\n      var n = 0;\n      let o = -1 / 0;\n\n      for (let e = r; e < t; ++e) {\n        let t = Math.abs(s.entry(e, i));\n        o < t && (n = e, o = t);\n      }\n\n      if (0 == s.entry(n, i)) i++;else {\n        for (let t = 0; t < 2 * e; ++t) {\n          let e = s.entry(r, t),\n              i = s.entry(n, t);\n          s.set_entry(r, t, e), s.set_entry(n, t, i);\n        }\n\n        for (let n = r + 1; n < t; ++n) {\n          let t = s.entry(n, i) / s.entry(r, i);\n          s.set_entry(n, i, 0);\n\n          for (let o = i + 1; o < 2 * e; ++o) s.set_entry(n, o, s.entry(n, o) - s.entry(r, o) * t);\n        }\n\n        r++, i++;\n      }\n    }\n\n    for (let r = 0; r < t; ++r) {\n      let t = s.entry(r, r);\n\n      for (let i = r; i < 2 * e; ++i) s.set_entry(r, i, s.entry(r, i) / t);\n    }\n\n    for (let r = t - 1; r >= 0; --r) {\n      let t = s.entry(r, r);\n\n      for (let i = 0; i < r; i++) {\n        let n = s.entry(i, r) / t;\n\n        for (let t = i; t < 2 * e; ++t) {\n          let e = s.entry(i, t);\n          e -= s.entry(r, t) * n, s.set_entry(i, t, e);\n        }\n      }\n    }\n\n    return new _(t, e, (t, r) => s.entry(t, r + e));\n  }\n\n  dot(t) {\n    if (t instanceof _) {\n      let e = this;\n      if (e.shape[1] !== t.shape[0]) throw `A.dot(B): A is a ${e.shape.join(\" x \")}-Matrix, B is a ${t.shape.join(\" x \")}-Matrix: \\n                A has ${e.shape[1]} cols and B ${t.shape[0]} rows. \\n                Must be equal!`;\n      let s = e.shape[1];\n      return new _(e.shape[0], t.shape[1], (r, i) => {\n        const n = e.row(r),\n              o = t.col(i);\n        let h = 0;\n\n        for (let t = 0; t < s; ++t) h += n[t] * o[t];\n\n        return h;\n      });\n    }\n\n    if (Array.isArray(t) || t instanceof Float64Array) {\n      let e = this._rows;\n      if (t.length !== e) throw `A.dot(B): A has ${e} cols and B has ${t.length} rows. Must be equal!`;\n      let r = new Array(e);\n\n      for (let i = 0; i < e; ++i) r[i] = s(this.row(i).map(e => e * t[i]));\n\n      return r;\n    }\n\n    throw \"B must be Matrix or Array\";\n  }\n\n  outer(t) {\n    let e = this,\n        s = e._data.length;\n    if (s != t._data.length) return;\n    let r = new _();\n    return r.shape = [s, s, (s, i) => s <= i ? e._data[s] * t._data[i] : r.entry(i, s)], r;\n  }\n\n  concat(t, e = \"horizontal\") {\n    const s = this,\n          [r, i] = s.shape,\n          [n, o] = t.shape;\n\n    if (\"horizontal\" == e) {\n      if (r != n) throw `A.concat(B, \"horizontal\"): A and B need same number of rows, A has ${r} rows, B has ${n} rows.`;\n      const e = new _(r, i + o, \"zeros\");\n      return e.set_block(0, 0, s), e.set_block(0, i, t), e;\n    }\n\n    if (\"vertical\" == e) {\n      if (i != o) throw `A.concat(B, \"vertical\"): A and B need same number of columns, A has ${i} columns, B has ${o} columns.`;\n      const e = new _(r + n, i, \"zeros\");\n      return e.set_block(0, 0, s), e.set_block(r, 0, t), e;\n    }\n\n    if (\"diag\" == e) {\n      const e = new _(r + n, i + o, \"zeros\");\n      return e.set_block(0, 0, s), e.set_block(r, i, t), e;\n    }\n\n    throw `type must be \"horizontal\" or \"vertical\", but type is ${e}!`;\n  }\n\n  set_block(t, e, s) {\n    let [r, i] = s.shape;\n\n    for (let n = 0; n < r; ++n) if (!(n > this._rows)) for (let r = 0; r < i; ++r) r > this._cols || this.set_entry(n + t, r + e, s.entry(n, r));\n\n    return this;\n  }\n\n  get_block(t, e, s = null, r = null) {\n    var _r, _s;\n\n    const [i, n] = this.shape;\n    if (r = (_r = r) !== null && _r !== void 0 ? _r : n, (s = (_s = s) !== null && _s !== void 0 ? _s : i) <= t || r <= e) throw `\\n                end_row must be greater than start_row, and \\n                end_col must be greater than start_col, but\\n                end_row = ${s}, start_row = ${t}, end_col = ${r}, and start_col = ${e}!`;\n    const o = new _(s - t, r - e, \"zeros\");\n\n    for (let i = t, n = 0; i < s; ++i, ++n) for (let t = e, s = 0; t < r; ++t, ++s) o.set_entry(n, s, this.entry(i, t));\n\n    return o;\n  }\n\n  gather(t, e) {\n    const s = t.length,\n          r = e.length,\n          i = new _(s, r);\n\n    for (let r = 0; r < s; ++r) {\n      const n = t[r];\n\n      for (let t = 0; t < s; ++t) {\n        const s = e[t];\n        i.set_entry(r, t, this.entry(n, s));\n      }\n    }\n\n    return i;\n  }\n\n  _apply_array(t, e) {\n    const s = this._data,\n          [r, i] = this.shape;\n\n    for (let n = 0; n < r; ++n) {\n      const r = n * i;\n\n      for (let o = 0; o < i; ++o) {\n        const i = r + o;\n        s[i] = t(s[i], e(n, o));\n      }\n    }\n\n    return this;\n  }\n\n  _apply_rowwise_array(t, e) {\n    return this._apply_array(e, (e, s) => t[s]);\n  }\n\n  _apply_colwise_array(t, e) {\n    const s = this._data,\n          [r, i] = this.shape;\n\n    for (let n = 0; n < r; ++n) {\n      const r = n * i;\n\n      for (let o = 0; o < i; ++o) {\n        const i = r + o;\n        s[i] = e(s[i], t[n]);\n      }\n    }\n\n    return this;\n  }\n\n  _apply(t, e) {\n    let s = this._data;\n\n    if (t instanceof _) {\n      let [r, i] = t.shape,\n          [n, o] = this.shape;\n\n      if (1 === r) {\n        if (o !== i) throw \"cols !== value_cols\";\n\n        for (let r = 0; r < n; ++r) for (let i = 0; i < o; ++i) s[r * o + i] = e(s[r * o + i], t.entry(0, i));\n      } else if (1 === i) {\n        if (n !== r) throw \"rows !== value_rows\";\n\n        for (let r = 0; r < n; ++r) for (let i = 0; i < o; ++i) s[r * o + i] = e(s[r * o + i], t.entry(r, 0));\n      } else {\n        if (n != r || o != i) throw \"error\";\n\n        for (let r = 0; r < n; ++r) for (let i = 0; i < o; ++i) s[r * o + i] = e(s[r * o + i], t.entry(r, i));\n      }\n    } else if (Array.isArray(t)) {\n      let r = this._rows,\n          i = this._cols;\n      if (t.length === r) for (let n = 0; n < r; ++n) for (let r = 0; r < i; ++r) s[n * i + r] = e(s[n * i + r], t[n]);else {\n        if (t.length !== i) throw \"error\";\n\n        for (let n = 0; n < r; ++n) for (let r = 0; r < i; ++r) s[n * i + r] = e(s[n * i + r], t[r]);\n      }\n    } else for (let r = 0, i = this._rows * this._cols; r < i; ++r) s[r] = e(s[r], t);\n\n    return this;\n  }\n\n  clone() {\n    let t = new _();\n    return t._rows = this._rows, t._cols = this._cols, t._data = this._data.slice(0), t;\n  }\n\n  mult(t) {\n    return this.clone()._apply(t, (t, e) => t * e);\n  }\n\n  divide(t) {\n    return this.clone()._apply(t, (t, e) => t / e);\n  }\n\n  add(t) {\n    return this.clone()._apply(t, (t, e) => t + e);\n  }\n\n  sub(t) {\n    return this.clone()._apply(t, (t, e) => t - e);\n  }\n\n  get shape() {\n    return [this._rows, this._cols];\n  }\n\n  set shape([t, e, s = () => 0]) {\n    this._rows = t, this._cols = e, this._data = new Float64Array(t * e);\n\n    for (let r = 0; r < t; ++r) for (let t = 0; t < e; ++t) this._data[r * e + t] = s(r, t);\n\n    return this;\n  }\n\n  get to2dArray() {\n    return [...this.iterate_rows()];\n  }\n\n  get diag() {\n    const t = this._rows,\n          e = this._cols,\n          s = Math.min(t, e);\n    let r = new Float64Array(s);\n\n    for (let t = 0; t < s; ++t) r[t] = this.entry(t, t);\n\n    return r;\n  }\n\n  get mean() {\n    return this.sum / (this._rows * this._cols);\n  }\n\n  get sum() {\n    return s(this._data);\n  }\n\n  get meanRows() {\n    const t = this._data,\n          e = this._rows,\n          s = this._cols;\n    let r = [];\n\n    for (let i = 0; i < e; ++i) {\n      r[i] = 0;\n\n      for (let e = 0; e < s; ++e) r[i] += t[i * s + e];\n\n      r[i] /= s;\n    }\n\n    return r;\n  }\n\n  get meanCols() {\n    const t = this._data,\n          e = this._rows,\n          s = this._cols;\n    let r = [];\n\n    for (let i = 0; i < s; ++i) {\n      r[i] = 0;\n\n      for (let n = 0; n < e; ++n) r[i] += t[n * s + i];\n\n      r[i] /= e;\n    }\n\n    return r;\n  }\n\n  static solve_CG(t, e, s, r = .001) {\n    const i = t.shape[0],\n          n = e.shape[1];\n    let o = new _(i, 0);\n\n    for (let h = 0; h < n; ++h) {\n      const n = _.from(e.col(h)).T;\n\n      let a = new _(i, 1, () => s.random),\n          l = n.sub(t.dot(a)),\n          c = l.clone();\n\n      do {\n        const e = t.dot(c),\n              s = l.T.dot(l).entry(0, 0) / c.T.dot(e).entry(0, 0);\n        a = a.add(c.mult(s));\n        const r = l.sub(e.mult(s)),\n              i = r.T.dot(r).entry(0, 0) / l.T.dot(l).entry(0, 0);\n        c = r.add(c.mult(i)), l = r;\n      } while (Math.abs(l.mean) > r);\n\n      o = o.concat(a, \"horizontal\");\n    }\n\n    return o;\n  }\n\n  static solve(t, e) {\n    let {\n      L: s,\n      U: r\n    } = \"L\" in t && \"U\" in t ? t : _.LU(t),\n        i = s.shape[0],\n        n = e.clone();\n\n    for (let t = 0; t < i; ++t) {\n      for (let e = 0; e < t - 1; ++e) n.set_entry(0, t, n.entry(0, t) - s.entry(t, e) * n.entry(1, e));\n\n      n.set_entry(0, t, n.entry(0, t) / s.entry(t, t));\n    }\n\n    for (let t = i - 1; t >= 0; --t) {\n      for (let e = i - 1; e > t; --e) n.set_entry(0, t, n.entry(0, t) - r.entry(t, e) * n.entry(0, e));\n\n      n.set_entry(0, t, n.entry(0, t) / r.entry(t, t));\n    }\n\n    return n;\n  }\n\n  static LU(t) {\n    const e = t.shape[0],\n          s = new _(e, e, \"zeros\"),\n          r = new _(e, e, \"identity\");\n\n    for (let i = 0; i < e; ++i) {\n      for (let n = i; n < e; ++n) {\n        let e = 0;\n\n        for (let t = 0; t < i; ++t) e += s.entry(n, t) * r.entry(t, i);\n\n        s.set_entry(n, i, t.entry(n, i) - e);\n      }\n\n      for (let n = i; n < e; ++n) {\n        if (0 === s.entry(i, i)) return;\n        let e = 0;\n\n        for (let t = 0; t < i; ++t) e += s.entry(i, t) * r.entry(t, n);\n\n        r.set_entry(i, n, (t.entry(i, n) - e) / s.entry(i, i));\n      }\n    }\n\n    return {\n      L: s,\n      U: r\n    };\n  }\n\n  static SVD(t, e = 2) {\n    const s = t.T;\n    let r = s.dot(t),\n        i = t.dot(s),\n        {\n      eigenvectors: n,\n      eigenvalues: o\n    } = simultaneous_poweriteration(r, e),\n        {\n      eigenvectors: h\n    } = simultaneous_poweriteration(i, e);\n    return {\n      U: h,\n      Sigma: o.map(t => Math.sqrt(t)),\n      V: n\n    };\n  }\n\n}\n\nfunction l(e, s = t) {\n  let r = e.shape[0];\n  const i = new _(r, r);\n\n  for (let t = 0; t < r; ++t) {\n    const n = e.row(t);\n\n    for (let o = t + 1; o < r; ++o) {\n      const r = s(n, e.row(o));\n      i.set_entry(t, o, r), i.set_entry(o, t, r);\n    }\n  }\n\n  return i;\n}\n\nfunction c(t, e, s = null) {\n  if (s || (s = Math.max(Math.round(e - t) + 1, 1)), s < 2) return 1 === s ? [t] : [];\n  let r = new Array(s);\n\n  for (let i = s -= 1; i >= 0; --i) r[i] = (i * e + (s - i) * t) / s;\n\n  return r;\n}\n\nfunction u(e, s = t) {\n  let r = null;\n\n  if (e instanceof _) {\n    let [t, s] = e.shape;\n    if (1 === t) r = e.row(0);else {\n      if (1 !== s) throw \"matrix must be 1d!\";\n      r = e.col(0);\n    }\n  } else r = e;\n\n  let i = r.length,\n      n = new Array(i);\n  return n.fill(0), s(r, n);\n}\n\nclass f {\n  constructor(t) {\n    return this._N = 624, this._M = 397, this._MATRIX_A = 2567483615, this._UPPER_MASK = 2147483648, this._LOWER_MASK = 2147483647, this._mt = new Array(this._N), this._mti = this.N + 1, this.seed = t || new Date().getTime(), this;\n  }\n\n  set seed(t) {\n    this._seed = t;\n    let e = this._mt;\n\n    for (e[0] = t >>> 0, this._mti = 1; this._mti < this._N; this._mti += 1) {\n      let t = this._mti,\n          s = e[t - 1] ^ e[t - 1] >>> 30;\n      e[t] = (1812433253 * ((4294901760 & s) >>> 16) << 16) + 1812433253 * (65535 & s) + t, e[t] >>>= 0;\n    }\n  }\n\n  get seed() {\n    return this._seed;\n  }\n\n  get random() {\n    return this.random_int * (1 / 4294967296);\n  }\n\n  get random_int() {\n    let t,\n        e = new Array(0, this._MATRIX_A);\n\n    if (this._mti >= this._N) {\n      let s;\n      this._mti == this._N + 1 && (this.seed = 5489);\n      let r = this._N - this._M,\n          i = this._M - this._N;\n\n      for (s = 0; s < r; ++s) t = this._mt[s] & this._UPPER_MASK | this._mt[s + 1] & this._LOWER_MASK, this._mt[s] = this._mt[s + this._M] ^ t >>> 1 ^ e[1 & t];\n\n      for (; s < this._N - 1; ++s) t = this._mt[s] & this._UPPER_MASK | this._mt[s + 1] & this._LOWER_MASK, this._mt[s] = this._mt[s + i] ^ t >>> 1 ^ e[1 & t];\n\n      t = this._mt[this._N - 1] & this._UPPER_MASK | this._mt[0] & this._LOWER_MASK, this._mt[this._N - 1] = this._mt[this._M - 1] ^ t >>> 1 ^ e[1 & t], this._mti = 0;\n    }\n\n    return t = this._mt[this._mti += 1], t ^= t >>> 11, t ^= t << 7 & 2636928640, t ^= t << 15 & 4022730752, t ^= t >>> 18, t >>> 0;\n  }\n\n  choice(t, e) {\n    if (t instanceof _) {\n      let [s, r] = t.shape;\n      if (e > s) throw \"n bigger than A!\";\n      let i = new Array(e),\n          n = c(0, s - 1);\n\n      for (let t = 0, s = n.length; t < e; ++t, --s) {\n        let e = this.random_int % s;\n        i[t] = n.splice(e, 1)[0];\n      }\n\n      return i.map(e => t.row(e));\n    }\n\n    if (Array.isArray(t) || t instanceof Float64Array) {\n      let s = t.length;\n      if (e > s) throw \"n bigger than A!\";\n      let r = new Array(e),\n          i = c(0, s - 1);\n\n      for (let t = 0, s = i.length; t < e; ++t, --s) {\n        let e = this.random_int % s;\n        r[t] = i.splice(e, 1)[0];\n      }\n\n      return r.map(e => t[e]);\n    }\n  }\n\n  static choice(t, e, s = 19870307) {\n    let [r, i] = t.shape;\n    if (e > r) throw \"n bigger than A!\";\n    let n = new f(s),\n        o = new Array(e),\n        h = c(0, r - 1);\n\n    for (let t = 0, s = h.length; t < e; ++t, --s) {\n      let e = n.random_int % s;\n      o[t] = h.splice(e, 1)[0];\n    }\n\n    return o.map(e => t.row(e));\n  }\n\n}\n\nfunction d(t) {\n  let e;\n\n  for (const s of t) null != s && (e < s || void 0 === e && s >= s) && (e = s);\n\n  return e;\n}\n\nclass p {\n  constructor(t = null, e = t => t, s = \"min\") {\n    return t ? p.heapify(t, e, s) : (this._accessor = e, this._container = [], this._comparator = \"min\" == s ? (t, e) => t < e : \"max\" == s ? (t, e) => t > e : s, this);\n  }\n\n  static heapify(t, e = t => t, s = \"min\") {\n    const r = new p(null, e, s),\n          i = r._container;\n\n    for (const s of t) i.push({\n      element: s,\n      value: e(s)\n    });\n\n    for (let e = Math.floor(t.length / 2 - 1); e >= 0; --e) r._heapify_down(e);\n\n    return r;\n  }\n\n  _swap(t, e) {\n    const s = this._container;\n    [s[e], s[t]] = [s[t], s[e]];\n  }\n\n  _heapify_up() {\n    const t = this._container;\n    let e = t.length - 1;\n\n    for (; e > 0;) {\n      let s = Math.floor((e - 1) / 2);\n      if (!this._comparator(t[e].value, t[s].value)) break;\n      this._swap(s, e), e = s;\n    }\n  }\n\n  push(t) {\n    const e = {\n      element: t,\n      value: this._accessor(t)\n    };\n    return this._container.push(e), this._heapify_up(), this;\n  }\n\n  _heapify_down(t = 0) {\n    const e = this._container,\n          s = this._comparator,\n          r = e.length;\n    let i = 2 * t + 1,\n        n = 2 * t + 2,\n        o = t;\n    if (o > r) throw \"index higher than length\";\n    i < r && s(e[i].value, e[o].value) && (o = i), n < r && s(e[n].value, e[o].value) && (o = n), o !== t && (this._swap(t, o), this._heapify_down(o));\n  }\n\n  pop() {\n    const t = this._container;\n    if (0 === t.length) return null;\n    if (1 === t.length) return t.pop();\n\n    this._swap(0, t.length - 1);\n\n    const e = t.pop();\n    return this._heapify_down(), e;\n  }\n\n  get first() {\n    return this._container.length > 0 ? this._container[0] : null;\n  }\n\n  *iterate() {\n    for (let t = 0, e = this._container.length; t < e; ++t) yield this._container[t].element;\n  }\n\n  toArray() {\n    return this.data().sort((t, e) => this._comparator(t, e) ? -1 : 0);\n  }\n\n  data() {\n    return this._container.map(t => t.element);\n  }\n\n  raw_data() {\n    return this._container;\n  }\n\n  get length() {\n    return this._container.length;\n  }\n\n  get empty() {\n    return 0 === this.length;\n  }\n\n}\n\nclass m {\n  constructor(e = null, s = t) {\n    return this._Node = class {\n      constructor(t, e = null, s = null, r = null) {\n        this.pivot = t, this.child1 = e, this.child2 = s, this.radius = r;\n      }\n\n    }, this._Leaf = class {\n      constructor(t) {\n        this.points = t;\n      }\n\n    }, this._metric = s, e && this.add(e), this;\n  }\n\n  add(t) {\n    return t = t.map((t, e) => ({\n      index: e,\n      element: t\n    })), this._root = this._construct(t), this;\n  }\n\n  _construct(t) {\n    if (1 === t.length) return new this._Leaf(t);\n    {\n      let e,\n          s = this._greatest_spread(t),\n          r = t.sort((t, e) => t.element[s] - e.element[s]),\n          i = r.length,\n          n = Math.floor(i / 2),\n          o = t[n],\n          h = r.slice(0, n),\n          a = r.slice(n, i),\n          _ = Math.max(...t.map(t => this._metric(o.element, t.element)));\n\n      return e = h.length > 0 && a.length > 0 ? new this._Node(o, this._construct(h), this._construct(a), _) : new this._Leaf(t), e;\n    }\n  }\n\n  _greatest_spread(t) {\n    let e = t[0].element.length,\n        s = new Array(e);\n\n    for (let t = 0; t < e; ++t) s[t] = [1 / 0, -1 / 0];\n\n    let r = t.reduce((t, s) => {\n      for (let r = 0; r < e; ++r) t[r][0] = Math.min(t[r][0], s.element[r]), t[r][1] = Math.max(t[r][1], s.element[r]);\n\n      return t;\n    }, s);\n    r = r.map(t => t[1] - t[0]);\n    let i = 0;\n\n    for (let t = 0; t < e; ++t) i = r[t] > r[i] ? t : i;\n\n    return i;\n  }\n\n  search(t, e = 5) {\n    return this._search(t, e, new p(null, e => this._metric(e.element, t), \"max\"), this._root);\n  }\n\n  _search(t, e, s, r) {\n    if (s.length >= e && r.pivot && r.radius && this._metric(t, r.pivot.element) - r.radius >= s.first.value) return s;\n    if (r.child1 && this._search(t, e, s, r.child1), r.child2 && this._search(t, e, s, r.child2), r.points) for (let t = 0, i = r.points.length; t < i; ++t) {\n      let i = r.points[t];\n      e > s.length ? s.push(i) : (s.push(i), s.pop());\n    }\n    return s;\n  }\n\n}\n\nfunction y(e) {\n  const [r, i] = e.shape,\n        n = new _(r, i, \"identity\"),\n        o = new _(i, i, 0);\n\n  for (let h = 0; h < i; ++h) {\n    let i = e.col(h);\n\n    for (let t = 0; t < h; ++t) {\n      const e = n.col(t),\n            r = s(e.map((t, e) => t * i[e]));\n      o.set_entry(t, h, r), i = i.map((t, s) => t - r * e[s]);\n    }\n\n    const a = u(i, t);\n\n    for (let t = 0; t < r; ++t) n.set_entry(t, h, i[t] / a);\n\n    o.set_entry(h, h, a);\n  }\n\n  return {\n    R: o,\n    Q: n\n  };\n}\n\nfunction w(t, e = 2, r = 100, i = 1212) {\n  const n = i instanceof f ? i : new f(i);\n  t instanceof _ || (t = _.from(t));\n  const o = t.shape[0];\n  let {\n    Q: h,\n    R: a\n  } = y(new _(o, e, () => n.random));\n\n  for (; r--;) {\n    const e = a.clone(),\n          i = y(t.dot(h));\n    h = i.Q, a = i.R, s(a.sub(e).diag) / o < 1e-12 && (r = 0);\n  }\n\n  return {\n    eigenvalues: a.diag,\n    eigenvectors: h.transpose().to2dArray\n  };\n}\n\nclass g {\n  get parameter_list() {\n    return this._parameter_list;\n  }\n\n  set parameter_list(t) {\n    return this._parameter_list = t, this;\n  }\n\n  constructor(e, s = 2, r = t, i = 1212) {\n    if (Array.isArray(e)) this._type = \"array\", this.X = _.from(e);else {\n      if (!(e instanceof _)) throw \"no valid type for X\";\n      this._type = \"matrix\", this.X = e;\n    }\n    return [this._N, this._D] = this.X.shape, this._d = s, this._metric = r, this._seed = i, this._randomizer = new f(i), this._is_initialized = !1, this;\n  }\n\n  parameter(t, e = null) {\n    if (-1 === this.parameter_list.findIndex(e => e === t)) throw t + \" is not a valid parameter!\";\n    return e ? (this[\"_\" + t] = e, this) : this[\"_\" + t];\n  }\n\n  para(t, e = null) {\n    return this.parameter(t, e);\n  }\n\n  p(t, e = null) {\n    return this.parameter(t, e);\n  }\n\n  transform() {\n    return this.check_init(), this.Y;\n  }\n\n  generator() {\n    return this.transform();\n  }\n\n  check_init() {\n    this._is_initialized || \"function\" != typeof this.init || (this.init(), this._is_initialized = !0);\n  }\n\n  get projection() {\n    return \"matrix\" === this._type ? this.Y : this.Y.to2dArray;\n  }\n\n  async transform_async() {\n    return this.transform();\n  }\n\n  static transform(...t) {\n    return new this(...t).transform();\n  }\n\n  static async transform_async(...t) {\n    return this.transform(...t);\n  }\n\n  static *generator(...t) {\n    const e = new this(...t).generator();\n\n    for (const t of e) yield t;\n  }\n\n}\n\nclass x extends g {\n  constructor(t, e = 2) {\n    return super(t, e), this;\n  }\n\n  transform() {\n    let t = this.X,\n        e = t.shape[1],\n        s = new _(e, e, \"center\"),\n        r = t.dot(s),\n        i = r.transpose().dot(r),\n        {\n      eigenvectors: n\n    } = w(i, this._d);\n    return n = _.from(n).transpose(), this.Y = t.dot(n), this.projection;\n  }\n\n}\n\nclass A extends g {\n  constructor(e, s = 2, r = t, i = 1212) {\n    return super(e, s, r, i), this;\n  }\n\n  transform() {\n    const t = this.X,\n          e = t.shape[0],\n          s = this._metric;\n    let r = new Float64Array(e),\n        i = new Float64Array(e),\n        n = 0;\n    const o = new _();\n    o.shape = [e, e, (e, h) => {\n      if (e === h) return 0;\n      const a = e < h ? s(t.row(e), t.row(h)) : o.entry(h, e);\n      return r[e] += a, i[h] += a, n += a, a;\n    }], this._d_X = o, r = r.map(t => t / e), i = i.map(t => t / e), n /= e ** 2;\n    const h = new _(e, e, (t, e) => o.entry(t, e) - r[t] - i[e] + n),\n          {\n      eigenvectors: a\n    } = w(h, this._d);\n    return this.Y = _.from(a).transpose(), this.projection;\n  }\n\n  get stress() {\n    const e = this.X.shape[0],\n          s = this.Y,\n          r = this._d_X,\n          i = new _();\n    i.shape = [e, e, (e, r) => e < r ? t(s.row(e), s.row(r)) : i.entry(r, e)];\n    let n = 0,\n        o = 0;\n\n    for (let t = 0; t < e; ++t) for (let s = t + 1; s < e; ++s) n += Math.pow(r.entry(t, s) - i.entry(t, s), 2), o += Math.pow(r.entry(t, s), 2);\n\n    return Math.sqrt(n / o);\n  }\n\n}\n\nclass M extends g {\n  constructor(e, s, r = 2, i = t, n = 1212) {\n    return super(e, r, i, n), super.parameter_list = [\"k\"], this.parameter(\"k\", Math.min(s !== null && s !== void 0 ? s : Math.max(Math.floor(this.X.shape[0] / 10), 2), this._N - 1)), this;\n  }\n\n  transform() {\n    this.check_init();\n    const t = this.X,\n          e = this._N,\n          s = this._metric,\n          r = new _();\n    r.shape = [e, e, (e, i) => e <= i ? s(t.row(e), t.row(i)) : r.entry(i, e)];\n    const i = [];\n\n    for (let t = 0; t < e; ++t) {\n      const s = [];\n\n      for (let i = 0; i < e; ++i) s.push({\n        index: i,\n        distance: r.entry(t, i)\n      });\n\n      const n = new p(s, t => t.distance, \"min\");\n      i.push(n.toArray().slice(1, this._k + 1));\n    }\n\n    const n = new _(e, e, (t, e) => {\n      const s = i[t].find(t => t.index === e);\n      return s ? s.distance : 1 / 0;\n    });\n\n    for (let t = 0; t < e; ++t) for (let s = 0; s < e; ++s) for (let r = 0; r < e; ++r) n.set_entry(t, s, Math.min(n.entry(t, s), n.entry(t, r) + n.entry(r, s)));\n\n    let o = new Float64Array(e),\n        h = new Float64Array(e),\n        a = 0,\n        l = new _(e, e, (t, e) => {\n      let s = n.entry(t, e);\n      return s = s === 1 / 0 ? 0 : s, o[t] += s, h[e] += s, a += s, s;\n    });\n    o = o.map(t => t / e), h = h.map(t => t / e), a /= e ** 2;\n    const c = new _(e, e, (t, e) => l.entry(t, e) - o[t] - h[e] + a),\n          {\n      eigenvectors: u\n    } = w(c, this._d);\n    return this.Y = _.from(u).transpose(), this.projection;\n  }\n\n}\n\nclass v extends g {\n  constructor(e, s = 2, r = t, i = 1212) {\n    return super(e, s, r, i), this;\n  }\n\n  _choose_distant_objects(t) {\n    const e = this.X.shape[0];\n    let s = this._randomizer.random_int % e - 1,\n        r = null,\n        i = -1 / 0;\n\n    for (let n = 0; n < e; ++n) {\n      const e = t(s, n);\n      e > i && (i = e, r = n);\n    }\n\n    i = -1 / 0;\n\n    for (let n = 0; n < e; ++n) {\n      const e = t(r, n);\n      e > i && (i = e, s = n);\n    }\n\n    return [s, r, i];\n  }\n\n  transform() {\n    const t = this.X,\n          e = t.shape[0],\n          s = this._d,\n          r = this._metric,\n          i = new _(e, s, 0);\n\n    let n = (e, s) => r(t.row(e), t.row(s));\n\n    for (let t = 0; t < s; ++t) {\n      let s = n;\n\n      const [r, o, h] = this._choose_distant_objects(n);\n\n      if (0 !== h) {\n        for (let s = 0; s < e; ++s) {\n          const e = (n(r, s) ** 2 + h ** 2 - n(o, s) ** 2) / (2 * h);\n          i.set_entry(s, t, e);\n        }\n\n        n = (e, r) => Math.sqrt(s(e, r) ** 2 - (i.entry(e, t) - i.entry(r, t)) ** 2);\n      }\n    }\n\n    return this.Y = i, this.projection;\n  }\n\n}\n\nclass b extends g {\n  constructor(e, s, r = 2, i = t, n = 1212) {\n    return super(e, r, i, n), super.parameter_list = [\"labels\"], this.parameter(\"labels\", s), this;\n  }\n\n  transform() {\n    let t = this.X,\n        [e, s] = t.shape,\n        r = this._labels,\n        i = {},\n        n = 0;\n    r.forEach((e, s) => {\n      e in i ? (i[e].count++, i[e].rows.push(t.row(s))) : i[e] = {\n        id: n++,\n        count: 1,\n        rows: [t.row(s)]\n      };\n    });\n    let o = t.mean,\n        h = new _(n, s);\n\n    for (let t in i) {\n      let e = _.from(i[t].rows).meanCols;\n\n      for (let r = 0; r < s; ++r) h.set_entry(i[t].id, r, e[r]);\n    }\n\n    let a = new _(s, s);\n\n    for (let t in i) {\n      let e = h.row(i[t].id),\n          r = new _(s, 1, t => e[t] - o),\n          n = i[t].count;\n      a = a.add(r.dot(r.transpose()).mult(n));\n    }\n\n    let l = new _(s, s);\n\n    for (let t in i) {\n      let e = h.row(i[t].id),\n          r = new _(s, 1, t => e[t]),\n          n = i[t].rows;\n\n      for (let e = 0, o = i[t].count; e < o; ++e) {\n        let t = new _(s, 1, (t, s) => n[e][t] - r.entry(t, 0));\n        l = l.add(t.dot(t.transpose()));\n      }\n    }\n\n    let {\n      eigenvectors: c\n    } = w(l.inverse().dot(a), this._d);\n    return c = _.from(c).transpose(), this.Y = t.dot(c), this.projection;\n  }\n\n}\n\nclass z extends g {\n  constructor(e, s, r = 2, i = t, n = 1212) {\n    return super(e, r, i, n), super.parameter_list = [\"k\"], this.parameter(\"k\", Math.min(s !== null && s !== void 0 ? s : Math.max(Math.floor(this._N / 10), 2), this._N - 1)), this;\n  }\n\n  transform() {\n    const t = this.X,\n          e = this._d,\n          r = this._N,\n          i = this._D,\n          n = this.parameter(\"k\"),\n          o = a(t, n, null, this._metric),\n          h = new _(n, 1, 1),\n          l = new _(r, r);\n\n    for (let e = 0; e < r; ++e) {\n      const r = o[e],\n            a = new _(n, i, (s, i) => t.entry(r[s].j, i) - t.entry(e, i)),\n            c = a.dot(a.T);\n\n      if (n > i) {\n        const t = s(c.diag) / 1e3;\n\n        for (let e = 0; e < n; ++e) c.set_entry(e, e, c.entry(e, e) + t);\n      }\n\n      let u = _.solve_CG(c, h, this._randomizer);\n\n      u = u.divide(u.sum);\n\n      for (let t = 0; t < n; ++t) l.set_entry(e, r[t].j, u.entry(t, 0));\n    }\n\n    const c = new _(r, r, \"identity\").sub(l),\n          u = c.T.dot(c),\n          {\n      eigenvectors: f\n    } = w(u.T.inverse(), e + 1);\n    return this.Y = _.from(f.slice(1, 1 + e)).T, this.projection;\n  }\n\n}\n\nclass j extends g {\n  constructor(e, s, r = 2, i = t, n = 1212) {\n    if (super(e, r, i, n), super.parameter_list = [\"k\"], this.parameter(\"k\", Math.min(s !== null && s !== void 0 ? s : Math.max(Math.floor(this._N / 10), 2), this._N - 1)), this._D <= r) throw `Dimensionality of X (D = ${this._D}) must be greater than the required dimensionality of the result (d = ${r})!`;\n    return this;\n  }\n\n  transform() {\n    const t = this.X,\n          e = this._d,\n          [s, r] = t.shape,\n          i = this.parameter(\"k\"),\n          n = a(t, i, null, this._metric),\n          o = new _(r, r, \"center\"),\n          h = new _(s, s, 0);\n\n    for (let r = 0; r < s; ++r) {\n      const s = [r, ...n[r].map(t => t.j)];\n\n      let a = _.from(s.map(e => t.row(e)));\n\n      a = a.dot(o);\n\n      const l = a.dot(a.transpose()),\n            {\n        eigenvectors: c\n      } = w(l, e),\n            u = _.from(c),\n            f = u.transpose().dot(u).add(1 / Math.sqrt(i + 1));\n\n      for (let t = 0; t < i + 1; ++t) for (let e = 0; e < i + 1; ++e) h.set_entry(s[t], s[e], h.entry(s[t], s[e]) - (t === e ? 1 : 0) + f.entry(t, e));\n    }\n\n    const {\n      eigenvectors: l\n    } = w(h, e + 1);\n    return this.Y = _.from(l.slice(1)).transpose(), this.projection;\n  }\n\n}\n\nclass k extends g {\n  constructor(e, s = 50, r = 10, i = 2, n = t, o = 1212) {\n    return super(e, i, n, o), super.parameter_list = [\"perplexity\", \"epsilon\"], [this._N, this._D] = this.X.shape, this.parameter(\"perplexity\", Math.min(s, this._N - 1)), this.parameter(\"epsilon\", r), this._iter = 0, this.Y = new _(this._N, this._d, () => this._randomizer.random), this;\n  }\n\n  init(t = null) {\n    const e = Math.log(this._perplexity),\n          s = this._N,\n          r = this._D,\n          i = this._metric,\n          n = this.X;\n    let o;\n    if (t) o = t;else {\n      o = new _(s, s);\n\n      for (let t = 0; t < s; ++t) {\n        const e = n.row(t);\n\n        for (let r = t + 1; r < s; ++r) {\n          const s = i(e, n.row(r));\n          o.set_entry(t, r, s), o.set_entry(r, t, s);\n        }\n      }\n    }\n    const h = new _(s, s, \"zeros\");\n    this._ystep = new _(s, r, \"zeros\"), this._gains = new _(s, r, 1);\n    let a = new Array(s).fill(0);\n\n    for (let t = 0; t < s; ++t) {\n      let r = -1 / 0,\n          i = 1 / 0,\n          n = 1,\n          _ = !1,\n          l = 0;\n\n      for (; !_;) {\n        let h = 0;\n\n        for (let e = 0; e < s; ++e) {\n          let s = Math.exp(-o.entry(t, e) * n);\n          t === e && (s = 0), a[e] = s, h += s;\n        }\n\n        let c = 0;\n\n        for (let t = 0; t < s; ++t) {\n          let e = 0 === h ? 0 : a[t] / h;\n          a[t] = e, e > 1e-7 && (c -= e * Math.log(e));\n        }\n\n        c > e ? (r = n, n = i === 1 / 0 ? 2 * n : (n + i) / 2) : (i = n, n = r === -1 / 0 ? n / 2 : (n + r) / 2), ++l, Math.abs(c - e) < 1e-4 && (_ = !0), l >= 50 && (_ = !0);\n      }\n\n      for (let e = 0; e < s; ++e) h.set_entry(t, e, a[e]);\n    }\n\n    const l = new _(s, s, \"zeros\"),\n          c = 2 * s;\n\n    for (let t = 0; t < s; ++t) for (let e = t; e < s; ++e) {\n      const s = Math.max((h.entry(t, e) + h.entry(e, t)) / c, 1e-100);\n      l.set_entry(t, e, s), l.set_entry(e, t, s);\n    }\n\n    return this._P = l, this;\n  }\n\n  transform(t = 500) {\n    this.check_init();\n\n    for (let e = 0; e < t; ++e) this.next();\n\n    return this.projection;\n  }\n\n  *generator() {\n    for (this.check_init();;) this.next(), yield this.projection;\n  }\n\n  next() {\n    const t = ++this._iter,\n          e = this._P,\n          s = this._ystep,\n          r = this._gains,\n          i = this._N,\n          n = this._epsilon,\n          o = this._d;\n    let h = this.Y;\n    const a = t < 100 ? 4 : 1,\n          l = new _(i, i, \"zeros\");\n    let c = 0;\n\n    for (let t = 0; t < i; ++t) for (let e = t + 1; e < i; ++e) {\n      let s = 0;\n\n      for (let r = 0; r < o; ++r) {\n        const i = h.entry(t, r) - h.entry(e, r);\n        s += i * i;\n      }\n\n      const r = 1 / (1 + s);\n      l.set_entry(t, e, r), l.set_entry(e, t, r), c += 2 * r;\n    }\n\n    const u = new _(i, i, 0);\n\n    for (let t = 0; t < i; ++t) for (let e = t + 1; e < i; ++e) {\n      const s = Math.max(l.entry(t, e) / c, 1e-100);\n      u.set_entry(t, e, s), u.set_entry(e, t, s);\n    }\n\n    const f = new _(i, o, \"zeros\");\n\n    for (let t = 0; t < i; ++t) for (let s = 0; s < i; ++s) {\n      const r = 4 * (a * e.entry(t, s) - u.entry(t, s)) * l.entry(t, s);\n\n      for (let e = 0; e < o; ++e) f.set_entry(t, e, f.entry(t, e) + r * (h.entry(t, e) - h.entry(s, e)));\n    }\n\n    let d = new Float64Array(o);\n\n    for (let e = 0; e < i; ++e) for (let i = 0; i < o; ++i) {\n      const o = f.entry(e, i),\n            a = s.entry(e, i),\n            _ = r.entry(e, i);\n\n      let l = Math.sign(o) === Math.sign(a) ? .8 * _ : _ + .2;\n      l < .01 && (l = .01), r.set_entry(e, i, l);\n      const c = (t < 250 ? .5 : .8) * a - n * l * o;\n      s.set_entry(e, i, c), h.set_entry(e, i, h.entry(e, i) + c), d[i] += h.entry(e, i);\n    }\n\n    for (let t = 0; t < i; ++t) for (let e = 0; e < 2; ++e) h.set_entry(t, e, h.entry(t, e) - d[e] / i);\n\n    return this.Y;\n  }\n\n}\n\nfunction N(t, e, s = 300) {\n  const r = e.length;\n  let i = .001,\n      n = 1e4,\n      o = e.slice(),\n      h = t(o),\n      a = !1;\n\n  for (; s-- >= 0 && !a;) {\n    a = !0;\n\n    for (let e = 0; e < r; ++e) {\n      o[e] += 1e-6;\n      let s = t(o);\n      o[e] -= 1e-6;\n      let r = (s - h) / 1e-6;\n      Math.abs(r) > .01 && (a = !1), o[e] -= i * r, h = t(o);\n    }\n\n    i *= n >= h ? 1.05 : .4, n = h;\n  }\n\n  return o;\n}\n\nclass Y extends g {\n  constructor(e, s = 15, r = 1, i = 1, n = 2, o = t, h = 1212) {\n    return super(e, n, o, h), super.parameter_list = [\"n_neighbors\", \"local_connectivity\", \"min_dist\"], [this._N, this._D] = this.X.shape, s = Math.min(this._N - 1, s), this.parameter(\"n_neighbors\", s), this.parameter(\"local_connectivity\", Math.min(r, s - 1)), this.parameter(\"min_dist\", i), this._iter = 0, this._spread = 1, this._set_op_mix_ratio = 1, this._repulsion_strength = 1, this._negative_sample_rate = 5, this._n_epochs = 350, this._initial_alpha = 1, this.Y = new _(this._N, this._d, () => this._randomizer.random), this;\n  }\n\n  _find_ab_params(t, e) {\n    const r = c(0, 3 * t, 300),\n          i = c(0, 3 * t, 300);\n\n    for (let s = 0, n = r.length; s < n; ++s) {\n      const n = r[s];\n      i[s] = n < e ? 1 : Math.exp(-(n - e) / t);\n    }\n\n    return N(t => {\n      const e = c(1, 300).map((e, s) => {\n        return i[s] - (n = r[s], o = t[0], h = t[1], 1 / (1 + o * Math.pow(n, 2 * h)));\n        var n, o, h;\n      });\n      return Math.sqrt(s(e.map(t => t * t)));\n    }, [1, 1]);\n  }\n\n  _compute_membership_strengths(t, e, s) {\n    for (let r = 0, i = t.length; r < i; ++r) for (let i = 0, n = t[r].length; i < n; ++i) {\n      const n = t[r][i].value - s[r];\n      t[r][i].value = n > 0 ? Math.exp(-n / e[r]) : 1;\n    }\n\n    return t;\n  }\n\n  _smooth_knn_dist(t, e) {\n    const s = 1e-5,\n          r = .001,\n          i = this._local_connectivity,\n          n = Math.log2(e),\n          o = [],\n          h = [],\n          a = this.X,\n          _ = [...a].map(s => t.search(s, e).raw_data().reverse());\n\n    for (let t = 0, l = a.shape[0]; t < l; ++t) {\n      let a = 0,\n          l = 1 / 0,\n          c = 1;\n      const u = _[t],\n            f = u.filter(t => t.value > 0),\n            d = f.length;\n\n      if (d >= i) {\n        const e = Math.floor(i),\n              r = i - e;\n        e > 0 ? (o.push(f[e - 1]), r > s && (o[t].value += r * (f[e].value - f[e - 1]))) : o[t].value = r * f[0].value;\n      } else d > 0 && (o[t] = f[d - 1].value);\n\n      for (let r = 0; r < 64; ++r) {\n        let r = 0;\n\n        for (let s = 0; s < e; ++s) {\n          const e = u[s].value - o[t];\n          r += e > 0 ? Math.exp(-e / c) : 1;\n        }\n\n        if (Math.abs(r - n) < s) break;\n        r > n ? [l, c] = [c, (a + l) / 2] : [a, c] = l === 1 / 0 ? [c, 2 * c] : [c, (a + l) / 2];\n      }\n\n      h[t] = c;\n      const p = u.reduce((t, e) => t + e.value, 0) / u.length;\n      if (o[t] > 0) h[t] < r * p && (h[t] = r * p);else {\n        const e = _.reduce((t, e) => t + e.reduce((t, e) => t + e.value, 0) / e.length);\n\n        h[t] > r * e && (h[t] = r * e);\n      }\n    }\n\n    return {\n      distances: _,\n      sigmas: h,\n      rhos: o\n    };\n  }\n\n  _fuzzy_simplicial_set(e, s) {\n    const r = e.shape[0],\n          i = new m(e.to2dArray, t);\n\n    let {\n      distances: n,\n      sigmas: o,\n      rhos: h\n    } = this._smooth_knn_dist(i, s);\n\n    n = this._compute_membership_strengths(n, o, h);\n    const a = new _(r, r, \"zeros\");\n\n    for (let t = 0; t < r; ++t) {\n      const e = n[t];\n\n      for (let s = 0; s < e.length; ++s) a.set_entry(t, e[s].element.index, e[s].value);\n    }\n\n    const l = a.T,\n          c = a.mult(l);\n    return a.add(l).sub(c).mult(this._set_op_mix_ratio).add(c.mult(1 - this._set_op_mix_ratio));\n  }\n\n  _make_epochs_per_sample(t) {\n    const e = this._weights,\n          s = new Float32Array(e.length).fill(-1),\n          r = d(e),\n          i = e.map(e => t * (e / r));\n\n    for (let e = 0; e < s.length; ++e) i[e] > 0 && (s[e] = Math.round(t / i[e]));\n\n    return s;\n  }\n\n  _tocoo(t) {\n    const e = [],\n          s = [],\n          r = [],\n          [i, n] = t.shape;\n\n    for (let o = 0; o < i; ++o) for (let i = 0; i < n; ++i) {\n      const n = t.entry(o, i);\n      0 !== n && (e.push(o), s.push(i), r.push(n));\n    }\n\n    return {\n      rows: e,\n      cols: s,\n      data: r\n    };\n  }\n\n  init() {\n    const [t, e] = this._find_ab_params(this._spread, this._min_dist);\n\n    this._a = t, this._b = e, this._graph = this._fuzzy_simplicial_set(this.X, this._n_neighbors);\n\n    const {\n      rows: s,\n      cols: r,\n      data: i\n    } = this._tocoo(this._graph);\n\n    return this._head = s, this._tail = r, this._weights = i, this._epochs_per_sample = this._make_epochs_per_sample(this._n_epochs), this._epochs_per_negative_sample = this._epochs_per_sample.map(t => t * this._negative_sample_rate), this._epoch_of_next_sample = this._epochs_per_sample.slice(), this._epoch_of_next_negative_sample = this._epochs_per_negative_sample.slice(), this;\n  }\n\n  set local_connectivity(t) {\n    this._local_connectivity = t;\n  }\n\n  get local_connectivity() {\n    return this._local_connectivity;\n  }\n\n  set min_dist(t) {\n    this._min_dist = t;\n  }\n\n  get min_dist() {\n    return this._min_dist;\n  }\n\n  graph() {\n    return this.check_init(), {\n      cols: this._head,\n      rows: this._tail,\n      weights: this._weights\n    };\n  }\n\n  transform(t) {\n    this.check_init(), t = t || this._n_epochs;\n\n    for (let e = 0; e < t; ++e) this.next();\n\n    return this.projection;\n  }\n\n  *generator() {\n    for (this.check_init(), this._iter = 0; this._iter < this._n_epochs;) this.next(), yield this.projection;\n\n    return this.projection;\n  }\n\n  _clip(t) {\n    return t > 4 ? 4 : t < -4 ? -4 : t;\n  }\n\n  _optimize_layout(t, e, s, i) {\n    const {\n      _d: n,\n      _alpha: o,\n      _repulsion_strength: h,\n      _a: a,\n      _b: _,\n      _epochs_per_sample: l,\n      _epochs_per_negative_sample: c,\n      _epoch_of_next_negative_sample: u,\n      _epoch_of_next_sample: f,\n      _clip: d\n    } = this,\n          p = i.length;\n\n    for (let m = 0, y = l.length; m < y; ++m) if (f[m] <= this._iter) {\n      const y = s[m],\n            w = i[m],\n            g = t.row(y),\n            x = e.row(w),\n            A = r(g, x);\n      let M = 0;\n      A > 0 && (M = -2 * a * _ * Math.pow(A, _ - 1) / (a * Math.pow(A, _) + 1));\n\n      for (let s = 0; s < n; ++s) {\n        const r = d(M * (g[s] - x[s])) * o,\n              i = g[s] + r,\n              n = x[s] - r;\n        g[s] = i, x[s] = n, t.set_entry(y, s, i), e.set_entry(w, s, n);\n      }\n\n      f[m] += l[m];\n      const v = (this._iter - u[m]) / c[m];\n\n      for (let s = 0; s < v; ++s) {\n        const s = Math.floor(this._randomizer.random * p),\n              l = e.row(i[s]),\n              c = r(g, l);\n        let u = 0;\n        if (c > 0) u = 2 * h * _ / ((.01 + c) * (a * Math.pow(c, _) + 1));else if (y === s) continue;\n\n        for (let r = 0; r < n; ++r) {\n          const n = d(u * (g[r] - l[r])) * o,\n                h = g[r] + n,\n                a = l[r] - n;\n          g[r] = h, l[r] = a, t.set_entry(y, r, h), e.set_entry(i[s], r, a);\n        }\n      }\n\n      u[m] += v * c[m];\n    }\n\n    return t;\n  }\n\n  next() {\n    let t = ++this._iter,\n        e = this.Y;\n    return this._alpha = this._initial_alpha * (1 - t / this._n_epochs), this.Y = this._optimize_layout(e, e, this._head, this._tail), this.Y;\n  }\n\n}\n\nclass F extends g {\n  constructor(e, s = 500, r = 5, i = 2, n = t, o = 1212) {\n    return super(e, i, n, o), super.parameter_list = [\"weight_adj\", \"c\"], this.parameter(\"weight_adj\", s), this.parameter(\"c\", r), this;\n  }\n\n  init(t = null, e = null) {\n    const s = this.X,\n          r = s.shape[0],\n          i = this._d,\n          n = this._metric,\n          o = this._c;\n    this.n_inliers = 2 * o, this.n_outliers = 1 * o, this.n_random = 1 * o, this.Y = t || new x(s, i).transform(), this.knn = e || new m(s.to2dArray, n);\n\n    const {\n      triplets: h,\n      weights: a\n    } = this._generate_triplets(this.n_inliers, this.n_outliers, this.n_random);\n\n    return this.triplets = h, this.weights = a, this.lr = 1e3 * r / h.shape[0], this.C = 1 / 0, this.tol = 1e-7, this.vel = new _(r, i, 0), this.gain = new _(r, i, 1), this;\n  }\n\n  _generate_triplets(t, e, s) {\n    const r = this._metric,\n          i = this._weight_adj,\n          n = this.X,\n          o = n.shape[0],\n          h = this.knn,\n          a = Math.min(t + 20, o),\n          l = new _(o, a),\n          c = new _(o, a);\n\n    for (let t = 0; t < o; ++t) h.search(n.row(t), a + 1).raw_data().filter(t => 0 != t.value).sort((t, e) => t.value - e.value).forEach((e, s) => {\n      l.set_entry(t, s, e.element.index), c.set_entry(t, s, e.value);\n    });\n\n    const u = new Float64Array(o);\n\n    for (let t = 0; t < o; ++t) u[t] = Math.max((c.entry(t, 3) + c.entry(t, 4) + c.entry(t, 5) + c.entry(t, 6)) / 4, 1e-10);\n\n    const f = this._find_p(c, u, l);\n\n    let d = this._sample_knn_triplets(f, l, t, e),\n        p = d.shape[0];\n\n    const m = new Float64Array(p);\n\n    for (let t = 0; t < p; ++t) {\n      const e = d.entry(t, 0),\n            s = d.entry(t, 2);\n      m[t] = r(n.row(e), n.row(s));\n    }\n\n    let y = this._find_weights(d, f, l, m, u);\n\n    if (s > 0) {\n      const {\n        random_triplets: t,\n        random_weights: e\n      } = this._sample_random_triplets(n, s, u);\n\n      d = d.concat(t, \"vertical\"), y = Float64Array.from([...y, ...e]);\n    }\n\n    p = d.shape[0];\n    let w = -1 / 0;\n\n    for (let t = 0; t < p; ++t) isNaN(y[t]) && (y[t] = 0), w < y[t] && (w = y[t]);\n\n    let g = -1 / 0;\n\n    for (let t = 0; t < p; ++t) y[t] /= w, y[t] += 1e-4, y[t] = Math.log(1 + i * y[t]), g < y[t] && (g = y[t]);\n\n    for (let t = 0; t < p; ++t) y[t] /= g;\n\n    return {\n      triplets: d,\n      weights: y\n    };\n  }\n\n  _find_p(t, e, s) {\n    const [r, i] = t.shape;\n    return new _(r, i, (r, i) => Math.exp(-(t.entry(r, i) ** 2) / e[r] / e[s.entry(r, i)]));\n  }\n\n  _sample_knn_triplets(t, e, s, r) {\n    const i = e.shape[0],\n          n = new _(i * s * r, 3);\n\n    for (let o = 0; o < i; ++o) {\n      let h = o * s * r;\n\n      const a = this.__argsort(t.row(o).map(t => -t));\n\n      for (let t = 0; t < s; ++t) {\n        let s = t * r;\n\n        const _ = e.entry(o, a[t]),\n              l = this._rejection_sample(r, i, a.slice(0, t + 1));\n\n        for (let t = 0; t < r; ++t) {\n          const e = h + s + t,\n                r = l[t];\n          n.set_entry(e, 0, o), n.set_entry(e, 1, _), n.set_entry(e, 2, r);\n        }\n      }\n    }\n\n    return n;\n  }\n\n  __argsort(t) {\n    return t.map((t, e) => ({\n      d: t,\n      i: e\n    })).sort((t, e) => t.d - e.d).map(t => t.i);\n  }\n\n  _rejection_sample(t, e, s) {\n    const r = this._randomizer,\n          i = c(0, e - 1).filter(t => s.indexOf(t) < 0);\n    return r.choice(i, Math.min(t, i.length - 2));\n  }\n\n  _find_weights(t, e, s, r, i) {\n    const n = t.shape[0],\n          o = new Float64Array(n);\n\n    for (let h = 0; h < n; ++h) {\n      const n = t.entry(h, 0),\n            a = s.row(n).indexOf(t.entry(h, 1)),\n            _ = e.entry(n, a);\n\n      let l = Math.exp(-(r[h] ** 2) / (i[n] * i[t.entry(h, 2)]));\n      l < 1e-20 && (l = 1e-20), o[h] = _ / l;\n    }\n\n    return o;\n  }\n\n  _sample_random_triplets(t, e, s) {\n    const r = this._metric,\n          i = this._randomizer,\n          n = t.shape[0],\n          o = new _(n * e, 3),\n          h = new Float64Array(n * e);\n\n    for (let a = 0; a < n; ++a) {\n      const _ = a * e,\n            l = [...c(0, a - 1), ...c(a + 1, n - 1)];\n\n      for (let n = 0; n < e; ++n) {\n        let [e, c] = i.choice(l, 2),\n            u = Math.exp(-(r(t.row(a), t.row(e)) ** 2) / (s[a] * s[e]));\n        u < 1e-20 && (u = 1e-20);\n        let f = Math.exp(-(r(t.row(a), t.row(c)) ** 2) / (s[a] * s[c]));\n        f < 1e-20 && (f = 1e-20), u < f && ([e, c] = [c, e], [u, f] = [f, u]);\n        const d = _ + n;\n        o.set_entry(d, 0, a), o.set_entry(d, 1, e), o.set_entry(d, 2, c), h[d] = u / f;\n      }\n    }\n\n    return {\n      random_triplets: o,\n      random_weights: h\n    };\n  }\n\n  _grad(t) {\n    const e = this.n_inliers,\n          s = this.n_outliers,\n          r = this.triplets,\n          i = this.weights,\n          [n, o] = t.shape,\n          h = r.shape[0],\n          a = new _(n, o, 0);\n    let l = new Array(o).fill(0),\n        c = new Array(o).fill(0),\n        u = 1,\n        f = 1,\n        d = 0,\n        p = 0;\n    const m = n * e * s;\n\n    for (let e = 0; e < h; ++e) {\n      const [n, h, _] = r.row(e);\n\n      if (e % s == 0 || e >= m) {\n        u = 1, f = 1;\n\n        for (let e = 0; e < o; ++e) {\n          const s = t.entry(n, e),\n                r = t.entry(h, e),\n                i = t.entry(_, e);\n          l[e] = s - r, c[e] = s - i, u += l[e] ** 2, f += c[e] ** 2;\n        }\n      } else {\n        f = 1;\n\n        for (let e = 0; e < o; ++e) {\n          const s = t.entry(n, e),\n                r = t.entry(_, e);\n          c[e] = s - r, f += c[e] ** 2;\n        }\n      }\n\n      u > f && ++d, p += i[e] / (1 + f / u);\n      const y = (i[e] / (u + f)) ** 2;\n\n      for (let t = 0; t < o; ++t) {\n        const e = l[t] * f * y,\n              s = c[t] * u * y;\n        a.set_entry(n, t, a.entry(n, t) + e - s), a.set_entry(h, t, a.entry(h, t) - e), a.set_entry(_, t, a.entry(_, t) + s);\n      }\n    }\n\n    return {\n      grad: a,\n      loss: p,\n      n_viol: d\n    };\n  }\n\n  transform(t = 400) {\n    this.check_init();\n\n    for (let e = 0; e < t; ++e) this._next(e);\n\n    return this.projection;\n  }\n\n  *generator() {\n    this.check_init();\n\n    for (let t = 0; t < 800; ++t) this._next(t), yield this.projection;\n\n    return this.projection;\n  }\n\n  _next(t) {\n    const e = t > 150 ? .5 : .3,\n          s = this.C,\n          r = this.vel,\n          i = this.Y.add(r.mult(e)),\n          {\n      grad: n,\n      loss: o,\n      n_viol: h\n    } = this._grad(i);\n\n    return this.C = o, this.Y = this._update_embedding(i, t, n), this.lr *= s > o + this.tol ? 1.01 : .9, this.Y;\n  }\n\n  _update_embedding(t, e, s) {\n    const [r, i] = t.shape,\n          n = e > 150 ? .9 : .5,\n          o = this.gain,\n          h = this.vel,\n          a = this.lr;\n\n    for (let e = 0; e < r; ++e) for (let r = 0; r < i; ++r) {\n      const i = Math.sign(h.entry(e, r)) != Math.sign(s.entry(e, r)) ? o.entry(e, r) + .2 : Math.max(.8 * o.entry(e, r), .01);\n      o.set_entry(e, r, i), h.set_entry(e, r, n * h.entry(e, r) - a * o.entry(e, r) * s.entry(e, r)), t.set_entry(e, r, t.entry(e, r) + h.entry(e, r));\n    }\n\n    return t;\n  }\n\n}\n\nclass E {\n  constructor(e, s = \"single\", r = t) {\n    return this._id = 0, this._matrix = e, this._metric = r, this._linkage = s, this.init(), this.root = this.do(), this;\n  }\n\n  get_clusters(t, e = \"distance\") {\n    let s,\n        r = [];\n\n    switch (e) {\n      case \"distance\":\n        s = t => t.dist;\n\n        break;\n\n      case \"depth\":\n        s = t => t.depth;\n\n        break;\n\n      default:\n        throw \"invalid type\";\n    }\n\n    return this._traverse(this.root, s, t, r), r;\n  }\n\n  _traverse(t, e, s, r) {\n    e(t) <= s ? r.push(t.leaves()) : (this._traverse(t.left, e, s, r), this._traverse(t.right, e, s, r));\n  }\n\n  init() {\n    const t = this._metric,\n          e = this._matrix,\n          s = this._n = e.shape[0],\n          r = this._d_min = new Float64Array(s),\n          i = this._distance_matrix = new Array(s);\n\n    for (let n = 0; n < s; ++n) {\n      r[n] = 0, i[n] = new Float64Array(s);\n\n      for (let o = 0; o < s; ++o) i[n][o] = n === o ? 1 / 0 : t(e.row(n), e.row(o)), i[n][r[n]] > i[n][o] && (r[n] = o);\n    }\n\n    const n = this._clusters = new Array(s),\n          o = this._c_size = new Uint16Array(s);\n\n    for (let t = 0; t < s; ++t) n[t] = [], n[t][0] = new D(this._id++, null, null, 0, e.row(t), t, 1, 0), o[t] = 1;\n\n    return this;\n  }\n\n  do() {\n    const t = this._n,\n          e = this._d_min,\n          s = this._distance_matrix,\n          r = this._clusters,\n          i = this._c_size,\n          n = this._linkage;\n    let o = null;\n\n    for (let h = 0, a = t - 1; h < a; ++h) {\n      let h = 0;\n\n      for (let r = 0; r < t; ++r) s[r][e[r]] < s[h][e[h]] && (h = r);\n\n      let a = e[h],\n          _ = r[h][0],\n          l = r[a][0],\n          c = new D(this._id++, _, l, s[h][a]);\n      r[h].unshift(c), i[h] += i[a];\n\n      for (let e = 0; e < t; ++e) switch (n) {\n        case \"single\":\n          s[h][e] > s[a][e] && (s[e][h] = s[h][e] = s[a][e]);\n          break;\n\n        case \"complete\":\n          s[h][e] < s[a][e] && (s[e][h] = s[h][e] = s[a][e]);\n          break;\n\n        case \"average\":\n          s[e][h] = s[h][e] = (i[h] * s[h][e] + i[a] * s[a][e]) / (i[h] + i[e]);\n      }\n\n      s[h][h] = 1 / 0;\n\n      for (let e = 0; e < t; ++e) s[e][a] = s[a][e] = 1 / 0;\n\n      for (let r = 0; r < t; ++r) e[r] === a && (e[r] = h), s[h][r] < s[h][e[h]] && (e[h] = r);\n\n      o = c;\n    }\n\n    return o;\n  }\n\n}\n\nclass D {\n  constructor(t, e, s, r, i, n, o, h) {\n    return this.id = t, this.left = e, this.right = s, this.dist = r, this.index = n, this.size = null != o ? o : e.size + s.size, this.depth = null != h ? h : 1 + Math.max(e.depth, s.depth), this.centroid = null != i ? i : this._calculate_centroid(e, s), this;\n  }\n\n  _calculate_centroid(t, e) {\n    const s = t.size,\n          r = e.size,\n          i = t.centroid,\n          n = e.centroid,\n          o = this.size,\n          h = t.centroid.length,\n          a = new Float64Array(h);\n\n    for (let t = 0; t < h; ++t) a[t] = (s * i[t] + r * n[t]) / o;\n\n    return a;\n  }\n\n  get isLeaf() {\n    return 0 === this.depth;\n  }\n\n  leaves() {\n    if (this.isLeaf) return [this.index];\n    const t = this.left,\n          e = this.right;\n    return (t.isLeaf ? [t.index] : t.leaves()).concat(e.isLeaf ? [e.index] : e.leaves());\n  }\n\n}\n\nclass $ {\n  constructor(e, s, r = t, i = 1987, n = !0) {\n    this._metric = r, this._matrix = e, this._K = s;\n    const [o, h] = e.shape;\n    return this._N = o, this._D = h, s > o && (s = o), this._randomizer = new f(i), this._clusters = new Array(o).fill(void 0), this._cluster_centroids = this._get_random_centroids(s), n && this.init(s, this._cluster_centroids), this;\n  }\n\n  get_clusters() {\n    const t = this._K,\n          e = this._clusters,\n          s = new Array(t).fill().map(() => new Array());\n    return e.forEach((t, e) => s[t].push(e)), s;\n  }\n\n  _furthest_point(t, e) {\n    const s = this._matrix,\n          r = this._metric;\n    let i = t.length;\n    return p.heapify(e, e => {\n      const n = s.row(e);\n      let o = 0;\n\n      for (let e = 0; e < i; ++e) o += r(n, t[e]);\n\n      return o;\n    }, \"max\").pop().element;\n  }\n\n  _get_random_centroids(t) {\n    const e = this._N,\n          s = this._randomizer,\n          r = this._matrix,\n          i = new Array(t).fill(),\n          n = c(0, e - 1),\n          o = s.random_int % (e - 1);\n    i[0] = r.row(o);\n    const h = [o],\n          a = Math.floor((e - t) / t);\n\n    for (let e = 1; e < t; ++e) {\n      const t = s.choice(n.filter(t => -1 == h.indexOf(t)), a),\n            o = this._furthest_point(i.slice(0, e), t);\n\n      h.push(o), i[e] = r.row(o);\n    }\n\n    return i;\n  }\n\n  _iteration(t) {\n    const e = t.length,\n          s = this._N,\n          r = this._D,\n          i = this._matrix,\n          n = this._metric,\n          o = this._clusters;\n    let h = !1;\n\n    for (let r = 0; r < s; ++r) {\n      const s = i.row(r);\n      let a = 1 / 0,\n          _ = null;\n\n      for (let r = 0; r < e; ++r) {\n        let e = n(t[r], s);\n        e < a && (a = e, _ = r);\n      }\n\n      o[r] !== _ && (h = !0), o[r] = _;\n    }\n\n    for (let s = 0; s < e; ++s) {\n      const e = t[s];\n\n      for (let t = 0; t < r; ++t) e[t] = 0;\n    }\n\n    return this._compute_centroid(t), {\n      clusters_changed: h,\n      cluster_centroids: t\n    };\n  }\n\n  _compute_centroid(t) {\n    const e = t.length,\n          s = this._N,\n          r = this._D,\n          i = this._matrix,\n          n = this._clusters,\n          o = new Array(e).fill(0);\n\n    for (let e = 0; e < s; ++e) {\n      const s = i.row(e),\n            h = n[e];\n      o[h]++;\n      const a = t[h];\n\n      for (let t = 0; t < r; ++t) a[t] += s[t];\n    }\n\n    for (let s = 0; s < e; ++s) {\n      const e = o[s];\n      t[s] = t[s].map(t => t / e);\n    }\n  }\n\n  init(t, e) {\n    t || (t = this._K), e || (e = this._get_random_centroids(t));\n    let s = !1;\n\n    do {\n      const t = this._iteration(e);\n\n      e = t.cluster_centroids, s = t.clusters_changed;\n    } while (s);\n  }\n\n}\n\nclass L {\n  constructor(e, s, r = null, i = t, n = 1212) {\n    this._metric = i, this._matrix = e, this._A = this._matrix.to2dArray, this._K = s;\n    const [o, h] = e.shape;\n    return this._N = o, this._D = h, this._max_iter = r || 10 * Math.log10(o), this._distance_matrix = new _(o, o, \"zeros\"), s > o && (s = o), this._randomizer = new f(n), this._clusters = new Array(o).fill(void 0), this._cluster_medoids = this._get_random_medoids(s), this._is_initialized = !1, this;\n  }\n\n  get_clusters() {\n    const t = this._K,\n          e = this._A;\n    this._is_initialized || this.init(t, this._cluster_medoids);\n    const s = new Array(t).fill().map(() => new Array());\n    return e.forEach((t, e) => {\n      s[this._nearest_medoid(t, e).index_nearest].push(e);\n    }), s.medoids = this._cluster_medoids, s;\n  }\n\n  async *generator() {\n    const t = this._max_iter;\n    yield this.get_clusters();\n    let e = !1,\n        s = 0;\n\n    do {\n      e = this._iteration(), yield this.get_clusters();\n    } while (!e && ++s < t);\n  }\n\n  _iteration() {\n    const t = this._A,\n          e = this._K,\n          s = this._cluster_medoids,\n          r = t.map((t, e) => this._nearest_medoid(t, e)),\n          i = new Array(e).fill(0),\n          n = new Array(e).fill(null);\n    if (t.forEach((o, h) => {\n      if (s.findIndex(t => t === h) < 0) {\n        const s = r[h].distance_nearest,\n              a = new Array(e).fill(-s);\n        t.forEach((t, s) => {\n          if (h === s) return;\n\n          const i = this._get_distance(s, h, t, o),\n                {\n            index_nearest: n,\n            distance_nearest: _,\n            distance_second: l\n          } = r[s];\n\n          if (a[n] += Math.min(i, l) - _, i < _) for (let t = 0; t < e; ++t) t !== n && (a[t] += i - _);\n        }), a.map((t, e) => [t, e]).filter(([t, e]) => t < i[e]).forEach(([t, e]) => {\n          t < i[e] && (i[e] = t, n[e] = h);\n        });\n      }\n    }), Math.min(...i) >= 0) return !0;\n\n    for (; Math.min(...i) < 0;) {\n      const e = i.map((t, e) => [t, e]).sort(([t], [e]) => t - e)[0][1];\n      0 == s.filter(t => t == n[e]).length && (s[e] = n[e]), i[e] = 0, i.map((t, e) => [t, e]).filter(([t]) => t < 0).forEach(([n, o]) => {\n        const h = t[o];\n        let a = 0;\n        t.forEach((t, i) => {\n          s.findIndex(t => t != o && t == i) >= 0 || e != o && (r[i].index_nearest === s[o] ? a += Math.min(this._get_distance(i, o, t, h), r[i].distance_second) - r[i].distance_nearest : a += Math.min(this._get_distance(i, o, t, h) - r[i].distance_nearest, 0));\n        }), i[o] = a;\n      });\n    }\n\n    return this._cluster_medoids = s, !1;\n  }\n\n  _get_distance(t, e, s = null, r = null) {\n    if (t === e) return 0;\n    const i = this._distance_matrix,\n          n = this._A,\n          o = this._metric;\n    let h = i.entry(t, e);\n    return 0 === h && (h = o(s || n[t], r || n[e]), i.set_entry(t, e, h), i.set_entry(e, t, h)), h;\n  }\n\n  _nearest_medoid(t, e) {\n    const s = this._cluster_medoids,\n          r = this._A,\n          [i, n] = s.map((s, i) => {\n      const n = r[s];\n      return [this._get_distance(e, s, t, n), i];\n    }).sort((t, e) => t[0] - e[0]);\n    return {\n      distance_nearest: i[0],\n      index_nearest: i[1],\n      distance_second: n[0],\n      index_second: n[1]\n    };\n  }\n\n  init(t, e) {\n    t || (t = this._K), e || (e = this._get_random_medoids(t));\n    const s = this._max_iter;\n    let r = !1,\n        i = 0;\n\n    do {\n      r = this._iteration();\n    } while (!r && ++i < s);\n\n    return this;\n  }\n\n  _get_random_medoids(t) {\n    const e = this._N,\n          s = this._A,\n          r = c(0, e - 1),\n          i = this._randomizer,\n          n = Math.min(e, 10 + Math.ceil(Math.sqrt(e))),\n          o = new Array(n).fill(1 / 0),\n          h = [];\n\n    let a = 1 / 0,\n        _ = i.choice(r, n);\n\n    for (let t = 0; t < n; ++t) {\n      const e = _[t],\n            r = s[e];\n\n      for (let e = 0; e < n; ++e) {\n        if (e === t) continue;\n        const i = s[_[e]];\n        o[t] += this._get_distance(t, e, r, i);\n      }\n\n      o[t] < a && (a = o[t], h.push(e));\n    }\n\n    for (let e = 1; e < t; ++e) {\n      let t = 1 / 0;\n      _ = i.choice(r.filter(t => h.findIndex(e => e === t) < 0), n);\n\n      for (let e = 0; e < n; ++e) {\n        let r = 0;\n        const i = _[e],\n              o = s[i];\n\n        for (let t = 0; t < n; ++t) {\n          if (t === e) continue;\n          const n = _[t],\n                a = s[n];\n          let l = this._get_distance(i, n, o, a) - Math.min(...h.map(t => this._get_distance(n, t, a)));\n          l < 0 && (r += l);\n        }\n\n        r < t && (t = r, h.push(i));\n      }\n\n      a += t;\n    }\n\n    return h.slice(0, t);\n  }\n\n}\n\nclass T {\n  constructor(e, s, r, i = t) {\n    return this._matrix = e, this._epsilon = s, this._min_points = r, this._metric = i, this._ordered_list = [], this._clusters = [], this._DB = new Array(e.shape[0]).fill(), this.init(), this;\n  }\n\n  init() {\n    const t = this._ordered_list,\n          e = this._matrix,\n          s = e.shape[0],\n          r = this._DB,\n          i = this._clusters;\n    let n = this._cluster_index = 0;\n\n    for (let t = 0; t < s; ++t) r[t] = {\n      element: e.row(t),\n      index: t,\n      reachability_distance: void 0,\n      processed: !1\n    };\n\n    for (const e of r) if (!e.processed && (e.neighbors = this._get_neighbors(e), e.processed = !0, i.push([e.index]), n = i.length - 1, t.push(e), null != this._core_distance(e))) {\n      const t = new p(null, t => t.reachability_distance, \"min\");\n      this._update(e, t), this._expand_cluster(t, i[n]);\n    }\n\n    return this;\n  }\n\n  _get_neighbors(t) {\n    if (\"neighbors\" in t) return t.neighbors;\n    const e = this._DB,\n          s = this._metric,\n          r = this._epsilon,\n          i = [];\n\n    for (const n of e) n.index != t.index && s(t.element, n.element) < r && i.push(n);\n\n    return i;\n  }\n\n  _core_distance(t) {\n    const e = this._min_points,\n          s = this._metric;\n    if (!(t.neighbors && t.neighbors.length <= e)) return s(t.element, t.neighbors[e].element);\n  }\n\n  _update(t, e) {\n    const s = this._metric,\n          r = this._core_distance(t),\n          i = this._get_neighbors(t);\n\n    for (const n of i) {\n      if (n.processed) continue;\n      const i = Math.max(r, s(t.element, n.element));\n      e.raw_data().findIndex(t => t.element == n) < 0 ? (n.reachability_distance = i, e.push(n)) : i < n.reachability_distance && (n.reachability_distance = i, e = p.heapify(e.data(), t => t.reachability_distance, \"min\"));\n    }\n  }\n\n  _expand_cluster(t, e) {\n    const s = this._ordered_list;\n\n    for (; !t.empty;) {\n      const r = t.pop().element;\n      r.neighbors = this._get_neighbors(r), r.processed = !0, e.push(r.index), s.push(r), null != this._core_distance(r) && (this._update(r, t), this._expand_cluster(t, e));\n    }\n  }\n\n  get_clusters() {\n    const t = [],\n          e = [],\n          s = this._min_points;\n\n    for (const r of this._clusters) r.length < s ? e.push(...r) : t.push(r);\n\n    return t.push(e), t;\n  }\n\n  get_cluster_affirmation() {\n    const t = this._matrix.shape[0],\n          e = new Array(t).fill(),\n          s = this.get_clusters();\n\n    for (let t = 0, r = s.length; t < r; ++t) {\n      const i = s[t];\n\n      for (const s of i) e[s] = t < r - 1 ? t : -1;\n    }\n\n    return e;\n  }\n\n}\n\nclass B extends g {\n  constructor(e, s, r, i = 2, n = t, o = 1212) {\n    return super(e, i, n, o), super.parameter_list = [\"k\", \"control_points\"], this.parameter(\"k\", Math.min(s !== null && s !== void 0 ? s : Math.max(Math.floor(this._N / 10), 2), this._N - 1)), this.parameter(\"control_points\", Math.min(r !== null && r !== void 0 ? r : Math.ceil(Math.sqrt(this._N)), this._N - 1)), this._is_initialized = !1, this;\n  }\n\n  init(t = A, e = [], s = m) {\n    if (this._is_initialized) return this;\n    const r = this.X,\n          i = this._N,\n          n = this.parameter(\"k\"),\n          o = this._d,\n          h = this._metric,\n          a = this.parameter(\"control_points\"),\n          l = new L(r, a, null, h).get_clusters().medoids,\n          c = new _(a, i, \"zeros\");\n    l.forEach((t, e) => {\n      c.set_entry(e, t, 1);\n    });\n    const u = new t(_.from(l.map(t => r.row(t))), ...e, o).transform(),\n          f = r.to2dArray,\n          d = new s(f, h),\n          p = new _(i, i, \"I\"),\n          y = -1 / n;\n    f.forEach((t, e) => {\n      for (const {\n        index: s\n      } of d.search(t, n).iterate()) e !== s && p.set_entry(e, s, y);\n    });\n    const w = p.concat(c, \"vertical\"),\n          g = new _(i, o, \"zeros\").concat(u, \"vertical\");\n    return this._A = w, this._b = g, this._is_initialized = !0, this;\n  }\n\n  transform() {\n    this.check_init();\n    const t = this._A,\n          e = t.T,\n          s = this._b,\n          r = e.dot(t),\n          i = e.dot(s);\n    return this.Y = _.solve_CG(r, i, this._randomizer), this.projection;\n  }\n\n}\n\nclass K extends g {\n  constructor(_e, _s2 = 2, _r2 = t, _i = 1212) {\n    var _temp;\n\n    return (_temp = super(_e, _s2, _r2, _i), this.__align_components = (t, e, s) => {\n      const r = [...t.__disjoint_set.children],\n            i = [...e.__disjoint_set.children],\n            n = this.__hull(r),\n            o = this.__hull(i),\n            h = this.__align_hull(n, t, !1),\n            a = this.__align_hull(o, e, !0);\n\n      this.__transform_component(r, h, 0), this.__transform_component(i, a, s);\n    }, _temp), super.parameter_list = [], [this._N, this._D] = this.X.shape, this._distance_matrix = new _(this._N, this._N, 0), this;\n  }\n\n  __lazy_distance_matrix(t, e, s) {\n    const r = this._distance_matrix,\n          i = this.X,\n          n = r.entry(t, e);\n\n    if (0 === n) {\n      let n = s(i.row(t), i.row(e));\n      return r.set_entry(t, e, n), r.set_entry(e, t, n), n;\n    }\n\n    return n;\n  }\n\n  _make_minimum_spanning_tree(e = t) {\n    const s = this._N,\n          r = [...this.X];\n    let i = new q(r);\n    const n = [];\n    let o = [];\n\n    for (let t = 0; t < s; ++t) for (let r = t + 1; r < s; ++r) o.push([t, r, this.__lazy_distance_matrix(t, r, e)]);\n\n    o = o.sort((t, e) => t[2] - e[2]);\n\n    for (const [t, e, s] of o) {\n      const o = i.find(r[t]),\n            h = i.find(r[e]);\n      o !== h && (n.push([t, e, s]), i.union(o, h));\n    }\n\n    return n.sort((t, e) => t[2] - e[2]);\n  }\n\n  init() {\n    return this.Y = new _(this._N, this._d, 0), this._Emst = this._make_minimum_spanning_tree(this._metric), this._is_initialized = !0, this;\n  }\n\n  __hull_cross([t, e], [s, r], [i, n]) {\n    return (s - t) * (n - e) - (r - e) * (i - t) <= 0;\n  }\n\n  __hull(t) {\n    const e = t.sort(([t, e], [s, r]) => e - r || t - s),\n          s = e.length;\n    if (s <= 2) return e;\n    const r = [];\n\n    for (let t = 0; t < s; ++t) {\n      for (; r.length >= 2 && this.__hull_cross(r[r.length - 2], r[r.length - 1], e[t]);) r.pop();\n\n      r.push(e[t]);\n    }\n\n    const i = [];\n\n    for (let t = s - 1; t >= 0; --t) {\n      for (; i.length >= 2 && this.__hull_cross(i[i.length - 2], i[i.length - 1], e[t]);) i.pop();\n\n      i.push(e[t]);\n    }\n\n    return i.pop(), r.pop(), r.concat(i);\n  }\n\n  __findAngle([e, s], [r, i]) {\n    const n = t([e, s], [r, i]);\n    if (0 === n) return {\n      sin: 0,\n      cos: 1\n    };\n    const o = [(r - e) / n, (i - s) / n],\n          h = o[0];\n    let a = Math.sqrt(1 - h * h);\n    return a = o[1] >= 0 ? -a : a, {\n      sin: a,\n      cos: h\n    };\n  }\n\n  __align_hull(e, s, r) {\n    let i,\n        n,\n        o,\n        h = -1;\n\n    for (let r = 0; r < e.length; ++r) {\n      const n = t(e[r], s);\n      (-1 === h || i > n) && (i = n, h = r);\n    }\n\n    r ? (n = e[h], o = e[(h + 1) % e.length]) : (0 == h && (h = e.length - 1), n = e[h], o = e[(h - 1) % e.length]);\n    const a = {\n      tx: -e[h][0],\n      ty: -e[h][1]\n    };\n\n    if (e.length >= 2) {\n      const {\n        sin: t,\n        cos: e\n      } = this.__findAngle(n, o);\n\n      a.sin = t, a.cos = e;\n    } else a.sin = 0, a.cos = 1;\n\n    return a;\n  }\n\n  __transform([t, e], {\n    tx: s,\n    ty: r,\n    sin: i,\n    cos: n\n  }) {\n    let o = t + s,\n        h = e + r;\n    return [o * n - h * i, o * i + h * n];\n  }\n\n  __transform_component(t, e, s) {\n    const r = t.length;\n\n    for (let i = 0; i < r; ++i) {\n      const r = t[i],\n            [n, o] = this.__transform(r, e);\n\n      r[0] = n, r[1] = o + s;\n    }\n  }\n\n  transform() {\n    this._is_initialized || this.init();\n    const t = this._Emst,\n          e = [...this.Y],\n          s = new q(e.map((t, e) => (t.i = e, t)));\n\n    for (const [r, i, n] of t) {\n      const t = s.find(e[r]),\n            o = s.find(e[i]);\n      t !== o && (this.__align_components(t, o, n), s.union(t, o));\n    }\n\n    return this.projection;\n  }\n\n  *generator() {\n    this._is_initialized || this.init();\n    const t = this._Emst,\n          e = [...this.Y],\n          s = new q(e.map((t, e) => (t.i = e, t)));\n\n    for (const [r, i, n] of t) {\n      const t = s.find(e[r]),\n            o = s.find(e[i]);\n      t !== o && (this.__align_components(t, o, n), s.union(t, o), yield this.projection);\n    }\n\n    return this.projection;\n  }\n\n}\n\nclass q {\n  constructor(t = null) {\n    if (this._list = new Set(), t) for (const e of t) this.make_set(e);\n    return this;\n  }\n\n  make_set(t) {\n    const e = this._list;\n    return e.has(t) || (e.add(t), t.__disjoint_set = {}, t.__disjoint_set.parent = t, t.__disjoint_set.children = new Set([t]), t.__disjoint_set.size = 1), this;\n  }\n\n  find(t) {\n    return this._list.has(t) ? t.__disjoint_set.parent !== t ? (t.__disjoint_set.children.add(...t), t.__disjoint_set.parent = this.find(t.__disjoint_set.parent), t.__disjoint_set.parent) : t : null;\n  }\n\n  union(t, e) {\n    let s = this.find(t),\n        r = this.find(e);\n    return s === r || (s.__disjoint_set.size < r.__disjoint_set.size && ([s, r] = [r, s]), r.__disjoint_set.parent = s, r.__disjoint_set.children.forEach(s.__disjoint_set.children.add, s.__disjoint_set.children), s.__disjoint_set.size += r.__disjoint_set.size), this;\n  }\n\n}\n\nclass R extends g {\n  constructor(e, s = 5, r = 2, i = t, n = 1212) {\n    return super(e, r, i, n), super.parameter_list = [\"max_halves\"], this.parameter(\"max_halves\", s), [this._N, this._D] = this.X.shape, this;\n  }\n\n  init(t = \"random\", e = null) {\n    const s = this._N,\n          r = this._d;\n\n    if (\"random\" === t) {\n      const t = this._randomizer;\n      console.log(t), this.Y = new _(s, r, () => t.random);\n    } else this.Y = t.transform(this.X);\n\n    const i = this.Y;\n    e || (e = new _(s, s));\n    const n = this._metric;\n    let o = new _(s, s),\n        h = new _(s, s);\n\n    for (let t = 0; t < s; ++t) {\n      const r = i.row(t);\n\n      for (let a = t; a < s; ++a) {\n        let s = t === a ? 1 : n(r, i.row(a)),\n            _ = 1 / s;\n\n        if (o.set_entry(t, a, s), o.set_entry(a, t, s), h.set_entry(t, a, _), h.set_entry(a, t, _), !e) {\n          let s = t === a ? 1 : n(X.row(t), X.row(a));\n          e.set_entry(t, a, s), e.set_entry(a, t, s);\n        }\n      }\n    }\n\n    let a = e._apply(1, (t, e) => e / t),\n        l = e.sub(o),\n        c = l._apply(2, (t, e) => Math.pow(t, e)).mult(a);\n\n    return console.log(c), this._distance_matrix = o, this._distance_inverse_matrix = h, this._Distance_matrix = e, this._Distance_inverse_matrix = h, this._delta = l, this._ones = new _(s, r, 1), this._E = c.sum, this;\n  }\n\n  __distance_matrix(t) {\n    const e = this._metric,\n          s = t.shape[0],\n          r = new _(s, s);\n\n    for (let i = 0; i < s; ++i) {\n      const n = t.row(i);\n\n      for (let o = i; o < s; ++o) {\n        let s = i === o ? 1 : e(n, t.row(o));\n        r.set_entry(i, o, s), r.set_entry(o, i, s);\n      }\n    }\n\n    return r;\n  }\n\n  transform(t = 20) {\n    this._is_initialized || this.init();\n\n    for (let e = 0; e < t; ++e) console.log([...this.Y]), this._step();\n\n    return this.projection;\n  }\n\n  *generator() {\n    this._is_initialized || this.init();\n\n    for (let t = 0; t < max_iter; ++t) this._step(), yield this.projection;\n\n    return this.projection;\n  }\n\n  _step() {\n    const t = this.parameter(\"max_halves\");\n\n    let e = this._distance_matrix,\n        s = this._distance_inverse_matrix,\n        r = this._Distance_matrix,\n        i = this._Distance_inverse_matrix,\n        n = this._ones,\n        o = this._E,\n        h = this.Y,\n        a = s.sub(i),\n        _ = a.dot(n),\n        l = a.dot(h).sub(h.mult(_)),\n        c = s._apply(3, (t, e) => Math.pow(t, e)),\n        u = h._apply(2, (t, e) => Math.pow(t, e)),\n        f = c.dot(u).sub(_).sub(h.mult(2).mult(c.dot(h))).add(u.mult(c.dot(n)));\n\n    f = f._apply(null, t => Math.abs(t));\n    let d = l.divide(f),\n        p = h.clone();\n\n    for (let n = 0; n < t; ++n) {\n      if (h = p.add(d), e = this.__distance_matrix(h), s = e._apply(1, (t, e) => e / t), a = r.sub(e), a._apply(2, (t, e) => Math.pow(t, e)).mult(i).sum < o) break;\n      d = d.mult(.5);\n    }\n\n    this.Y = h;\n  }\n\n}\n\nvar S = \"0.3.7\";\nexport { m as BallTree, v as FASTMAP, p as Heap, E as Hierarchical_Clustering, M as ISOMAP, $ as KMeans, L as KMedoids, b as LDA, z as LLE, B as LSP, j as LTSA, A as MDS, _ as Matrix, T as OPTICS, x as PCA, f as Randomizer, R as SAMMON, k as TSNE, K as TopoMap, F as TriMap, Y as UMAP, h as canberra, o as chebyshev, i as cosine, l as distance_matrix, t as euclidean, r as euclidean_squared, a as k_nearest_neighbors, e as kahan_sum, c as linspace, n as manhattan, d as max, s as neumair_sum, u as norm, N as powell, y as qr, w as simultaneous_poweriteration, S as version };","map":{"version":3,"sources":["/Users/dude/Documents/workspace/POC/demoreact/node_modules/@saehrimnir/druidjs/dist/druid.esm.js"],"names":["t","e","Math","sqrt","r","s","length","i","n","o","abs","Array","acos","push","max","h","a","shape","l","from","row","map","j","distance","sort","slice","Symbol","iterator","_","constructor","iterate_rows","_rows","_cols","_data","Float64Array","clone","isArray","subarray","set_row","col","entry","set_entry","transpose","T","inverse","dot","join","outer","concat","set_block","get_block","gather","_apply_array","_apply_rowwise_array","_apply_colwise_array","_apply","mult","divide","add","sub","to2dArray","diag","min","mean","sum","meanRows","meanCols","solve_CG","random","c","solve","L","U","LU","SVD","eigenvectors","eigenvalues","simultaneous_poweriteration","Sigma","V","round","u","fill","f","_N","_M","_MATRIX_A","_UPPER_MASK","_LOWER_MASK","_mt","_mti","N","seed","Date","getTime","_seed","random_int","choice","splice","d","p","heapify","_accessor","_container","_comparator","element","value","floor","_heapify_down","_swap","_heapify_up","pop","first","iterate","toArray","data","raw_data","empty","m","_Node","pivot","child1","child2","radius","_Leaf","points","_metric","index","_root","_construct","_greatest_spread","reduce","search","_search","y","R","Q","w","g","parameter_list","_parameter_list","_type","X","_D","_d","_randomizer","_is_initialized","parameter","findIndex","para","transform","check_init","Y","generator","init","projection","transform_async","x","A","_d_X","stress","pow","M","_k","find","v","_choose_distant_objects","b","_labels","forEach","count","rows","id","z","k","_iter","log","_perplexity","_ystep","_gains","exp","_P","next","_epsilon","sign","_spread","_set_op_mix_ratio","_repulsion_strength","_negative_sample_rate","_n_epochs","_initial_alpha","_find_ab_params","_compute_membership_strengths","_smooth_knn_dist","_local_connectivity","log2","reverse","filter","distances","sigmas","rhos","_fuzzy_simplicial_set","_make_epochs_per_sample","_weights","Float32Array","_tocoo","cols","_min_dist","_a","_b","_graph","_n_neighbors","_head","_tail","_epochs_per_sample","_epochs_per_negative_sample","_epoch_of_next_sample","_epoch_of_next_negative_sample","local_connectivity","min_dist","graph","weights","_clip","_optimize_layout","_alpha","F","_c","n_inliers","n_outliers","n_random","knn","triplets","_generate_triplets","lr","C","tol","vel","gain","_weight_adj","_find_p","_sample_knn_triplets","_find_weights","random_triplets","random_weights","_sample_random_triplets","isNaN","__argsort","_rejection_sample","indexOf","_grad","grad","loss","n_viol","_next","_update_embedding","E","_id","_matrix","_linkage","root","do","get_clusters","dist","depth","_traverse","leaves","left","right","_n","_d_min","_distance_matrix","_clusters","_c_size","Uint16Array","D","unshift","size","centroid","_calculate_centroid","isLeaf","$","_K","_cluster_centroids","_get_random_centroids","_furthest_point","_iteration","_compute_centroid","clusters_changed","cluster_centroids","_A","_max_iter","log10","_cluster_medoids","_get_random_medoids","_nearest_medoid","index_nearest","medoids","distance_nearest","_get_distance","distance_second","index_second","ceil","_min_points","_ordered_list","_DB","_cluster_index","reachability_distance","processed","neighbors","_get_neighbors","_core_distance","_update","_expand_cluster","get_cluster_affirmation","B","K","__align_components","__disjoint_set","children","__hull","__align_hull","__transform_component","__lazy_distance_matrix","_make_minimum_spanning_tree","q","union","_Emst","__hull_cross","__findAngle","sin","cos","tx","ty","__transform","_list","Set","make_set","has","parent","console","_distance_inverse_matrix","_Distance_matrix","_Distance_inverse_matrix","_delta","_ones","_E","__distance_matrix","_step","max_iter","S","BallTree","FASTMAP","Heap","Hierarchical_Clustering","ISOMAP","KMeans","KMedoids","LDA","LLE","LSP","LTSA","MDS","Matrix","OPTICS","PCA","Randomizer","SAMMON","TSNE","TopoMap","TriMap","UMAP","canberra","chebyshev","cosine","distance_matrix","euclidean","euclidean_squared","k_nearest_neighbors","kahan_sum","linspace","manhattan","neumair_sum","norm","powell","qr","version"],"mappings":";;AAAA,SAASA,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAAC,SAAOC,IAAI,CAACC,IAAL,CAAUC,CAAC,CAACJ,CAAD,EAAGC,CAAH,CAAX,CAAP;AAAyB;;AAAA,SAASA,CAAT,CAAWD,CAAX,EAAa;AAAC,MAAIC,CAAJ;AAAA,MAAMI,CAAN;AAAA,MAAQD,CAAC,GAACJ,CAAC,CAACM,MAAZ;AAAA,MAAmBC,CAAC,GAAC,CAArB;AAAA,MAAuBC,CAAC,GAAC,CAAzB;;AAA2B,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,CAAd,EAAgB,EAAEK,CAAlB,EAAoBR,CAAC,GAACD,CAAC,CAACS,CAAD,CAAD,GAAKD,CAAP,EAASH,CAAC,GAACE,CAAC,GAACN,CAAb,EAAeO,CAAC,GAACH,CAAC,GAACE,CAAF,GAAIN,CAArB,EAAuBM,CAAC,GAACF,CAAzB;;AAA2B,SAAOE,CAAP;AAAS;;AAAA,SAASF,CAAT,CAAWL,CAAX,EAAa;AAAC,MAAIC,CAAC,GAACD,CAAC,CAACM,MAAR;AAAA,MAAeD,CAAC,GAAC,CAAjB;AAAA,MAAmBD,CAAC,GAAC,CAArB;;AAAuB,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAd,EAAgB,EAAEM,CAAlB,EAAoB;AAAC,QAAIN,CAAC,GAACD,CAAC,CAACO,CAAD,CAAP;AAAA,QAAWC,CAAC,GAACH,CAAC,GAACJ,CAAf;AAAiBC,IAAAA,IAAI,CAACQ,GAAL,CAASL,CAAT,KAAaH,IAAI,CAACQ,GAAL,CAAST,CAAT,CAAb,GAAyBG,CAAC,IAAEC,CAAC,GAACG,CAAF,GAAIP,CAAhC,GAAkCG,CAAC,IAAEH,CAAC,GAACO,CAAF,GAAIH,CAAzC,EAA2CA,CAAC,GAACG,CAA7C;AAA+C;;AAAA,SAAOH,CAAC,GAACD,CAAT;AAAW;;AAAA,SAASA,CAAT,CAAWJ,CAAX,EAAaC,CAAb,EAAe;AAAC,MAAGD,CAAC,CAACM,MAAF,IAAUL,CAAC,CAACK,MAAf,EAAsB;AAAO,MAAIF,CAAC,GAACJ,CAAC,CAACM,MAAR;AAAA,MAAeC,CAAC,GAAC,IAAII,KAAJ,CAAUP,CAAV,CAAjB;;AAA8B,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB;AAAC,QAAID,CAAC,GAACJ,CAAC,CAACK,CAAD,CAAP;AAAA,QAAWG,CAAC,GAACP,CAAC,CAACI,CAAD,CAAd;AAAkBE,IAAAA,CAAC,CAACF,CAAD,CAAD,GAAK,CAACD,CAAC,GAACI,CAAH,KAAOJ,CAAC,GAACI,CAAT,CAAL;AAAiB;;AAAA,SAAOH,CAAC,CAACE,CAAD,CAAR;AAAY;;AAAA,SAASA,CAAT,CAAWP,CAAX,EAAaC,CAAb,EAAe;AAAC,MAAGD,CAAC,CAACM,MAAF,KAAWL,CAAC,CAACK,MAAhB,EAAuB;AAAO,MAAID,CAAC,GAACL,CAAC,CAACM,MAAR;AAAA,MAAeF,CAAC,GAAC,CAAjB;AAAA,MAAmBG,CAAC,GAAC,CAArB;AAAA,MAAuBC,CAAC,GAAC,CAAzB;;AAA2B,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoBL,CAAC,IAAEJ,CAAC,CAACS,CAAD,CAAD,GAAKR,CAAC,CAACQ,CAAD,CAAT,EAAaF,CAAC,IAAEP,CAAC,CAACS,CAAD,CAAD,GAAKT,CAAC,CAACS,CAAD,CAAtB,EAA0BD,CAAC,IAAEP,CAAC,CAACQ,CAAD,CAAD,GAAKR,CAAC,CAACQ,CAAD,CAAnC;;AAAuC,SAAOP,IAAI,CAACU,IAAL,CAAUR,CAAC,IAAEF,IAAI,CAACC,IAAL,CAAUI,CAAV,IAAaL,IAAI,CAACC,IAAL,CAAUK,CAAV,CAAf,CAAX,CAAP;AAAgD;;AAAA,SAASA,CAAT,CAAWR,CAAX,EAAaC,CAAb,EAAe;AAAC,MAAGD,CAAC,CAACM,MAAF,IAAUL,CAAC,CAACK,MAAf,EAAsB;AAAO,MAAID,CAAC,GAACL,CAAC,CAACM,MAAR;AAAA,MAAeF,CAAC,GAAC,CAAjB;;AAAmB,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoBH,CAAC,IAAEF,IAAI,CAACQ,GAAL,CAASV,CAAC,CAACO,CAAD,CAAD,GAAKN,CAAC,CAACM,CAAD,CAAf,CAAH;;AAAuB,SAAOH,CAAP;AAAS;;AAAA,SAASK,CAAT,CAAWT,CAAX,EAAaC,CAAb,EAAe;AAAC,MAAGD,CAAC,CAACM,MAAF,IAAUL,CAAC,CAACK,MAAf,EAAsB;AAAO,MAAID,CAAC,GAACL,CAAC,CAACM,MAAR;AAAA,MAAeF,CAAC,GAAC,EAAjB;;AAAoB,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoBH,CAAC,CAACS,IAAF,CAAOX,IAAI,CAACQ,GAAL,CAASV,CAAC,CAACO,CAAD,CAAD,GAAKN,CAAC,CAACM,CAAD,CAAf,CAAP;;AAA4B,SAAOL,IAAI,CAACY,GAAL,CAAS,GAAGV,CAAZ,CAAP;AAAsB;;AAAA,SAASW,CAAT,CAAWf,CAAX,EAAaC,CAAb,EAAe;AAAC,MAAGD,CAAC,CAACM,MAAF,KAAWL,CAAC,CAACK,MAAhB,EAAuB;AAAO,MAAID,CAAC,GAACL,CAAC,CAACM,MAAR;AAAA,MAAeF,CAAC,GAAC,CAAjB;;AAAmB,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoBH,CAAC,IAAEF,IAAI,CAACQ,GAAL,CAASV,CAAC,CAACO,CAAD,CAAD,GAAKN,CAAC,CAACM,CAAD,CAAf,KAAqBL,IAAI,CAACQ,GAAL,CAASV,CAAC,CAACO,CAAD,CAAV,IAAeL,IAAI,CAACQ,GAAL,CAAST,CAAC,CAACM,CAAD,CAAV,CAApC,CAAH;;AAAuD,SAAOH,CAAP;AAAS;;AAAA,SAASY,CAAT,CAAWf,CAAX,EAAaI,CAAb,EAAeD,CAAC,GAAC,IAAjB,EAAsBG,CAAC,GAACP,CAAxB,EAA0B;AAAC,QAAMQ,CAAC,GAACP,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAR;AAAmB,MAAIR,CAAC,GAACL,CAAD,aAACA,CAAD,cAACA,CAAD,GAAIc,CAAC,CAACjB,CAAD,EAAGM,CAAH,CAAV;AAAA,MAAgBQ,CAAC,GAAC,IAAIJ,KAAJ,CAAUH,CAAV,CAAlB;;AAA+B,OAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoBe,CAAC,CAACf,CAAD,CAAD,GAAKW,KAAK,CAACQ,IAAN,CAAWV,CAAC,CAACW,GAAF,CAAMpB,CAAN,CAAX,EAAqBqB,GAArB,CAA0B,CAACpB,CAAD,EAAGI,CAAH,MAAQ;AAACE,IAAAA,CAAC,EAACP,CAAH;AAAKsB,IAAAA,CAAC,EAACjB,CAAP;AAASkB,IAAAA,QAAQ,EAACtB;AAAlB,GAAR,CAA1B,EAA0DuB,IAA1D,CAAgE,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACuB,QAAF,GAAWtB,CAAC,CAACsB,QAApF,EAA+FE,KAA/F,CAAqG,CAArG,EAAuGpB,CAAC,GAAC,CAAzG,CAAL;;AAAiH,SAAOU,CAAP;AAAS;;mBAA0gDW,MAAM,CAACC,Q;;AAAjhD,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAAC7B,CAAC,GAAC,IAAH,EAAQC,CAAC,GAAC,IAAV,EAAeI,CAAC,GAAC,IAAjB,EAAsB;AAAA,6BAAk/C,KAAKyB,YAAv/C;;AAAC,QAAG,KAAKC,KAAL,GAAW/B,CAAX,EAAa,KAAKgC,KAAL,GAAW/B,CAAxB,EAA0B,KAAKgC,KAAL,GAAW,IAArC,EAA0CjC,CAAC,IAAEC,CAAhD,EAAkD;AAAC,UAAG,CAACI,CAAJ,EAAM,OAAO,KAAK4B,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAAX,EAAiC,IAAxC;;AAA6C,UAAG,cAAY,OAAOI,CAAtB,EAAwB;AAAC,aAAK4B,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAAX;;AAAiC,aAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACH,CAAF,GAAID,CAAf,IAAkBK,CAAC,CAACD,CAAD,EAAGJ,CAAH,CAAnB;;AAAyB,eAAO,IAAP;AAAY;;AAAA,UAAG,YAAU,OAAOK,CAApB,EAAsB;AAAC,YAAG,YAAUA,CAAb,EAAe,OAAO,IAAIuB,CAAJ,CAAM5B,CAAN,EAAQC,CAAR,EAAU,CAAV,CAAP;;AAAoB,YAAG,eAAaI,CAAb,IAAgB,QAAMA,CAAzB,EAA2B;AAAC,eAAK4B,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAAX;;AAAiC,eAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,CAAd,EAAgB,EAAEK,CAAlB,EAAoB,KAAK4B,KAAL,CAAW5B,CAAC,GAACJ,CAAF,GAAII,CAAf,IAAkB,CAAlB;;AAAoB,iBAAO,IAAP;AAAY;;AAAA,YAAG,aAAWA,CAAX,IAAcL,CAAC,IAAEC,CAApB,EAAsB;AAAC,eAAKgC,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAAX,EAAiCI,CAAC,GAAC,CAACJ,CAAD,EAAGI,CAAH,KAAO,CAACJ,CAAC,KAAGI,CAAJ,GAAM,CAAN,GAAQ,CAAT,IAAY,IAAEL,CAAxD;;AAA0D,eAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACH,CAAF,GAAID,CAAf,IAAkBK,CAAC,CAACD,CAAD,EAAGJ,CAAH,CAAnB;;AAAyB,iBAAO,IAAP;AAAY;AAAC;;AAAA,UAAG,YAAU,OAAOK,CAApB,EAAsB;AAAC,aAAK4B,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAAX;;AAAiC,aAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACH,CAAF,GAAID,CAAf,IAAkBK,CAAlB;;AAAoB,eAAO,IAAP;AAAY;AAAC;;AAAA,WAAO,IAAP;AAAY;;AAAW,SAAJc,IAAI,CAACnB,CAAD,EAAGC,CAAC,GAAC,KAAL,EAAW;AAAC,QAAGD,CAAC,YAAY4B,CAAhB,EAAkB,OAAO5B,CAAC,CAACmC,KAAF,EAAP;;AAAiB,QAAG,EAAExB,KAAK,CAACyB,OAAN,CAAcpC,CAAd,KAAkBA,CAAC,YAAYkC,YAAjC,CAAH,EAAkD;AAAC,UAAG,YAAU,OAAOlC,CAApB,EAAsB,OAAO,IAAI4B,CAAJ,CAAM,CAAN,EAAQ,CAAR,EAAU5B,CAAV,CAAP;AAAoB,YAAK,OAAL;AAAa;;AAAA;AAAC,UAAIK,CAAC,GAACL,CAAC,CAACM,MAAR;AAAe,UAAG,MAAID,CAAP,EAAS,MAAK,gBAAL;;AAAsB,UAAG,EAAEM,KAAK,CAACyB,OAAN,CAAcpC,CAAC,CAAC,CAAD,CAAf,KAAqBA,CAAC,CAAC,CAAD,CAAD,YAAekC,YAAtC,CAAH,EAAuD;AAAC,YAAG,UAAQjC,CAAX,EAAa,OAAO,IAAI2B,CAAJ,CAAM,CAAN,EAAQvB,CAAR,EAAW,CAACJ,CAAD,EAAGI,CAAH,KAAOL,CAAC,CAACK,CAAD,CAAnB,CAAP;AAAgC,YAAG,UAAQJ,CAAX,EAAa,OAAO,IAAI2B,CAAJ,CAAMvB,CAAN,EAAQ,CAAR,EAAWJ,CAAC,IAAED,CAAC,CAACC,CAAD,CAAf,CAAP;AAA4B,YAAG,WAASA,CAAZ,EAAc,OAAO,IAAI2B,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,EAAW,CAACJ,CAAD,EAAGI,CAAH,KAAOJ,CAAC,IAAEI,CAAH,GAAKL,CAAC,CAACC,CAAD,CAAN,GAAU,CAA5B,CAAP;AAAuC,cAAK,0BAAL;AAAgC;;AAAA,UAAGU,KAAK,CAACyB,OAAN,CAAcpC,CAAC,CAAC,CAAD,CAAf,KAAqBA,CAAC,CAAC,CAAD,CAAD,YAAekC,YAAvC,EAAoD;AAAC,YAAIjC,CAAC,GAACD,CAAC,CAAC,CAAD,CAAD,CAAKM,MAAX;;AAAkB,aAAI,IAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,IAAGJ,CAAC,CAACI,CAAD,CAAD,CAAKE,MAAL,KAAcL,CAAjB,EAAmB,MAAK,uBAAL;;AAA6B,eAAO,IAAI2B,CAAJ,CAAMvB,CAAN,EAAQJ,CAAR,EAAW,CAACA,CAAD,EAAGI,CAAH,KAAOL,CAAC,CAACC,CAAD,CAAD,CAAKI,CAAL,CAAlB,CAAP;AAAmC;AAAC;AAAC;;AAAAe,EAAAA,GAAG,CAACpB,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKgC,KAAb;AAAA,UAAmB5B,CAAC,GAAC,KAAK2B,KAA1B;AAAgC,WAAO/B,CAAC,CAACoC,QAAF,CAAWrC,CAAC,GAACK,CAAb,EAAe,CAACL,CAAC,GAAC,CAAH,IAAMK,CAArB,CAAP;AAA+B;;AAAa,GAAZyB,YAAY,GAAE;AAAC,UAAM9B,CAAC,GAAC,KAAKgC,KAAb;AAAA,UAAmB/B,CAAC,GAAC,KAAK8B,KAA1B;AAAA,UAAgC1B,CAAC,GAAC,KAAK4B,KAAvC;;AAA6C,SAAI,IAAI7B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoB,MAAMC,CAAC,CAACgC,QAAF,CAAWjC,CAAC,GAACJ,CAAb,EAAe,CAACI,CAAC,GAAC,CAAH,IAAMJ,CAArB,CAAN;AAA8B;;AAAoCsC,EAAAA,OAAO,CAACtC,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAII,CAAC,GAAC,KAAK2B,KAAX;;AAAiB,QAAGrB,KAAK,CAACyB,OAAN,CAAcnC,CAAd,KAAkBA,CAAC,CAACK,MAAF,KAAWD,CAAhC,EAAkC;AAAC,UAAID,CAAC,GAACJ,CAAC,GAACK,CAAR;;AAAU,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACJ,CAAb,IAAgBC,CAAC,CAACD,CAAD,CAAjB;AAAqB,KAAtF,MAA2F,IAAGC,CAAC,YAAY2B,CAAb,IAAgB3B,CAAC,CAACgB,KAAF,CAAQ,CAAR,MAAaZ,CAA7B,IAAgC,MAAIJ,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAvC,EAAkD;AAAC,UAAIb,CAAC,GAACJ,CAAC,GAACK,CAAR;;AAAU,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACJ,CAAb,IAAgBC,CAAC,CAACgC,KAAF,CAAQjC,CAAR,CAAhB;AAA2B;;AAAA,WAAO,IAAP;AAAY;;AAAAuC,EAAAA,GAAG,CAACvC,CAAD,EAAG;AAAC,QAAIC,CAAC,GAAC,IAAIiC,YAAJ,CAAiB,KAAKH,KAAtB,CAAN;;AAAmC,SAAI,IAAI1B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAK0B,KAAnB,EAAyB,EAAE1B,CAA3B,EAA6BJ,CAAC,CAACI,CAAD,CAAD,GAAK,KAAK4B,KAAL,CAAW5B,CAAC,GAAC,KAAK2B,KAAP,GAAahC,CAAxB,CAAL;;AAAgC,WAAOC,CAAP;AAAS;;AAAAuC,EAAAA,KAAK,CAACxC,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,KAAKgC,KAAL,CAAWjC,CAAC,GAAC,KAAKgC,KAAP,GAAa/B,CAAxB,CAAP;AAAkC;;AAAAwC,EAAAA,SAAS,CAACzC,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,WAAO,KAAK4B,KAAL,CAAWjC,CAAC,GAAC,KAAKgC,KAAP,GAAa/B,CAAxB,IAA2BI,CAA3B,EAA6B,IAApC;AAAyC;;AAAAqC,EAAAA,SAAS,GAAE;AAAC,WAAO,IAAId,CAAJ,CAAM,KAAKI,KAAX,EAAiB,KAAKD,KAAtB,EAA6B,CAAC/B,CAAD,EAAGC,CAAH,KAAO,KAAKuC,KAAL,CAAWvC,CAAX,EAAaD,CAAb,CAApC,CAAP;AAA6D;;AAAK,MAAD2C,CAAC,GAAE;AAAC,WAAO,KAAKD,SAAL,EAAP;AAAwB;;AAAAE,EAAAA,OAAO,GAAE;AAAC,UAAM5C,CAAC,GAAC,KAAK+B,KAAb;AAAA,UAAmB9B,CAAC,GAAC,KAAK+B,KAA1B;AAAgC,QAAI3B,CAAC,GAAC,IAAIuB,CAAJ,CAAM5B,CAAN,EAAQ,IAAEC,CAAV,EAAa,CAACD,CAAD,EAAGK,CAAH,KAAOA,CAAC,IAAEJ,CAAH,GAAKD,CAAC,KAAGK,CAAC,GAACJ,CAAN,GAAQ,CAAR,GAAU,CAAf,GAAiB,KAAKuC,KAAL,CAAWxC,CAAX,EAAaK,CAAb,CAArC,CAAN;AAAA,QAA6DD,CAAC,GAAC,CAA/D;AAAA,QAAiEG,CAAC,GAAC,CAAnE;;AAAqE,WAAKH,CAAC,GAACJ,CAAF,IAAKO,CAAC,GAACN,CAAZ,GAAe;AAAC,UAAIO,CAAC,GAAC,CAAN;AAAQ,UAAIC,CAAC,GAAC,CAAC,CAAD,GAAG,CAAT;;AAAW,WAAI,IAAIR,CAAC,GAACG,CAAV,EAAYH,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB;AAAC,YAAID,CAAC,GAACE,IAAI,CAACQ,GAAL,CAASL,CAAC,CAACmC,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAAT,CAAN;AAA6BE,QAAAA,CAAC,GAACT,CAAF,KAAMQ,CAAC,GAACP,CAAF,EAAIQ,CAAC,GAACT,CAAZ;AAAe;;AAAA,UAAG,KAAGK,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUD,CAAV,CAAN,EAAmBA,CAAC,GAApB,KAA2B;AAAC,aAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,IAAEC,CAAhB,EAAkB,EAAED,CAApB,EAAsB;AAAC,cAAIC,CAAC,GAACI,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUJ,CAAV,CAAN;AAAA,cAAmBO,CAAC,GAACF,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUR,CAAV,CAArB;AAAkCK,UAAAA,CAAC,CAACoC,SAAF,CAAYrC,CAAZ,EAAcJ,CAAd,EAAgBC,CAAhB,GAAmBI,CAAC,CAACoC,SAAF,CAAYjC,CAAZ,EAAcR,CAAd,EAAgBO,CAAhB,CAAnB;AAAsC;;AAAA,aAAI,IAAIC,CAAC,GAACJ,CAAC,GAAC,CAAZ,EAAcI,CAAC,GAACR,CAAhB,EAAkB,EAAEQ,CAApB,EAAsB;AAAC,cAAIR,CAAC,GAACK,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUD,CAAV,IAAaF,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUG,CAAV,CAAnB;AAAgCF,UAAAA,CAAC,CAACoC,SAAF,CAAYjC,CAAZ,EAAcD,CAAd,EAAgB,CAAhB;;AAAmB,eAAI,IAAIE,CAAC,GAACF,CAAC,GAAC,CAAZ,EAAcE,CAAC,GAAC,IAAER,CAAlB,EAAoB,EAAEQ,CAAtB,EAAwBJ,CAAC,CAACoC,SAAF,CAAYjC,CAAZ,EAAcC,CAAd,EAAgBJ,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUC,CAAV,IAAaJ,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUK,CAAV,IAAaT,CAA1C;AAA6C;;AAAAI,QAAAA,CAAC,IAAGG,CAAC,EAAL;AAAQ;AAAC;;AAAA,SAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,UAAIJ,CAAC,GAACK,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUA,CAAV,CAAN;;AAAmB,WAAI,IAAIG,CAAC,GAACH,CAAV,EAAYG,CAAC,GAAC,IAAEN,CAAhB,EAAkB,EAAEM,CAApB,EAAsBF,CAAC,CAACoC,SAAF,CAAYrC,CAAZ,EAAcG,CAAd,EAAgBF,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUG,CAAV,IAAaP,CAA7B;AAAgC;;AAAA,SAAI,IAAII,CAAC,GAACJ,CAAC,GAAC,CAAZ,EAAcI,CAAC,IAAE,CAAjB,EAAmB,EAAEA,CAArB,EAAuB;AAAC,UAAIJ,CAAC,GAACK,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUA,CAAV,CAAN;;AAAmB,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgBG,CAAC,EAAjB,EAAoB;AAAC,YAAIC,CAAC,GAACH,CAAC,CAACmC,KAAF,CAAQjC,CAAR,EAAUH,CAAV,IAAaJ,CAAnB;;AAAqB,aAAI,IAAIA,CAAC,GAACO,CAAV,EAAYP,CAAC,GAAC,IAAEC,CAAhB,EAAkB,EAAED,CAApB,EAAsB;AAAC,cAAIC,CAAC,GAACI,CAAC,CAACmC,KAAF,CAAQjC,CAAR,EAAUP,CAAV,CAAN;AAAmBC,UAAAA,CAAC,IAAEI,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUJ,CAAV,IAAaQ,CAAhB,EAAkBH,CAAC,CAACoC,SAAF,CAAYlC,CAAZ,EAAcP,CAAd,EAAgBC,CAAhB,CAAlB;AAAqC;AAAC;AAAC;;AAAA,WAAO,IAAI2B,CAAJ,CAAM5B,CAAN,EAAQC,CAAR,EAAW,CAACD,CAAD,EAAGI,CAAH,KAAOC,CAAC,CAACmC,KAAF,CAAQxC,CAAR,EAAUI,CAAC,GAACH,CAAZ,CAAlB,CAAP;AAA0C;;AAAA4C,EAAAA,GAAG,CAAC7C,CAAD,EAAG;AAAC,QAAGA,CAAC,YAAY4B,CAAhB,EAAkB;AAAC,UAAI3B,CAAC,GAAC,IAAN;AAAW,UAAGA,CAAC,CAACgB,KAAF,CAAQ,CAAR,MAAajB,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAhB,EAA2B,MAAM,oBAAmBhB,CAAC,CAACgB,KAAF,CAAQ6B,IAAR,CAAa,KAAb,CAAoB,mBAAkB9C,CAAC,CAACiB,KAAF,CAAQ6B,IAAR,CAAa,KAAb,CAAoB,oCAAmC7C,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAW,eAAcjB,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAW,yCAA1J;AAAmM,UAAIZ,CAAC,GAACJ,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAN;AAAiB,aAAO,IAAIW,CAAJ,CAAM3B,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAN,EAAiBjB,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAjB,EAA6B,CAACb,CAAD,EAAGG,CAAH,KAAO;AAAC,cAAMC,CAAC,GAACP,CAAC,CAACmB,GAAF,CAAMhB,CAAN,CAAR;AAAA,cAAiBK,CAAC,GAACT,CAAC,CAACuC,GAAF,CAAMhC,CAAN,CAAnB;AAA4B,YAAIQ,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoBe,CAAC,IAAEP,CAAC,CAACR,CAAD,CAAD,GAAKS,CAAC,CAACT,CAAD,CAAT;;AAAa,eAAOe,CAAP;AAAS,OAAnH,CAAP;AAA6H;;AAAA,QAAGJ,KAAK,CAACyB,OAAN,CAAcpC,CAAd,KAAkBA,CAAC,YAAYkC,YAAlC,EAA+C;AAAC,UAAIjC,CAAC,GAAC,KAAK8B,KAAX;AAAiB,UAAG/B,CAAC,CAACM,MAAF,KAAWL,CAAd,EAAgB,MAAM,mBAAkBA,CAAE,mBAAkBD,CAAC,CAACM,MAAO,uBAArD;AAA4E,UAAIF,CAAC,GAAC,IAAIO,KAAJ,CAAUV,CAAV,CAAN;;AAAmB,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAd,EAAgB,EAAEM,CAAlB,EAAoBH,CAAC,CAACG,CAAD,CAAD,GAAKF,CAAC,CAAC,KAAKe,GAAL,CAASb,CAAT,EAAYc,GAAZ,CAAiBpB,CAAC,IAAEA,CAAC,GAACD,CAAC,CAACO,CAAD,CAAvB,CAAD,CAAN;;AAAqC,aAAOH,CAAP;AAAS;;AAAA,UAAK,2BAAL;AAAiC;;AAAA2C,EAAAA,KAAK,CAAC/C,CAAD,EAAG;AAAC,QAAIC,CAAC,GAAC,IAAN;AAAA,QAAWI,CAAC,GAACJ,CAAC,CAACgC,KAAF,CAAQ3B,MAArB;AAA4B,QAAGD,CAAC,IAAEL,CAAC,CAACiC,KAAF,CAAQ3B,MAAd,EAAqB;AAAO,QAAIF,CAAC,GAAC,IAAIwB,CAAJ,EAAN;AAAY,WAAOxB,CAAC,CAACa,KAAF,GAAQ,CAACZ,CAAD,EAAGA,CAAH,EAAK,CAACA,CAAD,EAAGE,CAAH,KAAOF,CAAC,IAAEE,CAAH,GAAKN,CAAC,CAACgC,KAAF,CAAQ5B,CAAR,IAAWL,CAAC,CAACiC,KAAF,CAAQ1B,CAAR,CAAhB,GAA2BH,CAAC,CAACoC,KAAF,CAAQjC,CAAR,EAAUF,CAAV,CAAvC,CAAR,EAA6DD,CAApE;AAAsE;;AAAA4C,EAAAA,MAAM,CAAChD,CAAD,EAAGC,CAAC,GAAC,YAAL,EAAkB;AAAC,UAAMI,CAAC,GAAC,IAAR;AAAA,UAAa,CAACD,CAAD,EAAGG,CAAH,IAAMF,CAAC,CAACY,KAArB;AAAA,UAA2B,CAACT,CAAD,EAAGC,CAAH,IAAMT,CAAC,CAACiB,KAAnC;;AAAyC,QAAG,gBAAchB,CAAjB,EAAmB;AAAC,UAAGG,CAAC,IAAEI,CAAN,EAAQ,MAAM,sEAAqEJ,CAAE,gBAAeI,CAAE,QAA9F;AAAsG,YAAMP,CAAC,GAAC,IAAI2B,CAAJ,CAAMxB,CAAN,EAAQG,CAAC,GAACE,CAAV,EAAY,OAAZ,CAAR;AAA6B,aAAOR,CAAC,CAACgD,SAAF,CAAY,CAAZ,EAAc,CAAd,EAAgB5C,CAAhB,GAAmBJ,CAAC,CAACgD,SAAF,CAAY,CAAZ,EAAc1C,CAAd,EAAgBP,CAAhB,CAAnB,EAAsCC,CAA7C;AAA+C;;AAAA,QAAG,cAAYA,CAAf,EAAiB;AAAC,UAAGM,CAAC,IAAEE,CAAN,EAAQ,MAAM,uEAAsEF,CAAE,mBAAkBE,CAAE,WAAlG;AAA6G,YAAMR,CAAC,GAAC,IAAI2B,CAAJ,CAAMxB,CAAC,GAACI,CAAR,EAAUD,CAAV,EAAY,OAAZ,CAAR;AAA6B,aAAON,CAAC,CAACgD,SAAF,CAAY,CAAZ,EAAc,CAAd,EAAgB5C,CAAhB,GAAmBJ,CAAC,CAACgD,SAAF,CAAY7C,CAAZ,EAAc,CAAd,EAAgBJ,CAAhB,CAAnB,EAAsCC,CAA7C;AAA+C;;AAAA,QAAG,UAAQA,CAAX,EAAa;AAAC,YAAMA,CAAC,GAAC,IAAI2B,CAAJ,CAAMxB,CAAC,GAACI,CAAR,EAAUD,CAAC,GAACE,CAAZ,EAAc,OAAd,CAAR;AAA+B,aAAOR,CAAC,CAACgD,SAAF,CAAY,CAAZ,EAAc,CAAd,EAAgB5C,CAAhB,GAAmBJ,CAAC,CAACgD,SAAF,CAAY7C,CAAZ,EAAcG,CAAd,EAAgBP,CAAhB,CAAnB,EAAsCC,CAA7C;AAA+C;;AAAA,UAAM,wDAAuDA,CAAE,GAA/D;AAAkE;;AAAAgD,EAAAA,SAAS,CAACjD,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,QAAG,CAACD,CAAD,EAAGG,CAAH,IAAMF,CAAC,CAACY,KAAX;;AAAiB,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,IAAG,EAAEA,CAAC,GAAC,KAAKuB,KAAT,CAAH,EAAmB,KAAI,IAAI3B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoBA,CAAC,GAAC,KAAK4B,KAAP,IAAc,KAAKS,SAAL,CAAejC,CAAC,GAACR,CAAjB,EAAmBI,CAAC,GAACH,CAArB,EAAuBI,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUJ,CAAV,CAAvB,CAAd;;AAAmD,WAAO,IAAP;AAAY;;AAAA8C,EAAAA,SAAS,CAAClD,CAAD,EAAGC,CAAH,EAAKI,CAAC,GAAC,IAAP,EAAYD,CAAC,GAAC,IAAd,EAAmB;AAAA;;AAAC,UAAK,CAACG,CAAD,EAAGC,CAAH,IAAM,KAAKS,KAAhB;AAAsB,QAAGb,CAAC,SAACA,CAAD,mCAAII,CAAL,EAAO,CAACH,CAAC,SAACA,CAAD,mCAAIE,CAAN,KAAUP,CAAV,IAAaI,CAAC,IAAEH,CAA1B,EAA4B,MAAM,0JAAyJI,CAAE,iBAAgBL,CAAE,eAAcI,CAAE,qBAAoBH,CAAE,GAAzN;AAA4N,UAAMQ,CAAC,GAAC,IAAImB,CAAJ,CAAMvB,CAAC,GAACL,CAAR,EAAUI,CAAC,GAACH,CAAZ,EAAc,OAAd,CAAR;;AAA+B,SAAI,IAAIM,CAAC,GAACP,CAAN,EAAQQ,CAAC,GAAC,CAAd,EAAgBD,CAAC,GAACF,CAAlB,EAAoB,EAAEE,CAAF,EAAI,EAAEC,CAA1B,EAA4B,KAAI,IAAIR,CAAC,GAACC,CAAN,EAAQI,CAAC,GAAC,CAAd,EAAgBL,CAAC,GAACI,CAAlB,EAAoB,EAAEJ,CAAF,EAAI,EAAEK,CAA1B,EAA4BI,CAAC,CAACgC,SAAF,CAAYjC,CAAZ,EAAcH,CAAd,EAAgB,KAAKmC,KAAL,CAAWjC,CAAX,EAAaP,CAAb,CAAhB;;AAAiC,WAAOS,CAAP;AAAS;;AAAA0C,EAAAA,MAAM,CAACnD,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAACL,CAAC,CAACM,MAAV;AAAA,UAAiBF,CAAC,GAACH,CAAC,CAACK,MAArB;AAAA,UAA4BC,CAAC,GAAC,IAAIqB,CAAJ,CAAMvB,CAAN,EAAQD,CAAR,CAA9B;;AAAyC,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB;AAAC,YAAMI,CAAC,GAACR,CAAC,CAACI,CAAD,CAAT;;AAAa,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,cAAMK,CAAC,GAACJ,CAAC,CAACD,CAAD,CAAT;AAAaO,QAAAA,CAAC,CAACkC,SAAF,CAAYrC,CAAZ,EAAcJ,CAAd,EAAgB,KAAKwC,KAAL,CAAWhC,CAAX,EAAaH,CAAb,CAAhB;AAAiC;AAAC;;AAAA,WAAOE,CAAP;AAAS;;AAAA6C,EAAAA,YAAY,CAACpD,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAK4B,KAAb;AAAA,UAAmB,CAAC7B,CAAD,EAAGG,CAAH,IAAM,KAAKU,KAA9B;;AAAoC,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,YAAMJ,CAAC,GAACI,CAAC,GAACD,CAAV;;AAAY,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB;AAAC,cAAMF,CAAC,GAACH,CAAC,GAACK,CAAV;AAAYJ,QAAAA,CAAC,CAACE,CAAD,CAAD,GAAKP,CAAC,CAACK,CAAC,CAACE,CAAD,CAAF,EAAMN,CAAC,CAACO,CAAD,EAAGC,CAAH,CAAP,CAAN;AAAoB;AAAC;;AAAA,WAAO,IAAP;AAAY;;AAAA4C,EAAAA,oBAAoB,CAACrD,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,KAAKmD,YAAL,CAAkBnD,CAAlB,EAAqB,CAACA,CAAD,EAAGI,CAAH,KAAOL,CAAC,CAACK,CAAD,CAA7B,CAAP;AAA0C;;AAAAiD,EAAAA,oBAAoB,CAACtD,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAK4B,KAAb;AAAA,UAAmB,CAAC7B,CAAD,EAAGG,CAAH,IAAM,KAAKU,KAA9B;;AAAoC,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,YAAMJ,CAAC,GAACI,CAAC,GAACD,CAAV;;AAAY,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB;AAAC,cAAMF,CAAC,GAACH,CAAC,GAACK,CAAV;AAAYJ,QAAAA,CAAC,CAACE,CAAD,CAAD,GAAKN,CAAC,CAACI,CAAC,CAACE,CAAD,CAAF,EAAMP,CAAC,CAACQ,CAAD,CAAP,CAAN;AAAkB;AAAC;;AAAA,WAAO,IAAP;AAAY;;AAAA+C,EAAAA,MAAM,CAACvD,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAII,CAAC,GAAC,KAAK4B,KAAX;;AAAiB,QAAGjC,CAAC,YAAY4B,CAAhB,EAAkB;AAAC,UAAG,CAACxB,CAAD,EAAGG,CAAH,IAAMP,CAAC,CAACiB,KAAX;AAAA,UAAiB,CAACT,CAAD,EAAGC,CAAH,IAAM,KAAKQ,KAA5B;;AAAkC,UAAG,MAAIb,CAAP,EAAS;AAAC,YAAGK,CAAC,KAAGF,CAAP,EAAS,MAAK,qBAAL;;AAA2B,aAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgB,EAAEF,CAAlB,EAAoBF,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAD,GAASN,CAAC,CAACI,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAF,EAAUP,CAAC,CAACwC,KAAF,CAAQ,CAAR,EAAUjC,CAAV,CAAV,CAAV;AAAkC,OAAxH,MAA6H,IAAG,MAAIA,CAAP,EAAS;AAAC,YAAGC,CAAC,KAAGJ,CAAP,EAAS,MAAK,qBAAL;;AAA2B,aAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgB,EAAEF,CAAlB,EAAoBF,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAD,GAASN,CAAC,CAACI,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAF,EAAUP,CAAC,CAACwC,KAAF,CAAQpC,CAAR,EAAU,CAAV,CAAV,CAAV;AAAkC,OAAxH,MAA4H;AAAC,YAAGI,CAAC,IAAEJ,CAAH,IAAMK,CAAC,IAAEF,CAAZ,EAAc,MAAK,OAAL;;AAAa,aAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgB,EAAEF,CAAlB,EAAoBF,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAD,GAASN,CAAC,CAACI,CAAC,CAACD,CAAC,GAACK,CAAF,GAAIF,CAAL,CAAF,EAAUP,CAAC,CAACwC,KAAF,CAAQpC,CAAR,EAAUG,CAAV,CAAV,CAAV;AAAkC;AAAC,KAArZ,MAA0Z,IAAGI,KAAK,CAACyB,OAAN,CAAcpC,CAAd,CAAH,EAAoB;AAAC,UAAII,CAAC,GAAC,KAAK2B,KAAX;AAAA,UAAiBxB,CAAC,GAAC,KAAKyB,KAAxB;AAA8B,UAAGhC,CAAC,CAACM,MAAF,KAAWF,CAAd,EAAgB,KAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoBC,CAAC,CAACG,CAAC,GAACD,CAAF,GAAIH,CAAL,CAAD,GAASH,CAAC,CAACI,CAAC,CAACG,CAAC,GAACD,CAAF,GAAIH,CAAL,CAAF,EAAUJ,CAAC,CAACQ,CAAD,CAAX,CAAV,CAAxD,KAAsF;AAAC,YAAGR,CAAC,CAACM,MAAF,KAAWC,CAAd,EAAgB,MAAK,OAAL;;AAAa,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoBC,CAAC,CAACG,CAAC,GAACD,CAAF,GAAIH,CAAL,CAAD,GAASH,CAAC,CAACI,CAAC,CAACG,CAAC,GAACD,CAAF,GAAIH,CAAL,CAAF,EAAUJ,CAAC,CAACI,CAAD,CAAX,CAAV;AAA0B;AAAC,KAA1O,MAA+O,KAAI,IAAIA,CAAC,GAAC,CAAN,EAAQG,CAAC,GAAC,KAAKwB,KAAL,GAAW,KAAKC,KAA9B,EAAoC5B,CAAC,GAACG,CAAtC,EAAwC,EAAEH,CAA1C,EAA4CC,CAAC,CAACD,CAAD,CAAD,GAAKH,CAAC,CAACI,CAAC,CAACD,CAAD,CAAF,EAAMJ,CAAN,CAAN;;AAAe,WAAO,IAAP;AAAY;;AAAAmC,EAAAA,KAAK,GAAE;AAAC,QAAInC,CAAC,GAAC,IAAI4B,CAAJ,EAAN;AAAY,WAAO5B,CAAC,CAAC+B,KAAF,GAAQ,KAAKA,KAAb,EAAmB/B,CAAC,CAACgC,KAAF,GAAQ,KAAKA,KAAhC,EAAsChC,CAAC,CAACiC,KAAF,GAAQ,KAAKA,KAAL,CAAWR,KAAX,CAAiB,CAAjB,CAA9C,EAAkEzB,CAAzE;AAA2E;;AAAAwD,EAAAA,IAAI,CAACxD,CAAD,EAAG;AAAC,WAAO,KAAKmC,KAAL,GAAaoB,MAAb,CAAoBvD,CAApB,EAAuB,CAACA,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAhC,CAAP;AAA2C;;AAAAwD,EAAAA,MAAM,CAACzD,CAAD,EAAG;AAAC,WAAO,KAAKmC,KAAL,GAAaoB,MAAb,CAAoBvD,CAApB,EAAuB,CAACA,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAhC,CAAP;AAA2C;;AAAAyD,EAAAA,GAAG,CAAC1D,CAAD,EAAG;AAAC,WAAO,KAAKmC,KAAL,GAAaoB,MAAb,CAAoBvD,CAApB,EAAuB,CAACA,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAhC,CAAP;AAA2C;;AAAA0D,EAAAA,GAAG,CAAC3D,CAAD,EAAG;AAAC,WAAO,KAAKmC,KAAL,GAAaoB,MAAb,CAAoBvD,CAApB,EAAuB,CAACA,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAhC,CAAP;AAA2C;;AAAS,MAALgB,KAAK,GAAE;AAAC,WAAM,CAAC,KAAKc,KAAN,EAAY,KAAKC,KAAjB,CAAN;AAA8B;;AAAS,MAALf,KAAK,CAAC,CAACjB,CAAD,EAAGC,CAAH,EAAKI,CAAC,GAAE,MAAI,CAAZ,CAAD,EAAiB;AAAC,SAAK0B,KAAL,GAAW/B,CAAX,EAAa,KAAKgC,KAAL,GAAW/B,CAAxB,EAA0B,KAAKgC,KAAL,GAAW,IAAIC,YAAJ,CAAiBlC,CAAC,GAACC,CAAnB,CAArC;;AAA2D,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAKiC,KAAL,CAAW7B,CAAC,GAACH,CAAF,GAAID,CAAf,IAAkBK,CAAC,CAACD,CAAD,EAAGJ,CAAH,CAAnB;;AAAyB,WAAO,IAAP;AAAY;;AAAa,MAAT4D,SAAS,GAAE;AAAC,WAAM,CAAC,GAAG,KAAK9B,YAAL,EAAJ,CAAN;AAA+B;;AAAQ,MAAJ+B,IAAI,GAAE;AAAC,UAAM7D,CAAC,GAAC,KAAK+B,KAAb;AAAA,UAAmB9B,CAAC,GAAC,KAAK+B,KAA1B;AAAA,UAAgC3B,CAAC,GAACH,IAAI,CAAC4D,GAAL,CAAS9D,CAAT,EAAWC,CAAX,CAAlC;AAAgD,QAAIG,CAAC,GAAC,IAAI8B,YAAJ,CAAiB7B,CAAjB,CAAN;;AAA0B,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoBI,CAAC,CAACJ,CAAD,CAAD,GAAK,KAAKwC,KAAL,CAAWxC,CAAX,EAAaA,CAAb,CAAL;;AAAqB,WAAOI,CAAP;AAAS;;AAAQ,MAAJ2D,IAAI,GAAE;AAAC,WAAO,KAAKC,GAAL,IAAU,KAAKjC,KAAL,GAAW,KAAKC,KAA1B,CAAP;AAAwC;;AAAO,MAAHgC,GAAG,GAAE;AAAC,WAAO3D,CAAC,CAAC,KAAK4B,KAAN,CAAR;AAAqB;;AAAY,MAARgC,QAAQ,GAAE;AAAC,UAAMjE,CAAC,GAAC,KAAKiC,KAAb;AAAA,UAAmBhC,CAAC,GAAC,KAAK8B,KAA1B;AAAA,UAAgC1B,CAAC,GAAC,KAAK2B,KAAvC;AAA6C,QAAI5B,CAAC,GAAC,EAAN;;AAAS,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAd,EAAgB,EAAEM,CAAlB,EAAoB;AAACH,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAK,CAAL;;AAAO,WAAI,IAAIN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoBG,CAAC,CAACG,CAAD,CAAD,IAAMP,CAAC,CAACO,CAAC,GAACF,CAAF,GAAIJ,CAAL,CAAP;;AAAeG,MAAAA,CAAC,CAACG,CAAD,CAAD,IAAMF,CAAN;AAAQ;;AAAA,WAAOD,CAAP;AAAS;;AAAY,MAAR8D,QAAQ,GAAE;AAAC,UAAMlE,CAAC,GAAC,KAAKiC,KAAb;AAAA,UAAmBhC,CAAC,GAAC,KAAK8B,KAA1B;AAAA,UAAgC1B,CAAC,GAAC,KAAK2B,KAAvC;AAA6C,QAAI5B,CAAC,GAAC,EAAN;;AAAS,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB;AAACH,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAK,CAAL;;AAAO,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoBJ,CAAC,CAACG,CAAD,CAAD,IAAMP,CAAC,CAACQ,CAAC,GAACH,CAAF,GAAIE,CAAL,CAAP;;AAAeH,MAAAA,CAAC,CAACG,CAAD,CAAD,IAAMN,CAAN;AAAQ;;AAAA,WAAOG,CAAP;AAAS;;AAAe,SAAR+D,QAAQ,CAACnE,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAC,GAAC,IAAT,EAAc;AAAC,UAAMG,CAAC,GAACP,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAR;AAAA,UAAmBT,CAAC,GAACP,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAArB;AAAgC,QAAIR,CAAC,GAAC,IAAImB,CAAJ,CAAMrB,CAAN,EAAQ,CAAR,CAAN;;AAAiB,SAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAMP,CAAC,GAACoB,CAAC,CAACT,IAAF,CAAOlB,CAAC,CAACsC,GAAF,CAAMxB,CAAN,CAAP,EAAiB4B,CAAzB;;AAA2B,UAAI3B,CAAC,GAAC,IAAIY,CAAJ,CAAMrB,CAAN,EAAQ,CAAR,EAAW,MAAIF,CAAC,CAAC+D,MAAjB,CAAN;AAAA,UAAgClD,CAAC,GAACV,CAAC,CAACmD,GAAF,CAAM3D,CAAC,CAAC6C,GAAF,CAAM7B,CAAN,CAAN,CAAlC;AAAA,UAAkDqD,CAAC,GAACnD,CAAC,CAACiB,KAAF,EAApD;;AAA8D,SAAE;AAAC,cAAMlC,CAAC,GAACD,CAAC,CAAC6C,GAAF,CAAMwB,CAAN,CAAR;AAAA,cAAiBhE,CAAC,GAACa,CAAC,CAACyB,CAAF,CAAIE,GAAJ,CAAQ3B,CAAR,EAAWsB,KAAX,CAAiB,CAAjB,EAAmB,CAAnB,IAAsB6B,CAAC,CAAC1B,CAAF,CAAIE,GAAJ,CAAQ5C,CAAR,EAAWuC,KAAX,CAAiB,CAAjB,EAAmB,CAAnB,CAAzC;AAA+DxB,QAAAA,CAAC,GAACA,CAAC,CAAC0C,GAAF,CAAMW,CAAC,CAACb,IAAF,CAAOnD,CAAP,CAAN,CAAF;AAAmB,cAAMD,CAAC,GAACc,CAAC,CAACyC,GAAF,CAAM1D,CAAC,CAACuD,IAAF,CAAOnD,CAAP,CAAN,CAAR;AAAA,cAAyBE,CAAC,GAACH,CAAC,CAACuC,CAAF,CAAIE,GAAJ,CAAQzC,CAAR,EAAWoC,KAAX,CAAiB,CAAjB,EAAmB,CAAnB,IAAsBtB,CAAC,CAACyB,CAAF,CAAIE,GAAJ,CAAQ3B,CAAR,EAAWsB,KAAX,CAAiB,CAAjB,EAAmB,CAAnB,CAAjD;AAAuE6B,QAAAA,CAAC,GAACjE,CAAC,CAACsD,GAAF,CAAMW,CAAC,CAACb,IAAF,CAAOjD,CAAP,CAAN,CAAF,EAAmBW,CAAC,GAACd,CAArB;AAAuB,OAAnL,QAAyLF,IAAI,CAACQ,GAAL,CAASQ,CAAC,CAAC6C,IAAX,IAAiB3D,CAA1M;;AAA6MK,MAAAA,CAAC,GAACA,CAAC,CAACuC,MAAF,CAAShC,CAAT,EAAW,YAAX,CAAF;AAA2B;;AAAA,WAAOP,CAAP;AAAS;;AAAY,SAAL6D,KAAK,CAACtE,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAG;AAACsE,MAAAA,CAAC,EAAClE,CAAH;AAAKmE,MAAAA,CAAC,EAACpE;AAAP,QAAU,OAAMJ,CAAN,IAAS,OAAMA,CAAf,GAAiBA,CAAjB,GAAmB4B,CAAC,CAAC6C,EAAF,CAAKzE,CAAL,CAAhC;AAAA,QAAwCO,CAAC,GAACF,CAAC,CAACY,KAAF,CAAQ,CAAR,CAA1C;AAAA,QAAqDT,CAAC,GAACP,CAAC,CAACkC,KAAF,EAAvD;;AAAiE,SAAI,IAAInC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB;AAAC,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAC,GAAC,CAAhB,EAAkB,EAAEC,CAApB,EAAsBO,CAAC,CAACiC,SAAF,CAAY,CAAZ,EAAczC,CAAd,EAAgBQ,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUxC,CAAV,IAAaK,CAAC,CAACmC,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaO,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUvC,CAAV,CAA1C;;AAAwDO,MAAAA,CAAC,CAACiC,SAAF,CAAY,CAAZ,EAAczC,CAAd,EAAgBQ,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUxC,CAAV,IAAaK,CAAC,CAACmC,KAAF,CAAQxC,CAAR,EAAUA,CAAV,CAA7B;AAA2C;;AAAA,SAAI,IAAIA,CAAC,GAACO,CAAC,GAAC,CAAZ,EAAcP,CAAC,IAAE,CAAjB,EAAmB,EAAEA,CAArB,EAAuB;AAAC,WAAI,IAAIC,CAAC,GAACM,CAAC,GAAC,CAAZ,EAAcN,CAAC,GAACD,CAAhB,EAAkB,EAAEC,CAApB,EAAsBO,CAAC,CAACiC,SAAF,CAAY,CAAZ,EAAczC,CAAd,EAAgBQ,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUxC,CAAV,IAAaI,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaO,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUvC,CAAV,CAA1C;;AAAwDO,MAAAA,CAAC,CAACiC,SAAF,CAAY,CAAZ,EAAczC,CAAd,EAAgBQ,CAAC,CAACgC,KAAF,CAAQ,CAAR,EAAUxC,CAAV,IAAaI,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUA,CAAV,CAA7B;AAA2C;;AAAA,WAAOQ,CAAP;AAAS;;AAAS,SAAFiE,EAAE,CAACzE,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAR;AAAA,UAAmBZ,CAAC,GAAC,IAAIuB,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAU,OAAV,CAArB;AAAA,UAAwCG,CAAC,GAAC,IAAIwB,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAU,UAAV,CAA1C;;AAAgE,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAd,EAAgB,EAAEM,CAAlB,EAAoB;AAAC,WAAI,IAAIC,CAAC,GAACD,CAAV,EAAYC,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAIP,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoBC,CAAC,IAAEI,CAAC,CAACmC,KAAF,CAAQhC,CAAR,EAAUR,CAAV,IAAaI,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUO,CAAV,CAAhB;;AAA6BF,QAAAA,CAAC,CAACoC,SAAF,CAAYjC,CAAZ,EAAcD,CAAd,EAAgBP,CAAC,CAACwC,KAAF,CAAQhC,CAAR,EAAUD,CAAV,IAAaN,CAA7B;AAAgC;;AAAA,WAAI,IAAIO,CAAC,GAACD,CAAV,EAAYC,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAG,MAAIH,CAAC,CAACmC,KAAF,CAAQjC,CAAR,EAAUA,CAAV,CAAP,EAAoB;AAAO,YAAIN,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoBC,CAAC,IAAEI,CAAC,CAACmC,KAAF,CAAQjC,CAAR,EAAUP,CAAV,IAAaI,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUQ,CAAV,CAAhB;;AAA6BJ,QAAAA,CAAC,CAACqC,SAAF,CAAYlC,CAAZ,EAAcC,CAAd,EAAgB,CAACR,CAAC,CAACwC,KAAF,CAAQjC,CAAR,EAAUC,CAAV,IAAaP,CAAd,IAAiBI,CAAC,CAACmC,KAAF,CAAQjC,CAAR,EAAUA,CAAV,CAAjC;AAA+C;AAAC;;AAAA,WAAM;AAACgE,MAAAA,CAAC,EAAClE,CAAH;AAAKmE,MAAAA,CAAC,EAACpE;AAAP,KAAN;AAAgB;;AAAU,SAAHsE,GAAG,CAAC1E,CAAD,EAAGC,CAAC,GAAC,CAAL,EAAO;AAAC,UAAMI,CAAC,GAACL,CAAC,CAAC2C,CAAV;AAAY,QAAIvC,CAAC,GAACC,CAAC,CAACwC,GAAF,CAAM7C,CAAN,CAAN;AAAA,QAAeO,CAAC,GAACP,CAAC,CAAC6C,GAAF,CAAMxC,CAAN,CAAjB;AAAA,QAA0B;AAACsE,MAAAA,YAAY,EAACnE,CAAd;AAAgBoE,MAAAA,WAAW,EAACnE;AAA5B,QAA+BoE,2BAA2B,CAACzE,CAAD,EAAGH,CAAH,CAApF;AAAA,QAA0F;AAAC0E,MAAAA,YAAY,EAAC5D;AAAd,QAAiB8D,2BAA2B,CAACtE,CAAD,EAAGN,CAAH,CAAtI;AAA4I,WAAM;AAACuE,MAAAA,CAAC,EAACzD,CAAH;AAAK+D,MAAAA,KAAK,EAACrE,CAAC,CAACY,GAAF,CAAOrB,CAAC,IAAEE,IAAI,CAACC,IAAL,CAAUH,CAAV,CAAV,CAAX;AAAoC+E,MAAAA,CAAC,EAACvE;AAAtC,KAAN;AAA+C;;AAA7hR;;AAA8hR,SAASU,CAAT,CAAWjB,CAAX,EAAaI,CAAC,GAACL,CAAf,EAAiB;AAAC,MAAII,CAAC,GAACH,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAN;AAAiB,QAAMV,CAAC,GAAC,IAAIqB,CAAJ,CAAMxB,CAAN,EAAQA,CAAR,CAAR;;AAAmB,OAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,UAAMQ,CAAC,GAACP,CAAC,CAACmB,GAAF,CAAMpB,CAAN,CAAR;;AAAiB,SAAI,IAAIS,CAAC,GAACT,CAAC,GAAC,CAAZ,EAAcS,CAAC,GAACL,CAAhB,EAAkB,EAAEK,CAApB,EAAsB;AAAC,YAAML,CAAC,GAACC,CAAC,CAACG,CAAD,EAAGP,CAAC,CAACmB,GAAF,CAAMX,CAAN,CAAH,CAAT;AAAsBF,MAAAA,CAAC,CAACkC,SAAF,CAAYzC,CAAZ,EAAcS,CAAd,EAAgBL,CAAhB,GAAmBG,CAAC,CAACkC,SAAF,CAAYhC,CAAZ,EAAcT,CAAd,EAAgBI,CAAhB,CAAnB;AAAsC;AAAC;;AAAA,SAAOG,CAAP;AAAS;;AAAA,SAAS8D,CAAT,CAAWrE,CAAX,EAAaC,CAAb,EAAeI,CAAC,GAAC,IAAjB,EAAsB;AAAC,MAAGA,CAAC,KAAGA,CAAC,GAACH,IAAI,CAACY,GAAL,CAASZ,IAAI,CAAC8E,KAAL,CAAW/E,CAAC,GAACD,CAAb,IAAgB,CAAzB,EAA2B,CAA3B,CAAL,CAAD,EAAqCK,CAAC,GAAC,CAA1C,EAA4C,OAAO,MAAIA,CAAJ,GAAM,CAACL,CAAD,CAAN,GAAU,EAAjB;AAAoB,MAAII,CAAC,GAAC,IAAIO,KAAJ,CAAUN,CAAV,CAAN;;AAAmB,OAAI,IAAIE,CAAC,GAACF,CAAC,IAAE,CAAb,EAAeE,CAAC,IAAE,CAAlB,EAAoB,EAAEA,CAAtB,EAAwBH,CAAC,CAACG,CAAD,CAAD,GAAK,CAACA,CAAC,GAACN,CAAF,GAAI,CAACI,CAAC,GAACE,CAAH,IAAMP,CAAX,IAAcK,CAAnB;;AAAqB,SAAOD,CAAP;AAAS;;AAAA,SAAS6E,CAAT,CAAWhF,CAAX,EAAaI,CAAC,GAACL,CAAf,EAAiB;AAAC,MAAII,CAAC,GAAC,IAAN;;AAAW,MAAGH,CAAC,YAAY2B,CAAhB,EAAkB;AAAC,QAAG,CAAC5B,CAAD,EAAGK,CAAH,IAAMJ,CAAC,CAACgB,KAAX;AAAiB,QAAG,MAAIjB,CAAP,EAASI,CAAC,GAACH,CAAC,CAACmB,GAAF,CAAM,CAAN,CAAF,CAAT,KAAwB;AAAC,UAAG,MAAIf,CAAP,EAAS,MAAK,oBAAL;AAA0BD,MAAAA,CAAC,GAACH,CAAC,CAACsC,GAAF,CAAM,CAAN,CAAF;AAAW;AAAC,GAA5G,MAAiHnC,CAAC,GAACH,CAAF;;AAAI,MAAIM,CAAC,GAACH,CAAC,CAACE,MAAR;AAAA,MAAeE,CAAC,GAAC,IAAIG,KAAJ,CAAUJ,CAAV,CAAjB;AAA8B,SAAOC,CAAC,CAAC0E,IAAF,CAAO,CAAP,GAAU7E,CAAC,CAACD,CAAD,EAAGI,CAAH,CAAlB;AAAwB;;AAAA,MAAM2E,CAAN,CAAO;AAACtD,EAAAA,WAAW,CAAC7B,CAAD,EAAG;AAAC,WAAO,KAAKoF,EAAL,GAAQ,GAAR,EAAY,KAAKC,EAAL,GAAQ,GAApB,EAAwB,KAAKC,SAAL,GAAe,UAAvC,EAAkD,KAAKC,WAAL,GAAiB,UAAnE,EAA8E,KAAKC,WAAL,GAAiB,UAA/F,EAA0G,KAAKC,GAAL,GAAS,IAAI9E,KAAJ,CAAU,KAAKyE,EAAf,CAAnH,EAAsI,KAAKM,IAAL,GAAU,KAAKC,CAAL,GAAO,CAAvJ,EAAyJ,KAAKC,IAAL,GAAU5F,CAAC,IAAG,IAAI6F,IAAJ,EAAD,CAAWC,OAAX,EAAtK,EAA2L,IAAlM;AAAuM;;AAAQ,MAAJF,IAAI,CAAC5F,CAAD,EAAG;AAAC,SAAK+F,KAAL,GAAW/F,CAAX;AAAa,QAAIC,CAAC,GAAC,KAAKwF,GAAX;;AAAe,SAAIxF,CAAC,CAAC,CAAD,CAAD,GAAKD,CAAC,KAAG,CAAT,EAAW,KAAK0F,IAAL,GAAU,CAAzB,EAA2B,KAAKA,IAAL,GAAU,KAAKN,EAA1C,EAA6C,KAAKM,IAAL,IAAW,CAAxD,EAA0D;AAAC,UAAI1F,CAAC,GAAC,KAAK0F,IAAX;AAAA,UAAgBrF,CAAC,GAACJ,CAAC,CAACD,CAAC,GAAC,CAAH,CAAD,GAAOC,CAAC,CAACD,CAAC,GAAC,CAAH,CAAD,KAAS,EAAlC;AAAqCC,MAAAA,CAAC,CAACD,CAAD,CAAD,GAAK,CAAC,cAAY,CAAC,aAAWK,CAAZ,MAAiB,EAA7B,KAAkC,EAAnC,IAAuC,cAAY,QAAMA,CAAlB,CAAvC,GAA4DL,CAAjE,EAAmEC,CAAC,CAACD,CAAD,CAAD,MAAQ,CAA3E;AAA6E;AAAC;;AAAQ,MAAJ4F,IAAI,GAAE;AAAC,WAAO,KAAKG,KAAZ;AAAkB;;AAAU,MAAN3B,MAAM,GAAE;AAAC,WAAO,KAAK4B,UAAL,IAAiB,IAAE,UAAnB,CAAP;AAAsC;;AAAc,MAAVA,UAAU,GAAE;AAAC,QAAIhG,CAAJ;AAAA,QAAMC,CAAC,GAAC,IAAIU,KAAJ,CAAU,CAAV,EAAY,KAAK2E,SAAjB,CAAR;;AAAoC,QAAG,KAAKI,IAAL,IAAW,KAAKN,EAAnB,EAAsB;AAAC,UAAI/E,CAAJ;AAAM,WAAKqF,IAAL,IAAW,KAAKN,EAAL,GAAQ,CAAnB,KAAuB,KAAKQ,IAAL,GAAU,IAAjC;AAAuC,UAAIxF,CAAC,GAAC,KAAKgF,EAAL,GAAQ,KAAKC,EAAnB;AAAA,UAAsB9E,CAAC,GAAC,KAAK8E,EAAL,GAAQ,KAAKD,EAArC;;AAAwC,WAAI/E,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,CAAV,EAAY,EAAEC,CAAd,EAAgBL,CAAC,GAAC,KAAKyF,GAAL,CAASpF,CAAT,IAAY,KAAKkF,WAAjB,GAA6B,KAAKE,GAAL,CAASpF,CAAC,GAAC,CAAX,IAAc,KAAKmF,WAAlD,EAA8D,KAAKC,GAAL,CAASpF,CAAT,IAAY,KAAKoF,GAAL,CAASpF,CAAC,GAAC,KAAKgF,EAAhB,IAAoBrF,CAAC,KAAG,CAAxB,GAA0BC,CAAC,CAAC,IAAED,CAAH,CAArG;;AAA2G,aAAKK,CAAC,GAAC,KAAK+E,EAAL,GAAQ,CAAf,EAAiB,EAAE/E,CAAnB,EAAqBL,CAAC,GAAC,KAAKyF,GAAL,CAASpF,CAAT,IAAY,KAAKkF,WAAjB,GAA6B,KAAKE,GAAL,CAASpF,CAAC,GAAC,CAAX,IAAc,KAAKmF,WAAlD,EAA8D,KAAKC,GAAL,CAASpF,CAAT,IAAY,KAAKoF,GAAL,CAASpF,CAAC,GAACE,CAAX,IAAcP,CAAC,KAAG,CAAlB,GAAoBC,CAAC,CAAC,IAAED,CAAH,CAA/F;;AAAqGA,MAAAA,CAAC,GAAC,KAAKyF,GAAL,CAAS,KAAKL,EAAL,GAAQ,CAAjB,IAAoB,KAAKG,WAAzB,GAAqC,KAAKE,GAAL,CAAS,CAAT,IAAY,KAAKD,WAAxD,EAAoE,KAAKC,GAAL,CAAS,KAAKL,EAAL,GAAQ,CAAjB,IAAoB,KAAKK,GAAL,CAAS,KAAKJ,EAAL,GAAQ,CAAjB,IAAoBrF,CAAC,KAAG,CAAxB,GAA0BC,CAAC,CAAC,IAAED,CAAH,CAAnH,EAAyH,KAAK0F,IAAL,GAAU,CAAnI;AAAqI;;AAAA,WAAO1F,CAAC,GAAC,KAAKyF,GAAL,CAAS,KAAKC,IAAL,IAAW,CAApB,CAAF,EAAyB1F,CAAC,IAAEA,CAAC,KAAG,EAAhC,EAAmCA,CAAC,IAAEA,CAAC,IAAE,CAAH,GAAK,UAA3C,EAAsDA,CAAC,IAAEA,CAAC,IAAE,EAAH,GAAM,UAA/D,EAA0EA,CAAC,IAAEA,CAAC,KAAG,EAAjF,EAAoFA,CAAC,KAAG,CAA/F;AAAiG;;AAAAiG,EAAAA,MAAM,CAACjG,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAGD,CAAC,YAAY4B,CAAhB,EAAkB;AAAC,UAAG,CAACvB,CAAD,EAAGD,CAAH,IAAMJ,CAAC,CAACiB,KAAX;AAAiB,UAAGhB,CAAC,GAACI,CAAL,EAAO,MAAK,kBAAL;AAAwB,UAAIE,CAAC,GAAC,IAAII,KAAJ,CAAUV,CAAV,CAAN;AAAA,UAAmBO,CAAC,GAAC6D,CAAC,CAAC,CAAD,EAAGhE,CAAC,GAAC,CAAL,CAAtB;;AAA8B,WAAI,IAAIL,CAAC,GAAC,CAAN,EAAQK,CAAC,GAACG,CAAC,CAACF,MAAhB,EAAuBN,CAAC,GAACC,CAAzB,EAA2B,EAAED,CAAF,EAAI,EAAEK,CAAjC,EAAmC;AAAC,YAAIJ,CAAC,GAAC,KAAK+F,UAAL,GAAgB3F,CAAtB;AAAwBE,QAAAA,CAAC,CAACP,CAAD,CAAD,GAAKQ,CAAC,CAAC0F,MAAF,CAASjG,CAAT,EAAW,CAAX,EAAc,CAAd,CAAL;AAAsB;;AAAA,aAAOM,CAAC,CAACc,GAAF,CAAOpB,CAAC,IAAED,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAV,CAAP;AAA4B;;AAAA,QAAGU,KAAK,CAACyB,OAAN,CAAcpC,CAAd,KAAkBA,CAAC,YAAYkC,YAAlC,EAA+C;AAAC,UAAI7B,CAAC,GAACL,CAAC,CAACM,MAAR;AAAe,UAAGL,CAAC,GAACI,CAAL,EAAO,MAAK,kBAAL;AAAwB,UAAID,CAAC,GAAC,IAAIO,KAAJ,CAAUV,CAAV,CAAN;AAAA,UAAmBM,CAAC,GAAC8D,CAAC,CAAC,CAAD,EAAGhE,CAAC,GAAC,CAAL,CAAtB;;AAA8B,WAAI,IAAIL,CAAC,GAAC,CAAN,EAAQK,CAAC,GAACE,CAAC,CAACD,MAAhB,EAAuBN,CAAC,GAACC,CAAzB,EAA2B,EAAED,CAAF,EAAI,EAAEK,CAAjC,EAAmC;AAAC,YAAIJ,CAAC,GAAC,KAAK+F,UAAL,GAAgB3F,CAAtB;AAAwBD,QAAAA,CAAC,CAACJ,CAAD,CAAD,GAAKO,CAAC,CAAC2F,MAAF,CAASjG,CAAT,EAAW,CAAX,EAAc,CAAd,CAAL;AAAsB;;AAAA,aAAOG,CAAC,CAACiB,GAAF,CAAOpB,CAAC,IAAED,CAAC,CAACC,CAAD,CAAX,CAAP;AAAwB;AAAC;;AAAa,SAANgG,MAAM,CAACjG,CAAD,EAAGC,CAAH,EAAKI,CAAC,GAAC,QAAP,EAAgB;AAAC,QAAG,CAACD,CAAD,EAAGG,CAAH,IAAMP,CAAC,CAACiB,KAAX;AAAiB,QAAGhB,CAAC,GAACG,CAAL,EAAO,MAAK,kBAAL;AAAwB,QAAII,CAAC,GAAC,IAAI2E,CAAJ,CAAM9E,CAAN,CAAN;AAAA,QAAeI,CAAC,GAAC,IAAIE,KAAJ,CAAUV,CAAV,CAAjB;AAAA,QAA8Bc,CAAC,GAACsD,CAAC,CAAC,CAAD,EAAGjE,CAAC,GAAC,CAAL,CAAjC;;AAAyC,SAAI,IAAIJ,CAAC,GAAC,CAAN,EAAQK,CAAC,GAACU,CAAC,CAACT,MAAhB,EAAuBN,CAAC,GAACC,CAAzB,EAA2B,EAAED,CAAF,EAAI,EAAEK,CAAjC,EAAmC;AAAC,UAAIJ,CAAC,GAACO,CAAC,CAACwF,UAAF,GAAa3F,CAAnB;AAAqBI,MAAAA,CAAC,CAACT,CAAD,CAAD,GAAKe,CAAC,CAACmF,MAAF,CAASjG,CAAT,EAAW,CAAX,EAAc,CAAd,CAAL;AAAsB;;AAAA,WAAOQ,CAAC,CAACY,GAAF,CAAOpB,CAAC,IAAED,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAV,CAAP;AAA4B;;AAA7xD;;AAA8xD,SAASkG,CAAT,CAAWnG,CAAX,EAAa;AAAC,MAAIC,CAAJ;;AAAM,OAAI,MAAMI,CAAV,IAAeL,CAAf,EAAiB,QAAMK,CAAN,KAAUJ,CAAC,GAACI,CAAF,IAAK,KAAK,CAAL,KAASJ,CAAT,IAAYI,CAAC,IAAEA,CAA9B,MAAmCJ,CAAC,GAACI,CAArC;;AAAwC,SAAOJ,CAAP;AAAS;;AAAA,MAAMmG,CAAN,CAAO;AAACvE,EAAAA,WAAW,CAAC7B,CAAC,GAAC,IAAH,EAAQC,CAAC,GAAED,CAAC,IAAEA,CAAd,EAAiBK,CAAC,GAAC,KAAnB,EAAyB;AAAC,WAAOL,CAAC,GAACoG,CAAC,CAACC,OAAF,CAAUrG,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAD,IAAmB,KAAKiG,SAAL,GAAerG,CAAf,EAAiB,KAAKsG,UAAL,GAAgB,EAAjC,EAAoC,KAAKC,WAAL,GAAiB,SAAOnG,CAAP,GAAS,CAACL,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAlB,GAAoB,SAAOI,CAAP,GAAS,CAACL,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAlB,GAAoBI,CAA7F,EAA+F,IAAlH,CAAR;AAAgI;;AAAc,SAAPgG,OAAO,CAACrG,CAAD,EAAGC,CAAC,GAAED,CAAC,IAAEA,CAAT,EAAYK,CAAC,GAAC,KAAd,EAAoB;AAAC,UAAMD,CAAC,GAAC,IAAIgG,CAAJ,CAAM,IAAN,EAAWnG,CAAX,EAAaI,CAAb,CAAR;AAAA,UAAwBE,CAAC,GAACH,CAAC,CAACmG,UAA5B;;AAAuC,SAAI,MAAMlG,CAAV,IAAeL,CAAf,EAAiBO,CAAC,CAACM,IAAF,CAAO;AAAC4F,MAAAA,OAAO,EAACpG,CAAT;AAAWqG,MAAAA,KAAK,EAACzG,CAAC,CAACI,CAAD;AAAlB,KAAP;;AAA+B,SAAI,IAAIJ,CAAC,GAACC,IAAI,CAACyG,KAAL,CAAW3G,CAAC,CAACM,MAAF,GAAS,CAAT,GAAW,CAAtB,CAAV,EAAmCL,CAAC,IAAE,CAAtC,EAAwC,EAAEA,CAA1C,EAA4CG,CAAC,CAACwG,aAAF,CAAgB3G,CAAhB;;AAAmB,WAAOG,CAAP;AAAS;;AAAAyG,EAAAA,KAAK,CAAC7G,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAKkG,UAAb;AAAwB,KAAClG,CAAC,CAACJ,CAAD,CAAF,EAAMI,CAAC,CAACL,CAAD,CAAP,IAAY,CAACK,CAAC,CAACL,CAAD,CAAF,EAAMK,CAAC,CAACJ,CAAD,CAAP,CAAZ;AAAwB;;AAAA6G,EAAAA,WAAW,GAAE;AAAC,UAAM9G,CAAC,GAAC,KAAKuG,UAAb;AAAwB,QAAItG,CAAC,GAACD,CAAC,CAACM,MAAF,GAAS,CAAf;;AAAiB,WAAKL,CAAC,GAAC,CAAP,GAAU;AAAC,UAAII,CAAC,GAACH,IAAI,CAACyG,KAAL,CAAW,CAAC1G,CAAC,GAAC,CAAH,IAAM,CAAjB,CAAN;AAA0B,UAAG,CAAC,KAAKuG,WAAL,CAAiBxG,CAAC,CAACC,CAAD,CAAD,CAAKyG,KAAtB,EAA4B1G,CAAC,CAACK,CAAD,CAAD,CAAKqG,KAAjC,CAAJ,EAA4C;AAAM,WAAKG,KAAL,CAAWxG,CAAX,EAAaJ,CAAb,GAAgBA,CAAC,GAACI,CAAlB;AAAoB;AAAC;;AAAAQ,EAAAA,IAAI,CAACb,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC;AAACwG,MAAAA,OAAO,EAACzG,CAAT;AAAW0G,MAAAA,KAAK,EAAC,KAAKJ,SAAL,CAAetG,CAAf;AAAjB,KAAR;AAA4C,WAAO,KAAKuG,UAAL,CAAgB1F,IAAhB,CAAqBZ,CAArB,GAAwB,KAAK6G,WAAL,EAAxB,EAA2C,IAAlD;AAAuD;;AAAAF,EAAAA,aAAa,CAAC5G,CAAC,GAAC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,KAAKsG,UAAb;AAAA,UAAwBlG,CAAC,GAAC,KAAKmG,WAA/B;AAAA,UAA2CpG,CAAC,GAACH,CAAC,CAACK,MAA/C;AAAsD,QAAIC,CAAC,GAAC,IAAEP,CAAF,GAAI,CAAV;AAAA,QAAYQ,CAAC,GAAC,IAAER,CAAF,GAAI,CAAlB;AAAA,QAAoBS,CAAC,GAACT,CAAtB;AAAwB,QAAGS,CAAC,GAACL,CAAL,EAAO,MAAK,0BAAL;AAAgCG,IAAAA,CAAC,GAACH,CAAF,IAAKC,CAAC,CAACJ,CAAC,CAACM,CAAD,CAAD,CAAKmG,KAAN,EAAYzG,CAAC,CAACQ,CAAD,CAAD,CAAKiG,KAAjB,CAAN,KAAgCjG,CAAC,GAACF,CAAlC,GAAqCC,CAAC,GAACJ,CAAF,IAAKC,CAAC,CAACJ,CAAC,CAACO,CAAD,CAAD,CAAKkG,KAAN,EAAYzG,CAAC,CAACQ,CAAD,CAAD,CAAKiG,KAAjB,CAAN,KAAgCjG,CAAC,GAACD,CAAlC,CAArC,EAA0EC,CAAC,KAAGT,CAAJ,KAAQ,KAAK6G,KAAL,CAAW7G,CAAX,EAAaS,CAAb,GAAgB,KAAKmG,aAAL,CAAmBnG,CAAnB,CAAxB,CAA1E;AAAyH;;AAAAsG,EAAAA,GAAG,GAAE;AAAC,UAAM/G,CAAC,GAAC,KAAKuG,UAAb;AAAwB,QAAG,MAAIvG,CAAC,CAACM,MAAT,EAAgB,OAAO,IAAP;AAAY,QAAG,MAAIN,CAAC,CAACM,MAAT,EAAgB,OAAON,CAAC,CAAC+G,GAAF,EAAP;;AAAe,SAAKF,KAAL,CAAW,CAAX,EAAa7G,CAAC,CAACM,MAAF,GAAS,CAAtB;;AAAyB,UAAML,CAAC,GAACD,CAAC,CAAC+G,GAAF,EAAR;AAAgB,WAAO,KAAKH,aAAL,IAAqB3G,CAA5B;AAA8B;;AAAS,MAAL+G,KAAK,GAAE;AAAC,WAAO,KAAKT,UAAL,CAAgBjG,MAAhB,GAAuB,CAAvB,GAAyB,KAAKiG,UAAL,CAAgB,CAAhB,CAAzB,GAA4C,IAAnD;AAAwD;;AAAQ,GAAPU,OAAO,GAAE;AAAC,SAAI,IAAIjH,CAAC,GAAC,CAAN,EAAQC,CAAC,GAAC,KAAKsG,UAAL,CAAgBjG,MAA9B,EAAqCN,CAAC,GAACC,CAAvC,EAAyC,EAAED,CAA3C,EAA6C,MAAM,KAAKuG,UAAL,CAAgBvG,CAAhB,EAAmByG,OAAzB;AAAiC;;AAAAS,EAAAA,OAAO,GAAE;AAAC,WAAO,KAAKC,IAAL,GAAY3F,IAAZ,CAAkB,CAACxB,CAAD,EAAGC,CAAH,KAAO,KAAKuG,WAAL,CAAiBxG,CAAjB,EAAmBC,CAAnB,IAAsB,CAAC,CAAvB,GAAyB,CAAlD,CAAP;AAA6D;;AAAAkH,EAAAA,IAAI,GAAE;AAAC,WAAO,KAAKZ,UAAL,CAAgBlF,GAAhB,CAAqBrB,CAAC,IAAEA,CAAC,CAACyG,OAA1B,CAAP;AAA2C;;AAAAW,EAAAA,QAAQ,GAAE;AAAC,WAAO,KAAKb,UAAZ;AAAuB;;AAAU,MAANjG,MAAM,GAAE;AAAC,WAAO,KAAKiG,UAAL,CAAgBjG,MAAvB;AAA8B;;AAAS,MAAL+G,KAAK,GAAE;AAAC,WAAO,MAAI,KAAK/G,MAAhB;AAAuB;;AAAx9C;;AAAy9C,MAAMgH,CAAN,CAAO;AAACzF,EAAAA,WAAW,CAAC5B,CAAC,GAAC,IAAH,EAAQI,CAAC,GAACL,CAAV,EAAY;AAAC,WAAO,KAAKuH,KAAL,GAAW,MAAK;AAAC1F,MAAAA,WAAW,CAAC7B,CAAD,EAAGC,CAAC,GAAC,IAAL,EAAUI,CAAC,GAAC,IAAZ,EAAiBD,CAAC,GAAC,IAAnB,EAAwB;AAAC,aAAKoH,KAAL,GAAWxH,CAAX,EAAa,KAAKyH,MAAL,GAAYxH,CAAzB,EAA2B,KAAKyH,MAAL,GAAYrH,CAAvC,EAAyC,KAAKsH,MAAL,GAAYvH,CAArD;AAAuD;;AAA5F,KAAhB,EAA8G,KAAKwH,KAAL,GAAW,MAAK;AAAC/F,MAAAA,WAAW,CAAC7B,CAAD,EAAG;AAAC,aAAK6H,MAAL,GAAY7H,CAAZ;AAAc;;AAA9B,KAA9H,EAA8J,KAAK8H,OAAL,GAAazH,CAA3K,EAA6KJ,CAAC,IAAE,KAAKyD,GAAL,CAASzD,CAAT,CAAhL,EAA4L,IAAnM;AAAwM;;AAAAyD,EAAAA,GAAG,CAAC1D,CAAD,EAAG;AAAC,WAAOA,CAAC,GAACA,CAAC,CAACqB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,MAAQ;AAAC8H,MAAAA,KAAK,EAAC9H,CAAP;AAASwG,MAAAA,OAAO,EAACzG;AAAjB,KAAR,CAAP,CAAF,EAAwC,KAAKgI,KAAL,GAAW,KAAKC,UAAL,CAAgBjI,CAAhB,CAAnD,EAAsE,IAA7E;AAAkF;;AAAAiI,EAAAA,UAAU,CAACjI,CAAD,EAAG;AAAC,QAAG,MAAIA,CAAC,CAACM,MAAT,EAAgB,OAAO,IAAI,KAAKsH,KAAT,CAAe5H,CAAf,CAAP;AAAyB;AAAC,UAAIC,CAAJ;AAAA,UAAMI,CAAC,GAAC,KAAK6H,gBAAL,CAAsBlI,CAAtB,CAAR;AAAA,UAAiCI,CAAC,GAACJ,CAAC,CAACwB,IAAF,CAAQ,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACyG,OAAF,CAAUpG,CAAV,IAAaJ,CAAC,CAACwG,OAAF,CAAUpG,CAAV,CAA5B,CAAnC;AAAA,UAA8EE,CAAC,GAACH,CAAC,CAACE,MAAlF;AAAA,UAAyFE,CAAC,GAACN,IAAI,CAACyG,KAAL,CAAWpG,CAAC,GAAC,CAAb,CAA3F;AAAA,UAA2GE,CAAC,GAACT,CAAC,CAACQ,CAAD,CAA9G;AAAA,UAAkHO,CAAC,GAACX,CAAC,CAACqB,KAAF,CAAQ,CAAR,EAAUjB,CAAV,CAApH;AAAA,UAAiIQ,CAAC,GAACZ,CAAC,CAACqB,KAAF,CAAQjB,CAAR,EAAUD,CAAV,CAAnI;AAAA,UAAgJqB,CAAC,GAAC1B,IAAI,CAACY,GAAL,CAAS,GAAGd,CAAC,CAACqB,GAAF,CAAOrB,CAAC,IAAE,KAAK8H,OAAL,CAAarH,CAAC,CAACgG,OAAf,EAAuBzG,CAAC,CAACyG,OAAzB,CAAV,CAAZ,CAAlJ;;AAA6M,aAAOxG,CAAC,GAACc,CAAC,CAACT,MAAF,GAAS,CAAT,IAAYU,CAAC,CAACV,MAAF,GAAS,CAArB,GAAuB,IAAI,KAAKiH,KAAT,CAAe9G,CAAf,EAAiB,KAAKwH,UAAL,CAAgBlH,CAAhB,CAAjB,EAAoC,KAAKkH,UAAL,CAAgBjH,CAAhB,CAApC,EAAuDY,CAAvD,CAAvB,GAAiF,IAAI,KAAKgG,KAAT,CAAe5H,CAAf,CAAnF,EAAqGC,CAA5G;AAA8G;AAAC;;AAAAiI,EAAAA,gBAAgB,CAAClI,CAAD,EAAG;AAAC,QAAIC,CAAC,GAACD,CAAC,CAAC,CAAD,CAAD,CAAKyG,OAAL,CAAanG,MAAnB;AAAA,QAA0BD,CAAC,GAAC,IAAIM,KAAJ,CAAUV,CAAV,CAA5B;;AAAyC,SAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoBK,CAAC,CAACL,CAAD,CAAD,GAAK,CAAC,IAAE,CAAH,EAAK,CAAC,CAAD,GAAG,CAAR,CAAL;;AAAgB,QAAII,CAAC,GAACJ,CAAC,CAACmI,MAAF,CAAU,CAACnI,CAAD,EAAGK,CAAH,KAAO;AAAC,WAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoBJ,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,IAAQF,IAAI,CAAC4D,GAAL,CAAS9D,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,CAAT,EAAiBC,CAAC,CAACoG,OAAF,CAAUrG,CAAV,CAAjB,CAAR,EAAuCJ,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,IAAQF,IAAI,CAACY,GAAL,CAASd,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,CAAT,EAAiBC,CAAC,CAACoG,OAAF,CAAUrG,CAAV,CAAjB,CAA/C;;AAA8E,aAAOJ,CAAP;AAAS,KAA7H,EAA+HK,CAA/H,CAAN;AAAwID,IAAAA,CAAC,GAACA,CAAC,CAACiB,GAAF,CAAOrB,CAAC,IAAEA,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAhB,CAAF;AAAwB,QAAIO,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoBO,CAAC,GAACH,CAAC,CAACJ,CAAD,CAAD,GAAKI,CAAC,CAACG,CAAD,CAAN,GAAUP,CAAV,GAAYO,CAAd;;AAAgB,WAAOA,CAAP;AAAS;;AAAA6H,EAAAA,MAAM,CAACpI,CAAD,EAAGC,CAAC,GAAC,CAAL,EAAO;AAAC,WAAO,KAAKoI,OAAL,CAAarI,CAAb,EAAeC,CAAf,EAAiB,IAAImG,CAAJ,CAAM,IAAN,EAAYnG,CAAC,IAAE,KAAK6H,OAAL,CAAa7H,CAAC,CAACwG,OAAf,EAAuBzG,CAAvB,CAAf,EAA0C,KAA1C,CAAjB,EAAkE,KAAKgI,KAAvE,CAAP;AAAqF;;AAAAK,EAAAA,OAAO,CAACrI,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAP,EAAS;AAAC,QAAGC,CAAC,CAACC,MAAF,IAAUL,CAAV,IAAaG,CAAC,CAACoH,KAAf,IAAsBpH,CAAC,CAACuH,MAAxB,IAAgC,KAAKG,OAAL,CAAa9H,CAAb,EAAeI,CAAC,CAACoH,KAAF,CAAQf,OAAvB,IAAgCrG,CAAC,CAACuH,MAAlC,IAA0CtH,CAAC,CAAC2G,KAAF,CAAQN,KAArF,EAA2F,OAAOrG,CAAP;AAAS,QAAGD,CAAC,CAACqH,MAAF,IAAU,KAAKY,OAAL,CAAarI,CAAb,EAAeC,CAAf,EAAiBI,CAAjB,EAAmBD,CAAC,CAACqH,MAArB,CAAV,EAAuCrH,CAAC,CAACsH,MAAF,IAAU,KAAKW,OAAL,CAAarI,CAAb,EAAeC,CAAf,EAAiBI,CAAjB,EAAmBD,CAAC,CAACsH,MAArB,CAAjD,EAA8EtH,CAAC,CAACyH,MAAnF,EAA0F,KAAI,IAAI7H,CAAC,GAAC,CAAN,EAAQO,CAAC,GAACH,CAAC,CAACyH,MAAF,CAASvH,MAAvB,EAA8BN,CAAC,GAACO,CAAhC,EAAkC,EAAEP,CAApC,EAAsC;AAAC,UAAIO,CAAC,GAACH,CAAC,CAACyH,MAAF,CAAS7H,CAAT,CAAN;AAAkBC,MAAAA,CAAC,GAACI,CAAC,CAACC,MAAJ,GAAWD,CAAC,CAACQ,IAAF,CAAON,CAAP,CAAX,IAAsBF,CAAC,CAACQ,IAAF,CAAON,CAAP,GAAUF,CAAC,CAAC0G,GAAF,EAAhC;AAAyC;AAAA,WAAO1G,CAAP;AAAS;;AAAj4C;;AAAk4C,SAASiI,CAAT,CAAWrI,CAAX,EAAa;AAAC,QAAK,CAACG,CAAD,EAAGG,CAAH,IAAMN,CAAC,CAACgB,KAAb;AAAA,QAAmBT,CAAC,GAAC,IAAIoB,CAAJ,CAAMxB,CAAN,EAAQG,CAAR,EAAU,UAAV,CAArB;AAAA,QAA2CE,CAAC,GAAC,IAAImB,CAAJ,CAAMrB,CAAN,EAAQA,CAAR,EAAU,CAAV,CAA7C;;AAA0D,OAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAd,EAAgB,EAAEQ,CAAlB,EAAoB;AAAC,QAAIR,CAAC,GAACN,CAAC,CAACsC,GAAF,CAAMxB,CAAN,CAAN;;AAAe,SAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACe,CAAd,EAAgB,EAAEf,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACO,CAAC,CAAC+B,GAAF,CAAMvC,CAAN,CAAR;AAAA,YAAiBI,CAAC,GAACC,CAAC,CAACJ,CAAC,CAACoB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACO,CAAC,CAACN,CAAD,CAAjB,CAAD,CAApB;AAA6CQ,MAAAA,CAAC,CAACgC,SAAF,CAAYzC,CAAZ,EAAce,CAAd,EAAgBX,CAAhB,GAAmBG,CAAC,GAACA,CAAC,CAACc,GAAF,CAAO,CAACrB,CAAD,EAAGK,CAAH,KAAOL,CAAC,GAACI,CAAC,GAACH,CAAC,CAACI,CAAD,CAAnB,CAArB;AAA8C;;AAAA,UAAMW,CAAC,GAACiE,CAAC,CAAC1E,CAAD,EAAGP,CAAH,CAAT;;AAAe,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoBQ,CAAC,CAACiC,SAAF,CAAYzC,CAAZ,EAAce,CAAd,EAAgBR,CAAC,CAACP,CAAD,CAAD,GAAKgB,CAArB;;AAAwBP,IAAAA,CAAC,CAACgC,SAAF,CAAY1B,CAAZ,EAAcA,CAAd,EAAgBC,CAAhB;AAAmB;;AAAA,SAAM;AAACuH,IAAAA,CAAC,EAAC9H,CAAH;AAAK+H,IAAAA,CAAC,EAAChI;AAAP,GAAN;AAAgB;;AAAA,SAASiI,CAAT,CAAWzI,CAAX,EAAaC,CAAC,GAAC,CAAf,EAAiBG,CAAC,GAAC,GAAnB,EAAuBG,CAAC,GAAC,IAAzB,EAA8B;AAAC,QAAMC,CAAC,GAACD,CAAC,YAAY4E,CAAb,GAAe5E,CAAf,GAAiB,IAAI4E,CAAJ,CAAM5E,CAAN,CAAzB;AAAkCP,EAAAA,CAAC,YAAY4B,CAAb,KAAiB5B,CAAC,GAAC4B,CAAC,CAACT,IAAF,CAAOnB,CAAP,CAAnB;AAA8B,QAAMS,CAAC,GAACT,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAR;AAAmB,MAAG;AAACuH,IAAAA,CAAC,EAACzH,CAAH;AAAKwH,IAAAA,CAAC,EAACvH;AAAP,MAAUsH,CAAC,CAAC,IAAI1G,CAAJ,CAAMnB,CAAN,EAAQR,CAAR,EAAW,MAAIO,CAAC,CAAC4D,MAAjB,CAAD,CAAd;;AAA0C,SAAKhE,CAAC,EAAN,GAAU;AAAC,UAAMH,CAAC,GAACe,CAAC,CAACmB,KAAF,EAAR;AAAA,UAAkB5B,CAAC,GAAC+H,CAAC,CAACtI,CAAC,CAAC6C,GAAF,CAAM9B,CAAN,CAAD,CAArB;AAAgCA,IAAAA,CAAC,GAACR,CAAC,CAACiI,CAAJ,EAAMxH,CAAC,GAACT,CAAC,CAACgI,CAAV,EAAYlI,CAAC,CAACW,CAAC,CAAC2C,GAAF,CAAM1D,CAAN,EAAS4D,IAAV,CAAD,GAAiBpD,CAAjB,GAAmB,KAAnB,KAA2BL,CAAC,GAAC,CAA7B,CAAZ;AAA4C;;AAAA,SAAM;AAACwE,IAAAA,WAAW,EAAC5D,CAAC,CAAC6C,IAAf;AAAoBc,IAAAA,YAAY,EAAC5D,CAAC,CAAC2B,SAAF,GAAckB;AAA/C,GAAN;AAAgE;;AAAA,MAAM8E,CAAN,CAAO;AAAmB,MAAdC,cAAc,GAAE;AAAC,WAAO,KAAKC,eAAZ;AAA4B;;AAAkB,MAAdD,cAAc,CAAC3I,CAAD,EAAG;AAAC,WAAO,KAAK4I,eAAL,GAAqB5I,CAArB,EAAuB,IAA9B;AAAmC;;AAAA6B,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,CAAL,EAAOD,CAAC,GAACJ,CAAT,EAAWO,CAAC,GAAC,IAAb,EAAkB;AAAC,QAAGI,KAAK,CAACyB,OAAN,CAAcnC,CAAd,CAAH,EAAoB,KAAK4I,KAAL,GAAW,OAAX,EAAmB,KAAKC,CAAL,GAAOlH,CAAC,CAACT,IAAF,CAAOlB,CAAP,CAA1B,CAApB,KAA4D;AAAC,UAAG,EAAEA,CAAC,YAAY2B,CAAf,CAAH,EAAqB,MAAK,qBAAL;AAA2B,WAAKiH,KAAL,GAAW,QAAX,EAAoB,KAAKC,CAAL,GAAO7I,CAA3B;AAA6B;AAAA,WAAM,CAAC,KAAKmF,EAAN,EAAS,KAAK2D,EAAd,IAAkB,KAAKD,CAAL,CAAO7H,KAAzB,EAA+B,KAAK+H,EAAL,GAAQ3I,CAAvC,EAAyC,KAAKyH,OAAL,GAAa1H,CAAtD,EAAwD,KAAK2F,KAAL,GAAWxF,CAAnE,EAAqE,KAAK0I,WAAL,GAAiB,IAAI9D,CAAJ,CAAM5E,CAAN,CAAtF,EAA+F,KAAK2I,eAAL,GAAqB,CAAC,CAArH,EAAuH,IAA7H;AAAkI;;AAAAC,EAAAA,SAAS,CAACnJ,CAAD,EAAGC,CAAC,GAAC,IAAL,EAAU;AAAC,QAAG,CAAC,CAAD,KAAK,KAAK0I,cAAL,CAAoBS,SAApB,CAA+BnJ,CAAC,IAAEA,CAAC,KAAGD,CAAtC,CAAR,EAAkD,MAAMA,CAAC,GAAC,4BAAR;AAAqC,WAAOC,CAAC,IAAE,KAAK,MAAID,CAAT,IAAYC,CAAZ,EAAc,IAAhB,IAAsB,KAAK,MAAID,CAAT,CAA9B;AAA0C;;AAAAqJ,EAAAA,IAAI,CAACrJ,CAAD,EAAGC,CAAC,GAAC,IAAL,EAAU;AAAC,WAAO,KAAKkJ,SAAL,CAAenJ,CAAf,EAAiBC,CAAjB,CAAP;AAA2B;;AAAAmG,EAAAA,CAAC,CAACpG,CAAD,EAAGC,CAAC,GAAC,IAAL,EAAU;AAAC,WAAO,KAAKkJ,SAAL,CAAenJ,CAAf,EAAiBC,CAAjB,CAAP;AAA2B;;AAAAqJ,EAAAA,SAAS,GAAE;AAAC,WAAO,KAAKC,UAAL,IAAkB,KAAKC,CAA9B;AAAgC;;AAAAC,EAAAA,SAAS,GAAE;AAAC,WAAO,KAAKH,SAAL,EAAP;AAAwB;;AAAAC,EAAAA,UAAU,GAAE;AAAC,SAAKL,eAAL,IAAsB,cAAY,OAAO,KAAKQ,IAA9C,KAAqD,KAAKA,IAAL,IAAY,KAAKR,eAAL,GAAqB,CAAC,CAAvF;AAA0F;;AAAc,MAAVS,UAAU,GAAE;AAAC,WAAM,aAAW,KAAKd,KAAhB,GAAsB,KAAKW,CAA3B,GAA6B,KAAKA,CAAL,CAAO5F,SAA1C;AAAoD;;AAAqB,QAAfgG,eAAe,GAAE;AAAC,WAAO,KAAKN,SAAL,EAAP;AAAwB;;AAAgB,SAATA,SAAS,CAAC,GAAGtJ,CAAJ,EAAM;AAAC,WAAO,IAAI,IAAJ,CAAS,GAAGA,CAAZ,EAAesJ,SAAf,EAAP;AAAkC;;AAA4B,eAAfM,eAAe,CAAC,GAAG5J,CAAJ,EAAM;AAAC,WAAO,KAAKsJ,SAAL,CAAe,GAAGtJ,CAAlB,CAAP;AAA4B;;AAAgB,UAATyJ,SAAS,CAAC,GAAGzJ,CAAJ,EAAM;AAAC,UAAMC,CAAC,GAAC,IAAI,IAAJ,CAAS,GAAGD,CAAZ,EAAeyJ,SAAf,EAAR;;AAAmC,SAAI,MAAMzJ,CAAV,IAAeC,CAAf,EAAiB,MAAMD,CAAN;AAAQ;;AAAlnC;;AAAmnC,MAAM6J,CAAN,SAAgBnB,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC7B,CAAD,EAAGC,CAAC,GAAC,CAAL,EAAO;AAAC,WAAO,MAAMD,CAAN,EAAQC,CAAR,GAAW,IAAlB;AAAuB;;AAAAqJ,EAAAA,SAAS,GAAE;AAAC,QAAItJ,CAAC,GAAC,KAAK8I,CAAX;AAAA,QAAa7I,CAAC,GAACD,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAf;AAAA,QAA0BZ,CAAC,GAAC,IAAIuB,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAU,QAAV,CAA5B;AAAA,QAAgDG,CAAC,GAACJ,CAAC,CAAC6C,GAAF,CAAMxC,CAAN,CAAlD;AAAA,QAA2DE,CAAC,GAACH,CAAC,CAACsC,SAAF,GAAcG,GAAd,CAAkBzC,CAAlB,CAA7D;AAAA,QAAkF;AAACuE,MAAAA,YAAY,EAACnE;AAAd,QAAiBiI,CAAC,CAAClI,CAAD,EAAG,KAAKyI,EAAR,CAApG;AAAgH,WAAOxI,CAAC,GAACoB,CAAC,CAACT,IAAF,CAAOX,CAAP,EAAUkC,SAAV,EAAF,EAAwB,KAAK8G,CAAL,GAAOxJ,CAAC,CAAC6C,GAAF,CAAMrC,CAAN,CAA/B,EAAwC,KAAKmJ,UAApD;AAA+D;;AAAtO;;AAAuO,MAAMG,CAAN,SAAgBpB,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,CAAL,EAAOD,CAAC,GAACJ,CAAT,EAAWO,CAAC,GAAC,IAAb,EAAkB;AAAC,WAAO,MAAMN,CAAN,EAAQI,CAAR,EAAUD,CAAV,EAAYG,CAAZ,GAAe,IAAtB;AAA2B;;AAAA+I,EAAAA,SAAS,GAAE;AAAC,UAAMtJ,CAAC,GAAC,KAAK8I,CAAb;AAAA,UAAe7I,CAAC,GAACD,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAjB;AAAA,UAA4BZ,CAAC,GAAC,KAAKyH,OAAnC;AAA2C,QAAI1H,CAAC,GAAC,IAAI8B,YAAJ,CAAiBjC,CAAjB,CAAN;AAAA,QAA0BM,CAAC,GAAC,IAAI2B,YAAJ,CAAiBjC,CAAjB,CAA5B;AAAA,QAAgDO,CAAC,GAAC,CAAlD;AAAoD,UAAMC,CAAC,GAAC,IAAImB,CAAJ,EAAR;AAAcnB,IAAAA,CAAC,CAACQ,KAAF,GAAQ,CAAChB,CAAD,EAAGA,CAAH,EAAK,CAACA,CAAD,EAAGc,CAAH,KAAO;AAAC,UAAGd,CAAC,KAAGc,CAAP,EAAS,OAAO,CAAP;AAAS,YAAMC,CAAC,GAACf,CAAC,GAACc,CAAF,GAAIV,CAAC,CAACL,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAD,EAAUD,CAAC,CAACoB,GAAF,CAAML,CAAN,CAAV,CAAL,GAAyBN,CAAC,CAAC+B,KAAF,CAAQzB,CAAR,EAAUd,CAAV,CAAjC;AAA8C,aAAOG,CAAC,CAACH,CAAD,CAAD,IAAMe,CAAN,EAAQT,CAAC,CAACQ,CAAD,CAAD,IAAMC,CAAd,EAAgBR,CAAC,IAAEQ,CAAnB,EAAqBA,CAA5B;AAA8B,KAA3G,CAAR,EAAqH,KAAK+I,IAAL,GAAUtJ,CAA/H,EAAiIL,CAAC,GAACA,CAAC,CAACiB,GAAF,CAAOrB,CAAC,IAAEA,CAAC,GAACC,CAAZ,CAAnI,EAAmJM,CAAC,GAACA,CAAC,CAACc,GAAF,CAAOrB,CAAC,IAAEA,CAAC,GAACC,CAAZ,CAArJ,EAAqKO,CAAC,IAAEP,CAAC,IAAE,CAA3K;AAA6K,UAAMc,CAAC,GAAC,IAAIa,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAW,CAACD,CAAD,EAAGC,CAAH,KAAOQ,CAAC,CAAC+B,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaG,CAAC,CAACJ,CAAD,CAAd,GAAkBO,CAAC,CAACN,CAAD,CAAnB,GAAuBO,CAAzC,CAAR;AAAA,UAAqD;AAACmE,MAAAA,YAAY,EAAC3D;AAAd,QAAiByH,CAAC,CAAC1H,CAAD,EAAG,KAAKiI,EAAR,CAAvE;AAAmF,WAAO,KAAKQ,CAAL,GAAO5H,CAAC,CAACT,IAAF,CAAOH,CAAP,EAAU0B,SAAV,EAAP,EAA6B,KAAKiH,UAAzC;AAAoD;;AAAU,MAANK,MAAM,GAAE;AAAC,UAAM/J,CAAC,GAAC,KAAK6I,CAAL,CAAO7H,KAAP,CAAa,CAAb,CAAR;AAAA,UAAwBZ,CAAC,GAAC,KAAKmJ,CAA/B;AAAA,UAAiCpJ,CAAC,GAAC,KAAK2J,IAAxC;AAAA,UAA6CxJ,CAAC,GAAC,IAAIqB,CAAJ,EAA/C;AAAqDrB,IAAAA,CAAC,CAACU,KAAF,GAAQ,CAAChB,CAAD,EAAGA,CAAH,EAAK,CAACA,CAAD,EAAGG,CAAH,KAAOH,CAAC,GAACG,CAAF,GAAIJ,CAAC,CAACK,CAAC,CAACe,GAAF,CAAMnB,CAAN,CAAD,EAAUI,CAAC,CAACe,GAAF,CAAMhB,CAAN,CAAV,CAAL,GAAyBG,CAAC,CAACiC,KAAF,CAAQpC,CAAR,EAAUH,CAAV,CAArC,CAAR;AAA2D,QAAIO,CAAC,GAAC,CAAN;AAAA,QAAQC,CAAC,GAAC,CAAV;;AAAY,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAI,IAAIK,CAAC,GAACL,CAAC,GAAC,CAAZ,EAAcK,CAAC,GAACJ,CAAhB,EAAkB,EAAEI,CAApB,EAAsBG,CAAC,IAAEN,IAAI,CAAC+J,GAAL,CAAS7J,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,IAAaE,CAAC,CAACiC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAtB,EAAmC,CAAnC,CAAH,EAAyCI,CAAC,IAAEP,IAAI,CAAC+J,GAAL,CAAS7J,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAT,EAAsB,CAAtB,CAA5C;;AAAqE,WAAOH,IAAI,CAACC,IAAL,CAAUK,CAAC,GAACC,CAAZ,CAAP;AAAsB;;AAArvB;;AAAsvB,MAAMyJ,CAAN,SAAgBxB,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAAC,CAAP,EAASG,CAAC,GAACP,CAAX,EAAaQ,CAAC,GAAC,IAAf,EAAoB;AAAC,WAAO,MAAMP,CAAN,EAAQG,CAAR,EAAUG,CAAV,EAAYC,CAAZ,GAAe,MAAMmI,cAAN,GAAqB,CAAC,GAAD,CAApC,EAA0C,KAAKQ,SAAL,CAAe,GAAf,EAAmBjJ,IAAI,CAAC4D,GAAL,CAASzD,CAAT,aAASA,CAAT,cAASA,CAAT,GAAYH,IAAI,CAACY,GAAL,CAASZ,IAAI,CAACyG,KAAL,CAAW,KAAKmC,CAAL,CAAO7H,KAAP,CAAa,CAAb,IAAgB,EAA3B,CAAT,EAAwC,CAAxC,CAAZ,EAAuD,KAAKmE,EAAL,GAAQ,CAA/D,CAAnB,CAA1C,EAAgI,IAAvI;AAA4I;;AAAAkE,EAAAA,SAAS,GAAE;AAAC,SAAKC,UAAL;AAAkB,UAAMvJ,CAAC,GAAC,KAAK8I,CAAb;AAAA,UAAe7I,CAAC,GAAC,KAAKmF,EAAtB;AAAA,UAAyB/E,CAAC,GAAC,KAAKyH,OAAhC;AAAA,UAAwC1H,CAAC,GAAC,IAAIwB,CAAJ,EAA1C;AAAgDxB,IAAAA,CAAC,CAACa,KAAF,GAAQ,CAAChB,CAAD,EAAGA,CAAH,EAAK,CAACA,CAAD,EAAGM,CAAH,KAAON,CAAC,IAAEM,CAAH,GAAKF,CAAC,CAACL,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAD,EAAUD,CAAC,CAACoB,GAAF,CAAMb,CAAN,CAAV,CAAN,GAA0BH,CAAC,CAACoC,KAAF,CAAQjC,CAAR,EAAUN,CAAV,CAAtC,CAAR;AAA4D,UAAMM,CAAC,GAAC,EAAR;;AAAW,SAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB;AAAC,YAAMK,CAAC,GAAC,EAAR;;AAAW,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAd,EAAgB,EAAEM,CAAlB,EAAoBF,CAAC,CAACQ,IAAF,CAAO;AAACkH,QAAAA,KAAK,EAACxH,CAAP;AAASgB,QAAAA,QAAQ,EAACnB,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUO,CAAV;AAAlB,OAAP;;AAAwC,YAAMC,CAAC,GAAC,IAAI4F,CAAJ,CAAM/F,CAAN,EAASL,CAAC,IAAEA,CAAC,CAACuB,QAAd,EAAwB,KAAxB,CAAR;AAAuChB,MAAAA,CAAC,CAACM,IAAF,CAAOL,CAAC,CAAC0G,OAAF,GAAYzF,KAAZ,CAAkB,CAAlB,EAAoB,KAAK0I,EAAL,GAAQ,CAA5B,CAAP;AAAuC;;AAAA,UAAM3J,CAAC,GAAC,IAAIoB,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAW,CAACD,CAAD,EAAGC,CAAH,KAAO;AAAC,YAAMI,CAAC,GAACE,CAAC,CAACP,CAAD,CAAD,CAAKoK,IAAL,CAAWpK,CAAC,IAAEA,CAAC,CAAC+H,KAAF,KAAU9H,CAAxB,CAAR;AAAoC,aAAOI,CAAC,GAACA,CAAC,CAACkB,QAAH,GAAY,IAAE,CAAtB;AAAwB,KAA/E,CAAR;;AAA0F,SAAI,IAAIvB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB,KAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB,KAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoBI,CAAC,CAACiC,SAAF,CAAYzC,CAAZ,EAAcK,CAAd,EAAgBH,IAAI,CAAC4D,GAAL,CAAStD,CAAC,CAACgC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAT,EAAsBG,CAAC,CAACgC,KAAF,CAAQxC,CAAR,EAAUI,CAAV,IAAaI,CAAC,CAACgC,KAAF,CAAQpC,CAAR,EAAUC,CAAV,CAAnC,CAAhB;;AAAkE,QAAII,CAAC,GAAC,IAAIyB,YAAJ,CAAiBjC,CAAjB,CAAN;AAAA,QAA0Bc,CAAC,GAAC,IAAImB,YAAJ,CAAiBjC,CAAjB,CAA5B;AAAA,QAAgDe,CAAC,GAAC,CAAlD;AAAA,QAAoDE,CAAC,GAAC,IAAIU,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAW,CAACD,CAAD,EAAGC,CAAH,KAAO;AAAC,UAAII,CAAC,GAACG,CAAC,CAACgC,KAAF,CAAQxC,CAAR,EAAUC,CAAV,CAAN;AAAmB,aAAOI,CAAC,GAACA,CAAC,KAAG,IAAE,CAAN,GAAQ,CAAR,GAAUA,CAAZ,EAAcI,CAAC,CAACT,CAAD,CAAD,IAAMK,CAApB,EAAsBU,CAAC,CAACd,CAAD,CAAD,IAAMI,CAA5B,EAA8BW,CAAC,IAAEX,CAAjC,EAAmCA,CAA1C;AAA4C,KAAlF,CAAtD;AAA2II,IAAAA,CAAC,GAACA,CAAC,CAACY,GAAF,CAAOrB,CAAC,IAAEA,CAAC,GAACC,CAAZ,CAAF,EAAkBc,CAAC,GAACA,CAAC,CAACM,GAAF,CAAOrB,CAAC,IAAEA,CAAC,GAACC,CAAZ,CAApB,EAAoCe,CAAC,IAAEf,CAAC,IAAE,CAA1C;AAA4C,UAAMoE,CAAC,GAAC,IAAIzC,CAAJ,CAAM3B,CAAN,EAAQA,CAAR,EAAW,CAACD,CAAD,EAAGC,CAAH,KAAOiB,CAAC,CAACsB,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaQ,CAAC,CAACT,CAAD,CAAd,GAAkBe,CAAC,CAACd,CAAD,CAAnB,GAAuBe,CAAzC,CAAR;AAAA,UAAqD;AAAC2D,MAAAA,YAAY,EAACM;AAAd,QAAiBwD,CAAC,CAACpE,CAAD,EAAG,KAAK2E,EAAR,CAAvE;AAAmF,WAAO,KAAKQ,CAAL,GAAO5H,CAAC,CAACT,IAAF,CAAO8D,CAAP,EAAUvC,SAAV,EAAP,EAA6B,KAAKiH,UAAzC;AAAoD;;AAAlgC;;AAAmgC,MAAMU,CAAN,SAAgB3B,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,CAAL,EAAOD,CAAC,GAACJ,CAAT,EAAWO,CAAC,GAAC,IAAb,EAAkB;AAAC,WAAO,MAAMN,CAAN,EAAQI,CAAR,EAAUD,CAAV,EAAYG,CAAZ,GAAe,IAAtB;AAA2B;;AAAA+J,EAAAA,uBAAuB,CAACtK,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK6I,CAAL,CAAO7H,KAAP,CAAa,CAAb,CAAR;AAAwB,QAAIZ,CAAC,GAAC,KAAK4I,WAAL,CAAiBjD,UAAjB,GAA4B/F,CAA5B,GAA8B,CAApC;AAAA,QAAsCG,CAAC,GAAC,IAAxC;AAAA,QAA6CG,CAAC,GAAC,CAAC,CAAD,GAAG,CAAlD;;AAAoD,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAMP,CAAC,GAACD,CAAC,CAACK,CAAD,EAAGG,CAAH,CAAT;AAAeP,MAAAA,CAAC,GAACM,CAAF,KAAMA,CAAC,GAACN,CAAF,EAAIG,CAAC,GAACI,CAAZ;AAAe;;AAAAD,IAAAA,CAAC,GAAC,CAAC,CAAD,GAAG,CAAL;;AAAO,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAMP,CAAC,GAACD,CAAC,CAACI,CAAD,EAAGI,CAAH,CAAT;AAAeP,MAAAA,CAAC,GAACM,CAAF,KAAMA,CAAC,GAACN,CAAF,EAAII,CAAC,GAACG,CAAZ;AAAe;;AAAA,WAAM,CAACH,CAAD,EAAGD,CAAH,EAAKG,CAAL,CAAN;AAAc;;AAAA+I,EAAAA,SAAS,GAAE;AAAC,UAAMtJ,CAAC,GAAC,KAAK8I,CAAb;AAAA,UAAe7I,CAAC,GAACD,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAjB;AAAA,UAA4BZ,CAAC,GAAC,KAAK2I,EAAnC;AAAA,UAAsC5I,CAAC,GAAC,KAAK0H,OAA7C;AAAA,UAAqDvH,CAAC,GAAC,IAAIqB,CAAJ,CAAM3B,CAAN,EAAQI,CAAR,EAAU,CAAV,CAAvD;;AAAoE,QAAIG,CAAC,GAAC,CAACP,CAAD,EAAGI,CAAH,KAAOD,CAAC,CAACJ,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAD,EAAUD,CAAC,CAACoB,GAAF,CAAMf,CAAN,CAAV,CAAd;;AAAkC,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,UAAIK,CAAC,GAACG,CAAN;;AAAQ,YAAK,CAACJ,CAAD,EAAGK,CAAH,EAAKM,CAAL,IAAQ,KAAKuJ,uBAAL,CAA6B9J,CAA7B,CAAb;;AAA6C,UAAG,MAAIO,CAAP,EAAS;AAAC,aAAI,IAAIV,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,gBAAMJ,CAAC,GAAC,CAACO,CAAC,CAACJ,CAAD,EAAGC,CAAH,CAAD,IAAQ,CAAR,GAAUU,CAAC,IAAE,CAAb,GAAeP,CAAC,CAACC,CAAD,EAAGJ,CAAH,CAAD,IAAQ,CAAxB,KAA4B,IAAEU,CAA9B,CAAR;AAAyCR,UAAAA,CAAC,CAACkC,SAAF,CAAYpC,CAAZ,EAAcL,CAAd,EAAgBC,CAAhB;AAAmB;;AAAAO,QAAAA,CAAC,GAAC,CAACP,CAAD,EAAGG,CAAH,KAAOF,IAAI,CAACC,IAAL,CAAUE,CAAC,CAACJ,CAAD,EAAGG,CAAH,CAAD,IAAQ,CAAR,GAAU,CAACG,CAAC,CAACiC,KAAF,CAAQvC,CAAR,EAAUD,CAAV,IAAaO,CAAC,CAACiC,KAAF,CAAQpC,CAAR,EAAUJ,CAAV,CAAd,KAA6B,CAAjD,CAAT;AAA6D;AAAC;;AAAA,WAAO,KAAKwJ,CAAL,GAAOjJ,CAAP,EAAS,KAAKoJ,UAArB;AAAgC;;AAAjpB;;AAAkpB,MAAMY,CAAN,SAAgB7B,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAAC,CAAP,EAASG,CAAC,GAACP,CAAX,EAAaQ,CAAC,GAAC,IAAf,EAAoB;AAAC,WAAO,MAAMP,CAAN,EAAQG,CAAR,EAAUG,CAAV,EAAYC,CAAZ,GAAe,MAAMmI,cAAN,GAAqB,CAAC,QAAD,CAApC,EAA+C,KAAKQ,SAAL,CAAe,QAAf,EAAwB9I,CAAxB,CAA/C,EAA0E,IAAjF;AAAsF;;AAAAiJ,EAAAA,SAAS,GAAE;AAAC,QAAItJ,CAAC,GAAC,KAAK8I,CAAX;AAAA,QAAa,CAAC7I,CAAD,EAAGI,CAAH,IAAML,CAAC,CAACiB,KAArB;AAAA,QAA2Bb,CAAC,GAAC,KAAKoK,OAAlC;AAAA,QAA0CjK,CAAC,GAAC,EAA5C;AAAA,QAA+CC,CAAC,GAAC,CAAjD;AAAmDJ,IAAAA,CAAC,CAACqK,OAAF,CAAW,CAACxK,CAAD,EAAGI,CAAH,KAAO;AAACJ,MAAAA,CAAC,IAAIM,CAAL,IAAQA,CAAC,CAACN,CAAD,CAAD,CAAKyK,KAAL,IAAanK,CAAC,CAACN,CAAD,CAAD,CAAK0K,IAAL,CAAU9J,IAAV,CAAeb,CAAC,CAACoB,GAAF,CAAMf,CAAN,CAAf,CAArB,IAA+CE,CAAC,CAACN,CAAD,CAAD,GAAK;AAAC2K,QAAAA,EAAE,EAACpK,CAAC,EAAL;AAAQkK,QAAAA,KAAK,EAAC,CAAd;AAAgBC,QAAAA,IAAI,EAAC,CAAC3K,CAAC,CAACoB,GAAF,CAAMf,CAAN,CAAD;AAArB,OAApD;AAAqF,KAAxG;AAA2G,QAAII,CAAC,GAACT,CAAC,CAAC+D,IAAR;AAAA,QAAahD,CAAC,GAAC,IAAIa,CAAJ,CAAMpB,CAAN,EAAQH,CAAR,CAAf;;AAA0B,SAAI,IAAIL,CAAR,IAAaO,CAAb,EAAe;AAAC,UAAIN,CAAC,GAAC2B,CAAC,CAACT,IAAF,CAAOZ,CAAC,CAACP,CAAD,CAAD,CAAK2K,IAAZ,EAAkBzG,QAAxB;;AAAiC,WAAI,IAAI9D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoBW,CAAC,CAAC0B,SAAF,CAAYlC,CAAC,CAACP,CAAD,CAAD,CAAK4K,EAAjB,EAAoBxK,CAApB,EAAsBH,CAAC,CAACG,CAAD,CAAvB;AAA4B;;AAAA,QAAIY,CAAC,GAAC,IAAIY,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAN;;AAAiB,SAAI,IAAIL,CAAR,IAAaO,CAAb,EAAe;AAAC,UAAIN,CAAC,GAACc,CAAC,CAACK,GAAF,CAAMb,CAAC,CAACP,CAAD,CAAD,CAAK4K,EAAX,CAAN;AAAA,UAAqBxK,CAAC,GAAC,IAAIwB,CAAJ,CAAMvB,CAAN,EAAQ,CAAR,EAAWL,CAAC,IAAEC,CAAC,CAACD,CAAD,CAAD,GAAKS,CAAnB,CAAvB;AAAA,UAA8CD,CAAC,GAACD,CAAC,CAACP,CAAD,CAAD,CAAK0K,KAArD;AAA2D1J,MAAAA,CAAC,GAACA,CAAC,CAAC0C,GAAF,CAAMtD,CAAC,CAACyC,GAAF,CAAMzC,CAAC,CAACsC,SAAF,EAAN,EAAqBc,IAArB,CAA0BhD,CAA1B,CAAN,CAAF;AAAsC;;AAAA,QAAIU,CAAC,GAAC,IAAIU,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAN;;AAAiB,SAAI,IAAIL,CAAR,IAAaO,CAAb,EAAe;AAAC,UAAIN,CAAC,GAACc,CAAC,CAACK,GAAF,CAAMb,CAAC,CAACP,CAAD,CAAD,CAAK4K,EAAX,CAAN;AAAA,UAAqBxK,CAAC,GAAC,IAAIwB,CAAJ,CAAMvB,CAAN,EAAQ,CAAR,EAAWL,CAAC,IAAEC,CAAC,CAACD,CAAD,CAAf,CAAvB;AAAA,UAA4CQ,CAAC,GAACD,CAAC,CAACP,CAAD,CAAD,CAAK2K,IAAnD;;AAAwD,WAAI,IAAI1K,CAAC,GAAC,CAAN,EAAQQ,CAAC,GAACF,CAAC,CAACP,CAAD,CAAD,CAAK0K,KAAnB,EAAyBzK,CAAC,GAACQ,CAA3B,EAA6B,EAAER,CAA/B,EAAiC;AAAC,YAAID,CAAC,GAAC,IAAI4B,CAAJ,CAAMvB,CAAN,EAAQ,CAAR,EAAW,CAACL,CAAD,EAAGK,CAAH,KAAOG,CAAC,CAACP,CAAD,CAAD,CAAKD,CAAL,IAAQI,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAA1B,CAAN;AAA+CkB,QAAAA,CAAC,GAACA,CAAC,CAACwC,GAAF,CAAM1D,CAAC,CAAC6C,GAAF,CAAM7C,CAAC,CAAC0C,SAAF,EAAN,CAAN,CAAF;AAA8B;AAAC;;AAAA,QAAG;AAACiC,MAAAA,YAAY,EAACN;AAAd,QAAiBoE,CAAC,CAACvH,CAAC,CAAC0B,OAAF,GAAYC,GAAZ,CAAgB7B,CAAhB,CAAD,EAAoB,KAAKgI,EAAzB,CAArB;AAAkD,WAAO3E,CAAC,GAACzC,CAAC,CAACT,IAAF,CAAOkD,CAAP,EAAU3B,SAAV,EAAF,EAAwB,KAAK8G,CAAL,GAAOxJ,CAAC,CAAC6C,GAAF,CAAMwB,CAAN,CAA/B,EAAwC,KAAKsF,UAApD;AAA+D;;AAAx1B;;AAAy1B,MAAMkB,CAAN,SAAgBnC,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAAC,CAAP,EAASG,CAAC,GAACP,CAAX,EAAaQ,CAAC,GAAC,IAAf,EAAoB;AAAC,WAAO,MAAMP,CAAN,EAAQG,CAAR,EAAUG,CAAV,EAAYC,CAAZ,GAAe,MAAMmI,cAAN,GAAqB,CAAC,GAAD,CAApC,EAA0C,KAAKQ,SAAL,CAAe,GAAf,EAAmBjJ,IAAI,CAAC4D,GAAL,CAASzD,CAAT,aAASA,CAAT,cAASA,CAAT,GAAYH,IAAI,CAACY,GAAL,CAASZ,IAAI,CAACyG,KAAL,CAAW,KAAKvB,EAAL,GAAQ,EAAnB,CAAT,EAAgC,CAAhC,CAAZ,EAA+C,KAAKA,EAAL,GAAQ,CAAvD,CAAnB,CAA1C,EAAwH,IAA/H;AAAoI;;AAAAkE,EAAAA,SAAS,GAAE;AAAC,UAAMtJ,CAAC,GAAC,KAAK8I,CAAb;AAAA,UAAe7I,CAAC,GAAC,KAAK+I,EAAtB;AAAA,UAAyB5I,CAAC,GAAC,KAAKgF,EAAhC;AAAA,UAAmC7E,CAAC,GAAC,KAAKwI,EAA1C;AAAA,UAA6CvI,CAAC,GAAC,KAAK2I,SAAL,CAAe,GAAf,CAA/C;AAAA,UAAmE1I,CAAC,GAACO,CAAC,CAAChB,CAAD,EAAGQ,CAAH,EAAK,IAAL,EAAU,KAAKsH,OAAf,CAAtE;AAAA,UAA8F/G,CAAC,GAAC,IAAIa,CAAJ,CAAMpB,CAAN,EAAQ,CAAR,EAAU,CAAV,CAAhG;AAAA,UAA6GU,CAAC,GAAC,IAAIU,CAAJ,CAAMxB,CAAN,EAAQA,CAAR,CAA/G;;AAA0H,SAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoB;AAAC,YAAMG,CAAC,GAACK,CAAC,CAACR,CAAD,CAAT;AAAA,YAAae,CAAC,GAAC,IAAIY,CAAJ,CAAMpB,CAAN,EAAQD,CAAR,EAAW,CAACF,CAAD,EAAGE,CAAH,KAAOP,CAAC,CAACwC,KAAF,CAAQpC,CAAC,CAACC,CAAD,CAAD,CAAKiB,CAAb,EAAef,CAAf,IAAkBP,CAAC,CAACwC,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAApC,CAAf;AAAA,YAAkE8D,CAAC,GAACrD,CAAC,CAAC6B,GAAF,CAAM7B,CAAC,CAAC2B,CAAR,CAApE;;AAA+E,UAAGnC,CAAC,GAACD,CAAL,EAAO;AAAC,cAAMP,CAAC,GAACK,CAAC,CAACgE,CAAC,CAACR,IAAH,CAAD,GAAU,GAAlB;;AAAsB,aAAI,IAAI5D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoBoE,CAAC,CAAC5B,SAAF,CAAYxC,CAAZ,EAAcA,CAAd,EAAgBoE,CAAC,CAAC7B,KAAF,CAAQvC,CAAR,EAAUA,CAAV,IAAaD,CAA7B;AAAgC;;AAAA,UAAIiF,CAAC,GAACrD,CAAC,CAACuC,QAAF,CAAWE,CAAX,EAAatD,CAAb,EAAe,KAAKkI,WAApB,CAAN;;AAAuChE,MAAAA,CAAC,GAACA,CAAC,CAACxB,MAAF,CAASwB,CAAC,CAACjB,GAAX,CAAF;;AAAkB,WAAI,IAAIhE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoBkB,CAAC,CAACuB,SAAF,CAAYxC,CAAZ,EAAcG,CAAC,CAACJ,CAAD,CAAD,CAAKsB,CAAnB,EAAqB2D,CAAC,CAACzC,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAArB;AAAmC;;AAAA,UAAMqE,CAAC,GAAC,IAAIzC,CAAJ,CAAMxB,CAAN,EAAQA,CAAR,EAAU,UAAV,EAAsBuD,GAAtB,CAA0BzC,CAA1B,CAAR;AAAA,UAAqC+D,CAAC,GAACZ,CAAC,CAAC1B,CAAF,CAAIE,GAAJ,CAAQwB,CAAR,CAAvC;AAAA,UAAkD;AAACM,MAAAA,YAAY,EAACQ;AAAd,QAAiBsD,CAAC,CAACxD,CAAC,CAACtC,CAAF,CAAIC,OAAJ,EAAD,EAAe3C,CAAC,GAAC,CAAjB,CAApE;AAAwF,WAAO,KAAKuJ,CAAL,GAAO5H,CAAC,CAACT,IAAF,CAAOgE,CAAC,CAAC1D,KAAF,CAAQ,CAAR,EAAU,IAAExB,CAAZ,CAAP,EAAuB0C,CAA9B,EAAgC,KAAKgH,UAA5C;AAAuD;;AAAhuB;;AAAiuB,MAAMrI,CAAN,SAAgBoH,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAAC,CAAP,EAASG,CAAC,GAACP,CAAX,EAAaQ,CAAC,GAAC,IAAf,EAAoB;AAAC,QAAG,MAAMP,CAAN,EAAQG,CAAR,EAAUG,CAAV,EAAYC,CAAZ,GAAe,MAAMmI,cAAN,GAAqB,CAAC,GAAD,CAApC,EAA0C,KAAKQ,SAAL,CAAe,GAAf,EAAmBjJ,IAAI,CAAC4D,GAAL,CAASzD,CAAT,aAASA,CAAT,cAASA,CAAT,GAAYH,IAAI,CAACY,GAAL,CAASZ,IAAI,CAACyG,KAAL,CAAW,KAAKvB,EAAL,GAAQ,EAAnB,CAAT,EAAgC,CAAhC,CAAZ,EAA+C,KAAKA,EAAL,GAAQ,CAAvD,CAAnB,CAA1C,EAAwH,KAAK2D,EAAL,IAAS3I,CAApI,EAAsI,MAAM,4BAA2B,KAAK2I,EAAG,yEAAwE3I,CAAE,IAAnH;AAAuH,WAAO,IAAP;AAAY;;AAAAkJ,EAAAA,SAAS,GAAE;AAAC,UAAMtJ,CAAC,GAAC,KAAK8I,CAAb;AAAA,UAAe7I,CAAC,GAAC,KAAK+I,EAAtB;AAAA,UAAyB,CAAC3I,CAAD,EAAGD,CAAH,IAAMJ,CAAC,CAACiB,KAAjC;AAAA,UAAuCV,CAAC,GAAC,KAAK4I,SAAL,CAAe,GAAf,CAAzC;AAAA,UAA6D3I,CAAC,GAACQ,CAAC,CAAChB,CAAD,EAAGO,CAAH,EAAK,IAAL,EAAU,KAAKuH,OAAf,CAAhE;AAAA,UAAwFrH,CAAC,GAAC,IAAImB,CAAJ,CAAMxB,CAAN,EAAQA,CAAR,EAAU,QAAV,CAA1F;AAAA,UAA8GW,CAAC,GAAC,IAAIa,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,EAAU,CAAV,CAAhH;;AAA6H,SAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAAC,CAACD,CAAD,EAAG,GAAGI,CAAC,CAACJ,CAAD,CAAD,CAAKiB,GAAL,CAAUrB,CAAC,IAAEA,CAAC,CAACsB,CAAf,CAAN,CAAR;;AAAkC,UAAIN,CAAC,GAACY,CAAC,CAACT,IAAF,CAAOd,CAAC,CAACgB,GAAF,CAAOpB,CAAC,IAAED,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAV,CAAP,CAAN;;AAAmCe,MAAAA,CAAC,GAACA,CAAC,CAAC6B,GAAF,CAAMpC,CAAN,CAAF;;AAAW,YAAMS,CAAC,GAACF,CAAC,CAAC6B,GAAF,CAAM7B,CAAC,CAAC0B,SAAF,EAAN,CAAR;AAAA,YAA6B;AAACiC,QAAAA,YAAY,EAACN;AAAd,UAAiBoE,CAAC,CAACvH,CAAD,EAAGjB,CAAH,CAA/C;AAAA,YAAqDgF,CAAC,GAACrD,CAAC,CAACT,IAAF,CAAOkD,CAAP,CAAvD;AAAA,YAAiEc,CAAC,GAACF,CAAC,CAACvC,SAAF,GAAcG,GAAd,CAAkBoC,CAAlB,EAAqBvB,GAArB,CAAyB,IAAExD,IAAI,CAACC,IAAL,CAAUI,CAAC,GAAC,CAAZ,CAA3B,CAAnE;;AAA8G,WAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAC,GAAC,CAAhB,EAAkB,EAAEP,CAApB,EAAsB,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACM,CAAC,GAAC,CAAhB,EAAkB,EAAEN,CAApB,EAAsBc,CAAC,CAAC0B,SAAF,CAAYpC,CAAC,CAACL,CAAD,CAAb,EAAiBK,CAAC,CAACJ,CAAD,CAAlB,EAAsBc,CAAC,CAACyB,KAAF,CAAQnC,CAAC,CAACL,CAAD,CAAT,EAAaK,CAAC,CAACJ,CAAD,CAAd,KAAoBD,CAAC,KAAGC,CAAJ,GAAM,CAAN,GAAQ,CAA5B,IAA+BkF,CAAC,CAAC3C,KAAF,CAAQxC,CAAR,EAAUC,CAAV,CAArD;AAAmE;;AAAA,UAAK;AAAC0E,MAAAA,YAAY,EAACzD;AAAd,QAAiBuH,CAAC,CAAC1H,CAAD,EAAGd,CAAC,GAAC,CAAL,CAAvB;AAA+B,WAAO,KAAKuJ,CAAL,GAAO5H,CAAC,CAACT,IAAF,CAAOD,CAAC,CAACO,KAAF,CAAQ,CAAR,CAAP,EAAmBiB,SAAnB,EAAP,EAAsC,KAAKiH,UAAlD;AAA6D;;AAAj1B;;AAAk1B,MAAMmB,CAAN,SAAgBpC,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,EAAL,EAAQD,CAAC,GAAC,EAAV,EAAaG,CAAC,GAAC,CAAf,EAAiBC,CAAC,GAACR,CAAnB,EAAqBS,CAAC,GAAC,IAAvB,EAA4B;AAAC,WAAO,MAAMR,CAAN,EAAQM,CAAR,EAAUC,CAAV,EAAYC,CAAZ,GAAe,MAAMkI,cAAN,GAAqB,CAAC,YAAD,EAAc,SAAd,CAApC,EAA6D,CAAC,KAAKvD,EAAN,EAAS,KAAK2D,EAAd,IAAkB,KAAKD,CAAL,CAAO7H,KAAtF,EAA4F,KAAKkI,SAAL,CAAe,YAAf,EAA4BjJ,IAAI,CAAC4D,GAAL,CAASzD,CAAT,EAAW,KAAK+E,EAAL,GAAQ,CAAnB,CAA5B,CAA5F,EAA+I,KAAK+D,SAAL,CAAe,SAAf,EAAyB/I,CAAzB,CAA/I,EAA2K,KAAK2K,KAAL,GAAW,CAAtL,EAAwL,KAAKvB,CAAL,GAAO,IAAI5H,CAAJ,CAAM,KAAKwD,EAAX,EAAc,KAAK4D,EAAnB,EAAuB,MAAI,KAAKC,WAAL,CAAiB7E,MAA5C,CAA/L,EAAoP,IAA3P;AAAgQ;;AAAAsF,EAAAA,IAAI,CAAC1J,CAAC,GAAC,IAAH,EAAQ;AAAC,UAAMC,CAAC,GAACC,IAAI,CAAC8K,GAAL,CAAS,KAAKC,WAAd,CAAR;AAAA,UAAmC5K,CAAC,GAAC,KAAK+E,EAA1C;AAAA,UAA6ChF,CAAC,GAAC,KAAK2I,EAApD;AAAA,UAAuDxI,CAAC,GAAC,KAAKuH,OAA9D;AAAA,UAAsEtH,CAAC,GAAC,KAAKsI,CAA7E;AAA+E,QAAIrI,CAAJ;AAAM,QAAGT,CAAH,EAAKS,CAAC,GAACT,CAAF,CAAL,KAAa;AAACS,MAAAA,CAAC,GAAC,IAAImB,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAF;;AAAa,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,cAAMC,CAAC,GAACO,CAAC,CAACY,GAAF,CAAMpB,CAAN,CAAR;;AAAiB,aAAI,IAAII,CAAC,GAACJ,CAAC,GAAC,CAAZ,EAAcI,CAAC,GAACC,CAAhB,EAAkB,EAAED,CAApB,EAAsB;AAAC,gBAAMC,CAAC,GAACE,CAAC,CAACN,CAAD,EAAGO,CAAC,CAACY,GAAF,CAAMhB,CAAN,CAAH,CAAT;AAAsBK,UAAAA,CAAC,CAACgC,SAAF,CAAYzC,CAAZ,EAAcI,CAAd,EAAgBC,CAAhB,GAAmBI,CAAC,CAACgC,SAAF,CAAYrC,CAAZ,EAAcJ,CAAd,EAAgBK,CAAhB,CAAnB;AAAsC;AAAC;AAAC;AAAA,UAAMU,CAAC,GAAC,IAAIa,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,EAAU,OAAV,CAAR;AAA2B,SAAK6K,MAAL,GAAY,IAAItJ,CAAJ,CAAMvB,CAAN,EAAQD,CAAR,EAAU,OAAV,CAAZ,EAA+B,KAAK+K,MAAL,GAAY,IAAIvJ,CAAJ,CAAMvB,CAAN,EAAQD,CAAR,EAAU,CAAV,CAA3C;AAAwD,QAAIY,CAAC,GAAC,IAAIL,KAAJ,CAAUN,CAAV,EAAa6E,IAAb,CAAkB,CAAlB,CAAN;;AAA2B,SAAI,IAAIlF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,UAAII,CAAC,GAAC,CAAC,CAAD,GAAG,CAAT;AAAA,UAAWG,CAAC,GAAC,IAAE,CAAf;AAAA,UAAiBC,CAAC,GAAC,CAAnB;AAAA,UAAqBoB,CAAC,GAAC,CAAC,CAAxB;AAAA,UAA0BV,CAAC,GAAC,CAA5B;;AAA8B,aAAK,CAACU,CAAN,GAAS;AAAC,YAAIb,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAId,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,cAAII,CAAC,GAACH,IAAI,CAACkL,GAAL,CAAS,CAAC3K,CAAC,CAAC+B,KAAF,CAAQxC,CAAR,EAAUC,CAAV,CAAD,GAAcO,CAAvB,CAAN;AAAgCR,UAAAA,CAAC,KAAGC,CAAJ,KAAQI,CAAC,GAAC,CAAV,GAAaW,CAAC,CAACf,CAAD,CAAD,GAAKI,CAAlB,EAAoBU,CAAC,IAAEV,CAAvB;AAAyB;;AAAA,YAAIgE,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAIrE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,cAAIC,CAAC,GAAC,MAAIc,CAAJ,GAAM,CAAN,GAAQC,CAAC,CAAChB,CAAD,CAAD,GAAKe,CAAnB;AAAqBC,UAAAA,CAAC,CAAChB,CAAD,CAAD,GAAKC,CAAL,EAAOA,CAAC,GAAC,IAAF,KAASoE,CAAC,IAAEpE,CAAC,GAACC,IAAI,CAAC8K,GAAL,CAAS/K,CAAT,CAAd,CAAP;AAAkC;;AAAAoE,QAAAA,CAAC,GAACpE,CAAF,IAAKG,CAAC,GAACI,CAAF,EAAIA,CAAC,GAACD,CAAC,KAAG,IAAE,CAAN,GAAQ,IAAEC,CAAV,GAAY,CAACA,CAAC,GAACD,CAAH,IAAM,CAA7B,KAAiCA,CAAC,GAACC,CAAF,EAAIA,CAAC,GAACJ,CAAC,KAAG,CAAC,CAAD,GAAG,CAAP,GAASI,CAAC,GAAC,CAAX,GAAa,CAACA,CAAC,GAACJ,CAAH,IAAM,CAA1D,GAA6D,EAAEc,CAA/D,EAAiEhB,IAAI,CAACQ,GAAL,CAAS2D,CAAC,GAACpE,CAAX,IAAc,IAAd,KAAqB2B,CAAC,GAAC,CAAC,CAAxB,CAAjE,EAA4FV,CAAC,IAAE,EAAH,KAAQU,CAAC,GAAC,CAAC,CAAX,CAA5F;AAA0G;;AAAA,WAAI,IAAI3B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoBc,CAAC,CAAC0B,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBe,CAAC,CAACf,CAAD,CAAjB;AAAsB;;AAAA,UAAMiB,CAAC,GAAC,IAAIU,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,EAAU,OAAV,CAAR;AAAA,UAA2BgE,CAAC,GAAC,IAAEhE,CAA/B;;AAAiC,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB,KAAI,IAAIC,CAAC,GAACD,CAAV,EAAYC,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,YAAMI,CAAC,GAACH,IAAI,CAACY,GAAL,CAAS,CAACC,CAAC,CAACyB,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAac,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUD,CAAV,CAAd,IAA4BqE,CAArC,EAAuC,MAAvC,CAAR;AAAuDnD,MAAAA,CAAC,CAACuB,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBI,CAAhB,GAAmBa,CAAC,CAACuB,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgBK,CAAhB,CAAnB;AAAsC;;AAAA,WAAO,KAAKgL,EAAL,GAAQnK,CAAR,EAAU,IAAjB;AAAsB;;AAAAoI,EAAAA,SAAS,CAACtJ,CAAC,GAAC,GAAH,EAAO;AAAC,SAAKuJ,UAAL;;AAAkB,SAAI,IAAItJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB,KAAKqL,IAAL;;AAAY,WAAO,KAAK3B,UAAZ;AAAuB;;AAAU,GAATF,SAAS,GAAE;AAAC,SAAI,KAAKF,UAAL,EAAJ,IAAwB,KAAK+B,IAAL,IAAY,MAAM,KAAK3B,UAAvB;AAAkC;;AAAA2B,EAAAA,IAAI,GAAE;AAAC,UAAMtL,CAAC,GAAC,EAAE,KAAK+K,KAAf;AAAA,UAAqB9K,CAAC,GAAC,KAAKoL,EAA5B;AAAA,UAA+BhL,CAAC,GAAC,KAAK6K,MAAtC;AAAA,UAA6C9K,CAAC,GAAC,KAAK+K,MAApD;AAAA,UAA2D5K,CAAC,GAAC,KAAK6E,EAAlE;AAAA,UAAqE5E,CAAC,GAAC,KAAK+K,QAA5E;AAAA,UAAqF9K,CAAC,GAAC,KAAKuI,EAA5F;AAA+F,QAAIjI,CAAC,GAAC,KAAKyI,CAAX;AAAa,UAAMxI,CAAC,GAAChB,CAAC,GAAC,GAAF,GAAM,CAAN,GAAQ,CAAhB;AAAA,UAAkBkB,CAAC,GAAC,IAAIU,CAAJ,CAAMrB,CAAN,EAAQA,CAAR,EAAU,OAAV,CAApB;AAAuC,QAAI8D,CAAC,GAAC,CAAN;;AAAQ,SAAI,IAAIrE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB,KAAI,IAAIC,CAAC,GAACD,CAAC,GAAC,CAAZ,EAAcC,CAAC,GAACM,CAAhB,EAAkB,EAAEN,CAApB,EAAsB;AAAC,UAAII,CAAC,GAAC,CAAN;;AAAQ,WAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,cAAMG,CAAC,GAACQ,CAAC,CAACyB,KAAF,CAAQxC,CAAR,EAAUI,CAAV,IAAaW,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAArB;AAAkCC,QAAAA,CAAC,IAAEE,CAAC,GAACA,CAAL;AAAO;;AAAA,YAAMH,CAAC,GAAC,KAAG,IAAEC,CAAL,CAAR;AAAgBa,MAAAA,CAAC,CAACuB,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBG,CAAhB,GAAmBc,CAAC,CAACuB,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgBI,CAAhB,CAAnB,EAAsCiE,CAAC,IAAE,IAAEjE,CAA3C;AAA6C;;AAAA,UAAM6E,CAAC,GAAC,IAAIrD,CAAJ,CAAMrB,CAAN,EAAQA,CAAR,EAAU,CAAV,CAAR;;AAAqB,SAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB,KAAI,IAAIC,CAAC,GAACD,CAAC,GAAC,CAAZ,EAAcC,CAAC,GAACM,CAAhB,EAAkB,EAAEN,CAApB,EAAsB;AAAC,YAAMI,CAAC,GAACH,IAAI,CAACY,GAAL,CAASI,CAAC,CAACsB,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaoE,CAAtB,EAAwB,MAAxB,CAAR;AAAwCY,MAAAA,CAAC,CAACxC,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBI,CAAhB,GAAmB4E,CAAC,CAACxC,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgBK,CAAhB,CAAnB;AAAsC;;AAAA,UAAM8E,CAAC,GAAC,IAAIvD,CAAJ,CAAMrB,CAAN,EAAQE,CAAR,EAAU,OAAV,CAAR;;AAA2B,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB,KAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgB,EAAEF,CAAlB,EAAoB;AAAC,YAAMD,CAAC,GAAC,KAAGY,CAAC,GAACf,CAAC,CAACuC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAF,GAAe4E,CAAC,CAACzC,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAlB,IAAgCa,CAAC,CAACsB,KAAF,CAAQxC,CAAR,EAAUK,CAAV,CAAxC;;AAAqD,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoBkF,CAAC,CAAC1C,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBkF,CAAC,CAAC3C,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAaG,CAAC,IAAEW,CAAC,CAACyB,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAac,CAAC,CAACyB,KAAF,CAAQnC,CAAR,EAAUJ,CAAV,CAAf,CAA9B;AAA4D;;AAAA,QAAIkG,CAAC,GAAC,IAAIjE,YAAJ,CAAiBzB,CAAjB,CAAN;;AAA0B,SAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACM,CAAd,EAAgB,EAAEN,CAAlB,EAAoB,KAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgB,EAAEF,CAAlB,EAAoB;AAAC,YAAME,CAAC,GAAC0E,CAAC,CAAC3C,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAAR;AAAA,YAAqBS,CAAC,GAACX,CAAC,CAACmC,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAAvB;AAAA,YAAoCqB,CAAC,GAACxB,CAAC,CAACoC,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAAtC;;AAAmD,UAAIW,CAAC,GAAChB,IAAI,CAACsL,IAAL,CAAU/K,CAAV,MAAeP,IAAI,CAACsL,IAAL,CAAUxK,CAAV,CAAf,GAA4B,KAAGY,CAA/B,GAAiCA,CAAC,GAAC,EAAzC;AAA4CV,MAAAA,CAAC,GAAC,GAAF,KAAQA,CAAC,GAAC,GAAV,GAAed,CAAC,CAACqC,SAAF,CAAYxC,CAAZ,EAAcM,CAAd,EAAgBW,CAAhB,CAAf;AAAkC,YAAMmD,CAAC,GAAC,CAACrE,CAAC,GAAC,GAAF,GAAM,EAAN,GAAS,EAAV,IAAcgB,CAAd,GAAgBR,CAAC,GAACU,CAAF,GAAIT,CAA5B;AAA8BJ,MAAAA,CAAC,CAACoC,SAAF,CAAYxC,CAAZ,EAAcM,CAAd,EAAgB8D,CAAhB,GAAmBtD,CAAC,CAAC0B,SAAF,CAAYxC,CAAZ,EAAcM,CAAd,EAAgBQ,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUM,CAAV,IAAa8D,CAA7B,CAAnB,EAAmD8B,CAAC,CAAC5F,CAAD,CAAD,IAAMQ,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUM,CAAV,CAAzD;AAAsE;;AAAA,SAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgB,EAAEA,CAAlB,EAAoBc,CAAC,CAAC0B,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBc,CAAC,CAACyB,KAAF,CAAQxC,CAAR,EAAUC,CAAV,IAAakG,CAAC,CAAClG,CAAD,CAAD,GAAKM,CAAlC;;AAAqC,WAAO,KAAKiJ,CAAZ;AAAc;;AAAl5E;;AAAm5E,SAAS7D,CAAT,CAAW3F,CAAX,EAAaC,CAAb,EAAeI,CAAC,GAAC,GAAjB,EAAqB;AAAC,QAAMD,CAAC,GAACH,CAAC,CAACK,MAAV;AAAiB,MAAIC,CAAC,GAAC,IAAN;AAAA,MAAWC,CAAC,GAAC,GAAb;AAAA,MAAiBC,CAAC,GAACR,CAAC,CAACwB,KAAF,EAAnB;AAAA,MAA6BV,CAAC,GAACf,CAAC,CAACS,CAAD,CAAhC;AAAA,MAAoCO,CAAC,GAAC,CAAC,CAAvC;;AAAyC,SAAKX,CAAC,MAAK,CAAN,IAAS,CAACW,CAAf,GAAkB;AAACA,IAAAA,CAAC,GAAC,CAAC,CAAH;;AAAK,SAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoB;AAACQ,MAAAA,CAAC,CAACR,CAAD,CAAD,IAAM,IAAN;AAAW,UAAII,CAAC,GAACL,CAAC,CAACS,CAAD,CAAP;AAAWA,MAAAA,CAAC,CAACR,CAAD,CAAD,IAAM,IAAN;AAAW,UAAIG,CAAC,GAAC,CAACC,CAAC,GAACU,CAAH,IAAM,IAAZ;AAAiBb,MAAAA,IAAI,CAACQ,GAAL,CAASN,CAAT,IAAY,GAAZ,KAAkBY,CAAC,GAAC,CAAC,CAArB,GAAwBP,CAAC,CAACR,CAAD,CAAD,IAAMM,CAAC,GAACH,CAAhC,EAAkCW,CAAC,GAACf,CAAC,CAACS,CAAD,CAArC;AAAyC;;AAAAF,IAAAA,CAAC,IAAEC,CAAC,IAAEO,CAAH,GAAK,IAAL,GAAU,EAAb,EAAgBP,CAAC,GAACO,CAAlB;AAAoB;;AAAA,SAAON,CAAP;AAAS;;AAAA,MAAM+I,CAAN,SAAgBd,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,EAAL,EAAQD,CAAC,GAAC,CAAV,EAAYG,CAAC,GAAC,CAAd,EAAgBC,CAAC,GAAC,CAAlB,EAAoBC,CAAC,GAACT,CAAtB,EAAwBe,CAAC,GAAC,IAA1B,EAA+B;AAAC,WAAO,MAAMd,CAAN,EAAQO,CAAR,EAAUC,CAAV,EAAYM,CAAZ,GAAe,MAAM4H,cAAN,GAAqB,CAAC,aAAD,EAAe,oBAAf,EAAoC,UAApC,CAApC,EAAoF,CAAC,KAAKvD,EAAN,EAAS,KAAK2D,EAAd,IAAkB,KAAKD,CAAL,CAAO7H,KAA7G,EAAmHZ,CAAC,GAACH,IAAI,CAAC4D,GAAL,CAAS,KAAKsB,EAAL,GAAQ,CAAjB,EAAmB/E,CAAnB,CAArH,EAA2I,KAAK8I,SAAL,CAAe,aAAf,EAA6B9I,CAA7B,CAA3I,EAA2K,KAAK8I,SAAL,CAAe,oBAAf,EAAoCjJ,IAAI,CAAC4D,GAAL,CAAS1D,CAAT,EAAWC,CAAC,GAAC,CAAb,CAApC,CAA3K,EAAgO,KAAK8I,SAAL,CAAe,UAAf,EAA0B5I,CAA1B,CAAhO,EAA6P,KAAKwK,KAAL,GAAW,CAAxQ,EAA0Q,KAAKU,OAAL,GAAa,CAAvR,EAAyR,KAAKC,iBAAL,GAAuB,CAAhT,EAAkT,KAAKC,mBAAL,GAAyB,CAA3U,EAA6U,KAAKC,qBAAL,GAA2B,CAAxW,EAA0W,KAAKC,SAAL,GAAe,GAAzX,EAA6X,KAAKC,cAAL,GAAoB,CAAjZ,EAAmZ,KAAKtC,CAAL,GAAO,IAAI5H,CAAJ,CAAM,KAAKwD,EAAX,EAAc,KAAK4D,EAAnB,EAAuB,MAAI,KAAKC,WAAL,CAAiB7E,MAA5C,CAA1Z,EAA+c,IAAtd;AAA2d;;AAAA2H,EAAAA,eAAe,CAAC/L,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMG,CAAC,GAACiE,CAAC,CAAC,CAAD,EAAG,IAAErE,CAAL,EAAO,GAAP,CAAT;AAAA,UAAqBO,CAAC,GAAC8D,CAAC,CAAC,CAAD,EAAG,IAAErE,CAAL,EAAO,GAAP,CAAxB;;AAAoC,SAAI,IAAIK,CAAC,GAAC,CAAN,EAAQG,CAAC,GAACJ,CAAC,CAACE,MAAhB,EAAuBD,CAAC,GAACG,CAAzB,EAA2B,EAAEH,CAA7B,EAA+B;AAAC,YAAMG,CAAC,GAACJ,CAAC,CAACC,CAAD,CAAT;AAAaE,MAAAA,CAAC,CAACF,CAAD,CAAD,GAAKG,CAAC,GAACP,CAAF,GAAI,CAAJ,GAAMC,IAAI,CAACkL,GAAL,CAAS,EAAE5K,CAAC,GAACP,CAAJ,IAAOD,CAAhB,CAAX;AAA8B;;AAAA,WAAO2F,CAAC,CAAE3F,CAAC,IAAE;AAAC,YAAMC,CAAC,GAACoE,CAAC,CAAC,CAAD,EAAG,GAAH,CAAD,CAAShD,GAAT,CAAc,CAACpB,CAAD,EAAGI,CAAH,KAAO;AAAC,eAAOE,CAAC,CAACF,CAAD,CAAD,IAAMG,CAAC,GAACJ,CAAC,CAACC,CAAD,CAAH,EAAOI,CAAC,GAACT,CAAC,CAAC,CAAD,CAAV,EAAce,CAAC,GAACf,CAAC,CAAC,CAAD,CAAjB,EAAqB,KAAG,IAAES,CAAC,GAACP,IAAI,CAAC+J,GAAL,CAASzJ,CAAT,EAAW,IAAEO,CAAb,CAAP,CAA3B,CAAP;AAA2D,YAAIP,CAAJ,EAAMC,CAAN,EAAQM,CAAR;AAAU,OAA3F,CAAR;AAAsG,aAAOb,IAAI,CAACC,IAAL,CAAUE,CAAC,CAACJ,CAAC,CAACoB,GAAF,CAAOrB,CAAC,IAAEA,CAAC,GAACA,CAAZ,CAAD,CAAX,CAAP;AAAqC,KAAjJ,EAAmJ,CAAC,CAAD,EAAG,CAAH,CAAnJ,CAAR;AAAkK;;AAAAgM,EAAAA,6BAA6B,CAAChM,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,SAAI,IAAID,CAAC,GAAC,CAAN,EAAQG,CAAC,GAACP,CAAC,CAACM,MAAhB,EAAuBF,CAAC,GAACG,CAAzB,EAA2B,EAAEH,CAA7B,EAA+B,KAAI,IAAIG,CAAC,GAAC,CAAN,EAAQC,CAAC,GAACR,CAAC,CAACI,CAAD,CAAD,CAAKE,MAAnB,EAA0BC,CAAC,GAACC,CAA5B,EAA8B,EAAED,CAAhC,EAAkC;AAAC,YAAMC,CAAC,GAACR,CAAC,CAACI,CAAD,CAAD,CAAKG,CAAL,EAAQmG,KAAR,GAAcrG,CAAC,CAACD,CAAD,CAAvB;AAA2BJ,MAAAA,CAAC,CAACI,CAAD,CAAD,CAAKG,CAAL,EAAQmG,KAAR,GAAclG,CAAC,GAAC,CAAF,GAAIN,IAAI,CAACkL,GAAL,CAAS,CAAC5K,CAAD,GAAGP,CAAC,CAACG,CAAD,CAAb,CAAJ,GAAsB,CAApC;AAAsC;;AAAA,WAAOJ,CAAP;AAAS;;AAAAiM,EAAAA,gBAAgB,CAACjM,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,IAAR;AAAA,UAAaD,CAAC,GAAC,IAAf;AAAA,UAAoBG,CAAC,GAAC,KAAK2L,mBAA3B;AAAA,UAA+C1L,CAAC,GAACN,IAAI,CAACiM,IAAL,CAAUlM,CAAV,CAAjD;AAAA,UAA8DQ,CAAC,GAAC,EAAhE;AAAA,UAAmEM,CAAC,GAAC,EAArE;AAAA,UAAwEC,CAAC,GAAC,KAAK8H,CAA/E;AAAA,UAAiFlH,CAAC,GAAC,CAAC,GAAGZ,CAAJ,EAAOK,GAAP,CAAYhB,CAAC,IAAEL,CAAC,CAACoI,MAAF,CAAS/H,CAAT,EAAWJ,CAAX,EAAcmH,QAAd,GAAyBgF,OAAzB,EAAf,CAAnF;;AAAuI,SAAI,IAAIpM,CAAC,GAAC,CAAN,EAAQkB,CAAC,GAACF,CAAC,CAACC,KAAF,CAAQ,CAAR,CAAd,EAAyBjB,CAAC,GAACkB,CAA3B,EAA6B,EAAElB,CAA/B,EAAiC;AAAC,UAAIgB,CAAC,GAAC,CAAN;AAAA,UAAQE,CAAC,GAAC,IAAE,CAAZ;AAAA,UAAcmD,CAAC,GAAC,CAAhB;AAAkB,YAAMY,CAAC,GAACrD,CAAC,CAAC5B,CAAD,CAAT;AAAA,YAAamF,CAAC,GAACF,CAAC,CAACoH,MAAF,CAAUrM,CAAC,IAAEA,CAAC,CAAC0G,KAAF,GAAQ,CAArB,CAAf;AAAA,YAAwCP,CAAC,GAAChB,CAAC,CAAC7E,MAA5C;;AAAmD,UAAG6F,CAAC,IAAE5F,CAAN,EAAQ;AAAC,cAAMN,CAAC,GAACC,IAAI,CAACyG,KAAL,CAAWpG,CAAX,CAAR;AAAA,cAAsBH,CAAC,GAACG,CAAC,GAACN,CAA1B;AAA4BA,QAAAA,CAAC,GAAC,CAAF,IAAKQ,CAAC,CAACI,IAAF,CAAOsE,CAAC,CAAClF,CAAC,GAAC,CAAH,CAAR,GAAeG,CAAC,GAACC,CAAF,KAAMI,CAAC,CAACT,CAAD,CAAD,CAAK0G,KAAL,IAAYtG,CAAC,IAAE+E,CAAC,CAAClF,CAAD,CAAD,CAAKyG,KAAL,GAAWvB,CAAC,CAAClF,CAAC,GAAC,CAAH,CAAd,CAAnB,CAApB,IAA8DQ,CAAC,CAACT,CAAD,CAAD,CAAK0G,KAAL,GAAWtG,CAAC,GAAC+E,CAAC,CAAC,CAAD,CAAD,CAAKuB,KAAhF;AAAsF,OAA3H,MAAgIP,CAAC,GAAC,CAAF,KAAM1F,CAAC,CAACT,CAAD,CAAD,GAAKmF,CAAC,CAACgB,CAAC,GAAC,CAAH,CAAD,CAAOO,KAAlB;;AAAyB,WAAI,IAAItG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,EAAd,EAAiB,EAAEA,CAAnB,EAAqB;AAAC,YAAIA,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,gBAAMJ,CAAC,GAACgF,CAAC,CAAC5E,CAAD,CAAD,CAAKqG,KAAL,GAAWjG,CAAC,CAACT,CAAD,CAApB;AAAwBI,UAAAA,CAAC,IAAEH,CAAC,GAAC,CAAF,GAAIC,IAAI,CAACkL,GAAL,CAAS,CAACnL,CAAD,GAAGoE,CAAZ,CAAJ,GAAmB,CAAtB;AAAwB;;AAAA,YAAGnE,IAAI,CAACQ,GAAL,CAASN,CAAC,GAACI,CAAX,IAAcH,CAAjB,EAAmB;AAAMD,QAAAA,CAAC,GAACI,CAAF,GAAI,CAACU,CAAD,EAAGmD,CAAH,IAAM,CAACA,CAAD,EAAG,CAACrD,CAAC,GAACE,CAAH,IAAM,CAAT,CAAV,GAAsB,CAACF,CAAD,EAAGqD,CAAH,IAAMnD,CAAC,KAAG,IAAE,CAAN,GAAQ,CAACmD,CAAD,EAAG,IAAEA,CAAL,CAAR,GAAgB,CAACA,CAAD,EAAG,CAACrD,CAAC,GAACE,CAAH,IAAM,CAAT,CAA5C;AAAwD;;AAAAH,MAAAA,CAAC,CAACf,CAAD,CAAD,GAAKqE,CAAL;AAAO,YAAM+B,CAAC,GAACnB,CAAC,CAACkD,MAAF,CAAU,CAACnI,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAC,CAACyG,KAArB,EAA4B,CAA5B,IAA+BzB,CAAC,CAAC3E,MAAzC;AAAgD,UAAGG,CAAC,CAACT,CAAD,CAAD,GAAK,CAAR,EAAUe,CAAC,CAACf,CAAD,CAAD,GAAKI,CAAC,GAACgG,CAAP,KAAWrF,CAAC,CAACf,CAAD,CAAD,GAAKI,CAAC,GAACgG,CAAlB,EAAV,KAAmC;AAAC,cAAMnG,CAAC,GAAC2B,CAAC,CAACuG,MAAF,CAAU,CAACnI,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAC,CAACkI,MAAF,CAAU,CAACnI,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAC,CAACyG,KAArB,EAA4B,CAA5B,IAA+BzG,CAAC,CAACK,MAApD,CAAR;;AAAqES,QAAAA,CAAC,CAACf,CAAD,CAAD,GAAKI,CAAC,GAACH,CAAP,KAAWc,CAAC,CAACf,CAAD,CAAD,GAAKI,CAAC,GAACH,CAAlB;AAAqB;AAAC;;AAAA,WAAM;AAACqM,MAAAA,SAAS,EAAC1K,CAAX;AAAa2K,MAAAA,MAAM,EAACxL,CAApB;AAAsByL,MAAAA,IAAI,EAAC/L;AAA3B,KAAN;AAAoC;;AAAAgM,EAAAA,qBAAqB,CAACxM,CAAD,EAAGI,CAAH,EAAK;AAAC,UAAMD,CAAC,GAACH,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAR;AAAA,UAAmBV,CAAC,GAAC,IAAI+G,CAAJ,CAAMrH,CAAC,CAAC2D,SAAR,EAAkB5D,CAAlB,CAArB;;AAA0C,QAAG;AAACsM,MAAAA,SAAS,EAAC9L,CAAX;AAAa+L,MAAAA,MAAM,EAAC9L,CAApB;AAAsB+L,MAAAA,IAAI,EAACzL;AAA3B,QAA8B,KAAKkL,gBAAL,CAAsB1L,CAAtB,EAAwBF,CAAxB,CAAjC;;AAA4DG,IAAAA,CAAC,GAAC,KAAKwL,6BAAL,CAAmCxL,CAAnC,EAAqCC,CAArC,EAAuCM,CAAvC,CAAF;AAA4C,UAAMC,CAAC,GAAC,IAAIY,CAAJ,CAAMxB,CAAN,EAAQA,CAAR,EAAU,OAAV,CAAR;;AAA2B,SAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACO,CAAC,CAACR,CAAD,CAAT;;AAAa,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAC,CAACK,MAAhB,EAAuB,EAAED,CAAzB,EAA2BW,CAAC,CAACyB,SAAF,CAAYzC,CAAZ,EAAcC,CAAC,CAACI,CAAD,CAAD,CAAKoG,OAAL,CAAasB,KAA3B,EAAiC9H,CAAC,CAACI,CAAD,CAAD,CAAKqG,KAAtC;AAA6C;;AAAA,UAAMxF,CAAC,GAACF,CAAC,CAAC2B,CAAV;AAAA,UAAY0B,CAAC,GAACrD,CAAC,CAACwC,IAAF,CAAOtC,CAAP,CAAd;AAAwB,WAAOF,CAAC,CAAC0C,GAAF,CAAMxC,CAAN,EAASyC,GAAT,CAAaU,CAAb,EAAgBb,IAAhB,CAAqB,KAAKkI,iBAA1B,EAA6ChI,GAA7C,CAAiDW,CAAC,CAACb,IAAF,CAAO,IAAE,KAAKkI,iBAAd,CAAjD,CAAP;AAA0F;;AAAAgB,EAAAA,uBAAuB,CAAC1M,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK0M,QAAb;AAAA,UAAsBtM,CAAC,GAAC,IAAIuM,YAAJ,CAAiB3M,CAAC,CAACK,MAAnB,EAA2B4E,IAA3B,CAAgC,CAAC,CAAjC,CAAxB;AAAA,UAA4D9E,CAAC,GAAC+F,CAAC,CAAClG,CAAD,CAA/D;AAAA,UAAmEM,CAAC,GAACN,CAAC,CAACoB,GAAF,CAAOpB,CAAC,IAAED,CAAC,IAAEC,CAAC,GAACG,CAAJ,CAAX,CAArE;;AAAyF,SAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAC,CAACC,MAAhB,EAAuB,EAAEL,CAAzB,EAA2BM,CAAC,CAACN,CAAD,CAAD,GAAK,CAAL,KAASI,CAAC,CAACJ,CAAD,CAAD,GAAKC,IAAI,CAAC8E,KAAL,CAAWhF,CAAC,GAACO,CAAC,CAACN,CAAD,CAAd,CAAd;;AAAkC,WAAOI,CAAP;AAAS;;AAAAwM,EAAAA,MAAM,CAAC7M,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,EAAR;AAAA,UAAWI,CAAC,GAAC,EAAb;AAAA,UAAgBD,CAAC,GAAC,EAAlB;AAAA,UAAqB,CAACG,CAAD,EAAGC,CAAH,IAAMR,CAAC,CAACiB,KAA7B;;AAAmC,SAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB,KAAI,IAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACR,CAAC,CAACwC,KAAF,CAAQ/B,CAAR,EAAUF,CAAV,CAAR;AAAqB,YAAIC,CAAJ,KAAQP,CAAC,CAACY,IAAF,CAAOJ,CAAP,GAAUJ,CAAC,CAACQ,IAAF,CAAON,CAAP,CAAV,EAAoBH,CAAC,CAACS,IAAF,CAAOL,CAAP,CAA5B;AAAuC;;AAAA,WAAM;AAACmK,MAAAA,IAAI,EAAC1K,CAAN;AAAQ6M,MAAAA,IAAI,EAACzM,CAAb;AAAe8G,MAAAA,IAAI,EAAC/G;AAApB,KAAN;AAA6B;;AAAAsJ,EAAAA,IAAI,GAAE;AAAC,UAAK,CAAC1J,CAAD,EAAGC,CAAH,IAAM,KAAK8L,eAAL,CAAqB,KAAKN,OAA1B,EAAkC,KAAKsB,SAAvC,CAAX;;AAA6D,SAAKC,EAAL,GAAQhN,CAAR,EAAU,KAAKiN,EAAL,GAAQhN,CAAlB,EAAoB,KAAKiN,MAAL,GAAY,KAAKT,qBAAL,CAA2B,KAAK3D,CAAhC,EAAkC,KAAKqE,YAAvC,CAAhC;;AAAqF,UAAK;AAACxC,MAAAA,IAAI,EAACtK,CAAN;AAAQyM,MAAAA,IAAI,EAAC1M,CAAb;AAAe+G,MAAAA,IAAI,EAAC5G;AAApB,QAAuB,KAAKsM,MAAL,CAAY,KAAKK,MAAjB,CAA5B;;AAAqD,WAAO,KAAKE,KAAL,GAAW/M,CAAX,EAAa,KAAKgN,KAAL,GAAWjN,CAAxB,EAA0B,KAAKuM,QAAL,GAAcpM,CAAxC,EAA0C,KAAK+M,kBAAL,GAAwB,KAAKZ,uBAAL,CAA6B,KAAKb,SAAlC,CAAlE,EAA+G,KAAK0B,2BAAL,GAAiC,KAAKD,kBAAL,CAAwBjM,GAAxB,CAA6BrB,CAAC,IAAEA,CAAC,GAAC,KAAK4L,qBAAvC,CAAhJ,EAA+M,KAAK4B,qBAAL,GAA2B,KAAKF,kBAAL,CAAwB7L,KAAxB,EAA1O,EAA0Q,KAAKgM,8BAAL,GAAoC,KAAKF,2BAAL,CAAiC9L,KAAjC,EAA9S,EAAuV,IAA9V;AAAmW;;AAAsB,MAAlBiM,kBAAkB,CAAC1N,CAAD,EAAG;AAAC,SAAKkM,mBAAL,GAAyBlM,CAAzB;AAA2B;;AAAsB,MAAlB0N,kBAAkB,GAAE;AAAC,WAAO,KAAKxB,mBAAZ;AAAgC;;AAAY,MAARyB,QAAQ,CAAC3N,CAAD,EAAG;AAAC,SAAK+M,SAAL,GAAe/M,CAAf;AAAiB;;AAAY,MAAR2N,QAAQ,GAAE;AAAC,WAAO,KAAKZ,SAAZ;AAAsB;;AAAAa,EAAAA,KAAK,GAAE;AAAC,WAAO,KAAKrE,UAAL,IAAkB;AAACuD,MAAAA,IAAI,EAAC,KAAKM,KAAX;AAAiBzC,MAAAA,IAAI,EAAC,KAAK0C,KAA3B;AAAiCQ,MAAAA,OAAO,EAAC,KAAKlB;AAA9C,KAAzB;AAAiF;;AAAArD,EAAAA,SAAS,CAACtJ,CAAD,EAAG;AAAC,SAAKuJ,UAAL,IAAkBvJ,CAAC,GAACA,CAAC,IAAE,KAAK6L,SAA5B;;AAAsC,SAAI,IAAI5L,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB,KAAKqL,IAAL;;AAAY,WAAO,KAAK3B,UAAZ;AAAuB;;AAAU,GAATF,SAAS,GAAE;AAAC,SAAI,KAAKF,UAAL,IAAkB,KAAKwB,KAAL,GAAW,CAAjC,EAAmC,KAAKA,KAAL,GAAW,KAAKc,SAAnD,GAA8D,KAAKP,IAAL,IAAY,MAAM,KAAK3B,UAAvB;;AAAkC,WAAO,KAAKA,UAAZ;AAAuB;;AAAAmE,EAAAA,KAAK,CAAC9N,CAAD,EAAG;AAAC,WAAOA,CAAC,GAAC,CAAF,GAAI,CAAJ,GAAMA,CAAC,GAAC,CAAC,CAAH,GAAK,CAAC,CAAN,GAAQA,CAArB;AAAuB;;AAAA+N,EAAAA,gBAAgB,CAAC/N,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAK;AAACyI,MAAAA,EAAE,EAACxI,CAAJ;AAAMwN,MAAAA,MAAM,EAACvN,CAAb;AAAekL,MAAAA,mBAAmB,EAAC5K,CAAnC;AAAqCiM,MAAAA,EAAE,EAAChM,CAAxC;AAA0CiM,MAAAA,EAAE,EAACrL,CAA7C;AAA+C0L,MAAAA,kBAAkB,EAACpM,CAAlE;AAAoEqM,MAAAA,2BAA2B,EAAClJ,CAAhG;AAAkGoJ,MAAAA,8BAA8B,EAACxI,CAAjI;AAAmIuI,MAAAA,qBAAqB,EAACrI,CAAzJ;AAA2J2I,MAAAA,KAAK,EAAC3H;AAAjK,QAAoK,IAAzK;AAAA,UAA8KC,CAAC,GAAC7F,CAAC,CAACD,MAAlL;;AAAyL,SAAI,IAAIgH,CAAC,GAAC,CAAN,EAAQgB,CAAC,GAACpH,CAAC,CAACZ,MAAhB,EAAuBgH,CAAC,GAACgB,CAAzB,EAA2B,EAAEhB,CAA7B,EAA+B,IAAGnC,CAAC,CAACmC,CAAD,CAAD,IAAM,KAAKyD,KAAd,EAAoB;AAAC,YAAMzC,CAAC,GAACjI,CAAC,CAACiH,CAAD,CAAT;AAAA,YAAamB,CAAC,GAAClI,CAAC,CAAC+G,CAAD,CAAhB;AAAA,YAAoBoB,CAAC,GAAC1I,CAAC,CAACoB,GAAF,CAAMkH,CAAN,CAAtB;AAAA,YAA+BuB,CAAC,GAAC5J,CAAC,CAACmB,GAAF,CAAMqH,CAAN,CAAjC;AAAA,YAA0CqB,CAAC,GAAC1J,CAAC,CAACsI,CAAD,EAAGmB,CAAH,CAA7C;AAAmD,UAAIK,CAAC,GAAC,CAAN;AAAQJ,MAAAA,CAAC,GAAC,CAAF,KAAMI,CAAC,GAAC,CAAC,CAAD,GAAGlJ,CAAH,GAAKY,CAAL,GAAO1B,IAAI,CAAC+J,GAAL,CAASH,CAAT,EAAWlI,CAAC,GAAC,CAAb,CAAP,IAAwBZ,CAAC,GAACd,IAAI,CAAC+J,GAAL,CAASH,CAAT,EAAWlI,CAAX,CAAF,GAAgB,CAAxC,CAAR;;AAAoD,WAAI,IAAIvB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoB;AAAC,cAAMD,CAAC,GAAC+F,CAAC,CAAC+D,CAAC,IAAExB,CAAC,CAACrI,CAAD,CAAD,GAAKwJ,CAAC,CAACxJ,CAAD,CAAR,CAAF,CAAD,GAAiBI,CAAzB;AAAA,cAA2BF,CAAC,GAACmI,CAAC,CAACrI,CAAD,CAAD,GAAKD,CAAlC;AAAA,cAAoCI,CAAC,GAACqJ,CAAC,CAACxJ,CAAD,CAAD,GAAKD,CAA3C;AAA6CsI,QAAAA,CAAC,CAACrI,CAAD,CAAD,GAAKE,CAAL,EAAOsJ,CAAC,CAACxJ,CAAD,CAAD,GAAKG,CAAZ,EAAcR,CAAC,CAACyC,SAAF,CAAY6F,CAAZ,EAAcjI,CAAd,EAAgBE,CAAhB,CAAd,EAAiCN,CAAC,CAACwC,SAAF,CAAYgG,CAAZ,EAAcpI,CAAd,EAAgBG,CAAhB,CAAjC;AAAoD;;AAAA2E,MAAAA,CAAC,CAACmC,CAAD,CAAD,IAAMpG,CAAC,CAACoG,CAAD,CAAP;AAAW,YAAM+C,CAAC,GAAC,CAAC,KAAKU,KAAL,GAAW9F,CAAC,CAACqC,CAAD,CAAb,IAAkBjD,CAAC,CAACiD,CAAD,CAA3B;;AAA+B,WAAI,IAAIjH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACgK,CAAd,EAAgB,EAAEhK,CAAlB,EAAoB;AAAC,cAAMA,CAAC,GAACH,IAAI,CAACyG,KAAL,CAAW,KAAKsC,WAAL,CAAiB7E,MAAjB,GAAwBgC,CAAnC,CAAR;AAAA,cAA8ClF,CAAC,GAACjB,CAAC,CAACmB,GAAF,CAAMb,CAAC,CAACF,CAAD,CAAP,CAAhD;AAAA,cAA4DgE,CAAC,GAACjE,CAAC,CAACsI,CAAD,EAAGxH,CAAH,CAA/D;AAAqE,YAAI+D,CAAC,GAAC,CAAN;AAAQ,YAAGZ,CAAC,GAAC,CAAL,EAAOY,CAAC,GAAC,IAAElE,CAAF,GAAIa,CAAJ,IAAO,CAAC,MAAIyC,CAAL,KAASrD,CAAC,GAACd,IAAI,CAAC+J,GAAL,CAAS5F,CAAT,EAAWzC,CAAX,CAAF,GAAgB,CAAzB,CAAP,CAAF,CAAP,KAAkD,IAAG0G,CAAC,KAAGjI,CAAP,EAAS;;AAAS,aAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,gBAAMI,CAAC,GAAC2F,CAAC,CAAClB,CAAC,IAAEyD,CAAC,CAACtI,CAAD,CAAD,GAAKc,CAAC,CAACd,CAAD,CAAR,CAAF,CAAD,GAAiBK,CAAzB;AAAA,gBAA2BM,CAAC,GAAC2H,CAAC,CAACtI,CAAD,CAAD,GAAKI,CAAlC;AAAA,gBAAoCQ,CAAC,GAACE,CAAC,CAACd,CAAD,CAAD,GAAKI,CAA3C;AAA6CkI,UAAAA,CAAC,CAACtI,CAAD,CAAD,GAAKW,CAAL,EAAOG,CAAC,CAACd,CAAD,CAAD,GAAKY,CAAZ,EAAchB,CAAC,CAACyC,SAAF,CAAY6F,CAAZ,EAAclI,CAAd,EAAgBW,CAAhB,CAAd,EAAiCd,CAAC,CAACwC,SAAF,CAAYlC,CAAC,CAACF,CAAD,CAAb,EAAiBD,CAAjB,EAAmBY,CAAnB,CAAjC;AAAuD;AAAC;;AAAAiE,MAAAA,CAAC,CAACqC,CAAD,CAAD,IAAM+C,CAAC,GAAChG,CAAC,CAACiD,CAAD,CAAT;AAAa;;AAAA,WAAOtH,CAAP;AAAS;;AAAAsL,EAAAA,IAAI,GAAE;AAAC,QAAItL,CAAC,GAAC,EAAE,KAAK+K,KAAb;AAAA,QAAmB9K,CAAC,GAAC,KAAKuJ,CAA1B;AAA4B,WAAO,KAAKwE,MAAL,GAAY,KAAKlC,cAAL,IAAqB,IAAE9L,CAAC,GAAC,KAAK6L,SAA9B,CAAZ,EAAqD,KAAKrC,CAAL,GAAO,KAAKuE,gBAAL,CAAsB9N,CAAtB,EAAwBA,CAAxB,EAA0B,KAAKmN,KAA/B,EAAqC,KAAKC,KAA1C,CAA5D,EAA6G,KAAK7D,CAAzH;AAA2H;;AAA5kJ;;AAA6kJ,MAAMyE,CAAN,SAAgBvF,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,GAAL,EAASD,CAAC,GAAC,CAAX,EAAaG,CAAC,GAAC,CAAf,EAAiBC,CAAC,GAACR,CAAnB,EAAqBS,CAAC,GAAC,IAAvB,EAA4B;AAAC,WAAO,MAAMR,CAAN,EAAQM,CAAR,EAAUC,CAAV,EAAYC,CAAZ,GAAe,MAAMkI,cAAN,GAAqB,CAAC,YAAD,EAAc,GAAd,CAApC,EAAuD,KAAKQ,SAAL,CAAe,YAAf,EAA4B9I,CAA5B,CAAvD,EAAsF,KAAK8I,SAAL,CAAe,GAAf,EAAmB/I,CAAnB,CAAtF,EAA4G,IAAnH;AAAwH;;AAAAsJ,EAAAA,IAAI,CAAC1J,CAAC,GAAC,IAAH,EAAQC,CAAC,GAAC,IAAV,EAAe;AAAC,UAAMI,CAAC,GAAC,KAAKyI,CAAb;AAAA,UAAe1I,CAAC,GAACC,CAAC,CAACY,KAAF,CAAQ,CAAR,CAAjB;AAAA,UAA4BV,CAAC,GAAC,KAAKyI,EAAnC;AAAA,UAAsCxI,CAAC,GAAC,KAAKsH,OAA7C;AAAA,UAAqDrH,CAAC,GAAC,KAAKyN,EAA5D;AAA+D,SAAKC,SAAL,GAAe,IAAE1N,CAAjB,EAAmB,KAAK2N,UAAL,GAAgB,IAAE3N,CAArC,EAAuC,KAAK4N,QAAL,GAAc,IAAE5N,CAAvD,EAAyD,KAAK+I,CAAL,GAAOxJ,CAAC,IAAE,IAAI6J,CAAJ,CAAMxJ,CAAN,EAAQE,CAAR,EAAW+I,SAAX,EAAnE,EAA0F,KAAKgF,GAAL,GAASrO,CAAC,IAAE,IAAIqH,CAAJ,CAAMjH,CAAC,CAACuD,SAAR,EAAkBpD,CAAlB,CAAtG;;AAA2H,UAAK;AAAC+N,MAAAA,QAAQ,EAACxN,CAAV;AAAY8M,MAAAA,OAAO,EAAC7M;AAApB,QAAuB,KAAKwN,kBAAL,CAAwB,KAAKL,SAA7B,EAAuC,KAAKC,UAA5C,EAAuD,KAAKC,QAA5D,CAA5B;;AAAkG,WAAO,KAAKE,QAAL,GAAcxN,CAAd,EAAgB,KAAK8M,OAAL,GAAa7M,CAA7B,EAA+B,KAAKyN,EAAL,GAAQ,MAAIrO,CAAJ,GAAMW,CAAC,CAACE,KAAF,CAAQ,CAAR,CAA7C,EAAwD,KAAKyN,CAAL,GAAO,IAAE,CAAjE,EAAmE,KAAKC,GAAL,GAAS,IAA5E,EAAiF,KAAKC,GAAL,GAAS,IAAIhN,CAAJ,CAAMxB,CAAN,EAAQG,CAAR,EAAU,CAAV,CAA1F,EAAuG,KAAKsO,IAAL,GAAU,IAAIjN,CAAJ,CAAMxB,CAAN,EAAQG,CAAR,EAAU,CAAV,CAAjH,EAA8H,IAArI;AAA0I;;AAAAiO,EAAAA,kBAAkB,CAACxO,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAMD,CAAC,GAAC,KAAK0H,OAAb;AAAA,UAAqBvH,CAAC,GAAC,KAAKuO,WAA5B;AAAA,UAAwCtO,CAAC,GAAC,KAAKsI,CAA/C;AAAA,UAAiDrI,CAAC,GAACD,CAAC,CAACS,KAAF,CAAQ,CAAR,CAAnD;AAAA,UAA8DF,CAAC,GAAC,KAAKuN,GAArE;AAAA,UAAyEtN,CAAC,GAACd,IAAI,CAAC4D,GAAL,CAAS9D,CAAC,GAAC,EAAX,EAAcS,CAAd,CAA3E;AAAA,UAA4FS,CAAC,GAAC,IAAIU,CAAJ,CAAMnB,CAAN,EAAQO,CAAR,CAA9F;AAAA,UAAyGqD,CAAC,GAAC,IAAIzC,CAAJ,CAAMnB,CAAN,EAAQO,CAAR,CAA3G;;AAAsH,SAAI,IAAIhB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,CAAd,EAAgB,EAAET,CAAlB,EAAoBe,CAAC,CAACqH,MAAF,CAAS5H,CAAC,CAACY,GAAF,CAAMpB,CAAN,CAAT,EAAkBgB,CAAC,GAAC,CAApB,EAAuBoG,QAAvB,GAAkCiF,MAAlC,CAA0CrM,CAAC,IAAE,KAAGA,CAAC,CAAC0G,KAAlD,EAA0DlF,IAA1D,CAAgE,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAAC0G,KAAF,GAAQzG,CAAC,CAACyG,KAAjF,EAAyF+D,OAAzF,CAAkG,CAACxK,CAAD,EAAGI,CAAH,KAAO;AAACa,MAAAA,CAAC,CAACuB,SAAF,CAAYzC,CAAZ,EAAcK,CAAd,EAAgBJ,CAAC,CAACwG,OAAF,CAAUsB,KAA1B,GAAiC1D,CAAC,CAAC5B,SAAF,CAAYzC,CAAZ,EAAcK,CAAd,EAAgBJ,CAAC,CAACyG,KAAlB,CAAjC;AAA0D,KAApK;;AAAuK,UAAMzB,CAAC,GAAC,IAAI/C,YAAJ,CAAiBzB,CAAjB,CAAR;;AAA4B,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,CAAd,EAAgB,EAAET,CAAlB,EAAoBiF,CAAC,CAACjF,CAAD,CAAD,GAAKE,IAAI,CAACY,GAAL,CAAS,CAACuD,CAAC,CAAC7B,KAAF,CAAQxC,CAAR,EAAU,CAAV,IAAaqE,CAAC,CAAC7B,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAAb,GAA0BqE,CAAC,CAAC7B,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAA1B,GAAuCqE,CAAC,CAAC7B,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAAxC,IAAsD,CAA/D,EAAiE,KAAjE,CAAL;;AAA6E,UAAMmF,CAAC,GAAC,KAAK4J,OAAL,CAAa1K,CAAb,EAAeY,CAAf,EAAiB/D,CAAjB,CAAR;;AAA4B,QAAIiF,CAAC,GAAC,KAAK6I,oBAAL,CAA0B7J,CAA1B,EAA4BjE,CAA5B,EAA8BlB,CAA9B,EAAgCC,CAAhC,CAAN;AAAA,QAAyCmG,CAAC,GAACD,CAAC,CAAClF,KAAF,CAAQ,CAAR,CAA3C;;AAAsD,UAAMqG,CAAC,GAAC,IAAIpF,YAAJ,CAAiBkE,CAAjB,CAAR;;AAA4B,SAAI,IAAIpG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAd,EAAgB,EAAEpG,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACkG,CAAC,CAAC3D,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAAR;AAAA,YAAqBK,CAAC,GAAC8F,CAAC,CAAC3D,KAAF,CAAQxC,CAAR,EAAU,CAAV,CAAvB;AAAoCsH,MAAAA,CAAC,CAACtH,CAAD,CAAD,GAAKI,CAAC,CAACI,CAAC,CAACY,GAAF,CAAMnB,CAAN,CAAD,EAAUO,CAAC,CAACY,GAAF,CAAMf,CAAN,CAAV,CAAN;AAA0B;;AAAA,QAAIiI,CAAC,GAAC,KAAK2G,aAAL,CAAmB9I,CAAnB,EAAqBhB,CAArB,EAAuBjE,CAAvB,EAAyBoG,CAAzB,EAA2BrC,CAA3B,CAAN;;AAAoC,QAAG5E,CAAC,GAAC,CAAL,EAAO;AAAC,YAAK;AAAC6O,QAAAA,eAAe,EAAClP,CAAjB;AAAmBmP,QAAAA,cAAc,EAAClP;AAAlC,UAAqC,KAAKmP,uBAAL,CAA6B5O,CAA7B,EAA+BH,CAA/B,EAAiC4E,CAAjC,CAA1C;;AAA8EkB,MAAAA,CAAC,GAACA,CAAC,CAACnD,MAAF,CAAShD,CAAT,EAAW,UAAX,CAAF,EAAyBsI,CAAC,GAACpG,YAAY,CAACf,IAAb,CAAkB,CAAC,GAAGmH,CAAJ,EAAM,GAAGrI,CAAT,CAAlB,CAA3B;AAA0D;;AAAAmG,IAAAA,CAAC,GAACD,CAAC,CAAClF,KAAF,CAAQ,CAAR,CAAF;AAAa,QAAIwH,CAAC,GAAC,CAAC,CAAD,GAAG,CAAT;;AAAW,SAAI,IAAIzI,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAd,EAAgB,EAAEpG,CAAlB,EAAoBqP,KAAK,CAAC/G,CAAC,CAACtI,CAAD,CAAF,CAAL,KAAcsI,CAAC,CAACtI,CAAD,CAAD,GAAK,CAAnB,GAAsByI,CAAC,GAACH,CAAC,CAACtI,CAAD,CAAH,KAASyI,CAAC,GAACH,CAAC,CAACtI,CAAD,CAAZ,CAAtB;;AAAuC,QAAI0I,CAAC,GAAC,CAAC,CAAD,GAAG,CAAT;;AAAW,SAAI,IAAI1I,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAd,EAAgB,EAAEpG,CAAlB,EAAoBsI,CAAC,CAACtI,CAAD,CAAD,IAAMyI,CAAN,EAAQH,CAAC,CAACtI,CAAD,CAAD,IAAM,IAAd,EAAmBsI,CAAC,CAACtI,CAAD,CAAD,GAAKE,IAAI,CAAC8K,GAAL,CAAS,IAAEzK,CAAC,GAAC+H,CAAC,CAACtI,CAAD,CAAd,CAAxB,EAA2C0I,CAAC,GAACJ,CAAC,CAACtI,CAAD,CAAH,KAAS0I,CAAC,GAACJ,CAAC,CAACtI,CAAD,CAAZ,CAA3C;;AAA4D,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoG,CAAd,EAAgB,EAAEpG,CAAlB,EAAoBsI,CAAC,CAACtI,CAAD,CAAD,IAAM0I,CAAN;;AAAQ,WAAM;AAAC6F,MAAAA,QAAQ,EAACpI,CAAV;AAAY0H,MAAAA,OAAO,EAACvF;AAApB,KAAN;AAA6B;;AAAAyG,EAAAA,OAAO,CAAC/O,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAK,CAACD,CAAD,EAAGG,CAAH,IAAMP,CAAC,CAACiB,KAAb;AAAmB,WAAO,IAAIW,CAAJ,CAAMxB,CAAN,EAAQG,CAAR,EAAW,CAACH,CAAD,EAAGG,CAAH,KAAOL,IAAI,CAACkL,GAAL,CAAS,EAAEpL,CAAC,CAACwC,KAAF,CAAQpC,CAAR,EAAUG,CAAV,KAAc,CAAhB,IAAmBN,CAAC,CAACG,CAAD,CAApB,GAAwBH,CAAC,CAACI,CAAC,CAACmC,KAAF,CAAQpC,CAAR,EAAUG,CAAV,CAAD,CAAlC,CAAlB,CAAP;AAA6E;;AAAAyO,EAAAA,oBAAoB,CAAChP,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAP,EAAS;AAAC,UAAMG,CAAC,GAACN,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAR;AAAA,UAAmBT,CAAC,GAAC,IAAIoB,CAAJ,CAAMrB,CAAC,GAACF,CAAF,GAAID,CAAV,EAAY,CAAZ,CAArB;;AAAoC,SAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB;AAAC,UAAIM,CAAC,GAACN,CAAC,GAACJ,CAAF,GAAID,CAAV;;AAAY,YAAMY,CAAC,GAAC,KAAKsO,SAAL,CAAetP,CAAC,CAACoB,GAAF,CAAMX,CAAN,EAASY,GAAT,CAAcrB,CAAC,IAAE,CAACA,CAAlB,CAAf,CAAR;;AAA8C,WAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,YAAIK,CAAC,GAACL,CAAC,GAACI,CAAR;;AAAU,cAAMwB,CAAC,GAAC3B,CAAC,CAACuC,KAAF,CAAQ/B,CAAR,EAAUO,CAAC,CAAChB,CAAD,CAAX,CAAR;AAAA,cAAwBkB,CAAC,GAAC,KAAKqO,iBAAL,CAAuBnP,CAAvB,EAAyBG,CAAzB,EAA2BS,CAAC,CAACS,KAAF,CAAQ,CAAR,EAAUzB,CAAC,GAAC,CAAZ,CAA3B,CAA1B;;AAAqE,aAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,gBAAMC,CAAC,GAACc,CAAC,GAACV,CAAF,GAAIL,CAAZ;AAAA,gBAAcI,CAAC,GAACc,CAAC,CAAClB,CAAD,CAAjB;AAAqBQ,UAAAA,CAAC,CAACiC,SAAF,CAAYxC,CAAZ,EAAc,CAAd,EAAgBQ,CAAhB,GAAmBD,CAAC,CAACiC,SAAF,CAAYxC,CAAZ,EAAc,CAAd,EAAgB2B,CAAhB,CAAnB,EAAsCpB,CAAC,CAACiC,SAAF,CAAYxC,CAAZ,EAAc,CAAd,EAAgBG,CAAhB,CAAtC;AAAyD;AAAC;AAAC;;AAAA,WAAOI,CAAP;AAAS;;AAAA8O,EAAAA,SAAS,CAACtP,CAAD,EAAG;AAAC,WAAOA,CAAC,CAACqB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,MAAQ;AAACkG,MAAAA,CAAC,EAACnG,CAAH;AAAKO,MAAAA,CAAC,EAACN;AAAP,KAAR,CAAP,EAA4BuB,IAA5B,CAAkC,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACmG,CAAF,GAAIlG,CAAC,CAACkG,CAA/C,EAAmD9E,GAAnD,CAAwDrB,CAAC,IAAEA,CAAC,CAACO,CAA7D,CAAP;AAAwE;;AAAAgP,EAAAA,iBAAiB,CAACvP,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAMD,CAAC,GAAC,KAAK6I,WAAb;AAAA,UAAyB1I,CAAC,GAAC8D,CAAC,CAAC,CAAD,EAAGpE,CAAC,GAAC,CAAL,CAAD,CAASoM,MAAT,CAAiBrM,CAAC,IAAEK,CAAC,CAACmP,OAAF,CAAUxP,CAAV,IAAa,CAAjC,CAA3B;AAAgE,WAAOI,CAAC,CAAC6F,MAAF,CAAS1F,CAAT,EAAWL,IAAI,CAAC4D,GAAL,CAAS9D,CAAT,EAAWO,CAAC,CAACD,MAAF,GAAS,CAApB,CAAX,CAAP;AAA0C;;AAAA2O,EAAAA,aAAa,CAACjP,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAP,EAASG,CAAT,EAAW;AAAC,UAAMC,CAAC,GAACR,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAR;AAAA,UAAmBR,CAAC,GAAC,IAAIyB,YAAJ,CAAiB1B,CAAjB,CAArB;;AAAyC,SAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAMP,CAAC,GAACR,CAAC,CAACwC,KAAF,CAAQzB,CAAR,EAAU,CAAV,CAAR;AAAA,YAAqBC,CAAC,GAACX,CAAC,CAACe,GAAF,CAAMZ,CAAN,EAASgP,OAAT,CAAiBxP,CAAC,CAACwC,KAAF,CAAQzB,CAAR,EAAU,CAAV,CAAjB,CAAvB;AAAA,YAAsDa,CAAC,GAAC3B,CAAC,CAACuC,KAAF,CAAQhC,CAAR,EAAUQ,CAAV,CAAxD;;AAAqE,UAAIE,CAAC,GAAChB,IAAI,CAACkL,GAAL,CAAS,EAAEhL,CAAC,CAACW,CAAD,CAAD,IAAM,CAAR,KAAYR,CAAC,CAACC,CAAD,CAAD,GAAKD,CAAC,CAACP,CAAC,CAACwC,KAAF,CAAQzB,CAAR,EAAU,CAAV,CAAD,CAAlB,CAAT,CAAN;AAAkDG,MAAAA,CAAC,GAAC,KAAF,KAAUA,CAAC,GAAC,KAAZ,GAAmBT,CAAC,CAACM,CAAD,CAAD,GAAKa,CAAC,GAACV,CAA1B;AAA4B;;AAAA,WAAOT,CAAP;AAAS;;AAAA2O,EAAAA,uBAAuB,CAACpP,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAMD,CAAC,GAAC,KAAK0H,OAAb;AAAA,UAAqBvH,CAAC,GAAC,KAAK0I,WAA5B;AAAA,UAAwCzI,CAAC,GAACR,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAA1C;AAAA,UAAqDR,CAAC,GAAC,IAAImB,CAAJ,CAAMpB,CAAC,GAACP,CAAR,EAAU,CAAV,CAAvD;AAAA,UAAoEc,CAAC,GAAC,IAAImB,YAAJ,CAAiB1B,CAAC,GAACP,CAAnB,CAAtE;;AAA4F,SAAI,IAAIe,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAd,EAAgB,EAAEQ,CAAlB,EAAoB;AAAC,YAAMY,CAAC,GAACZ,CAAC,GAACf,CAAV;AAAA,YAAYiB,CAAC,GAAC,CAAC,GAAGmD,CAAC,CAAC,CAAD,EAAGrD,CAAC,GAAC,CAAL,CAAL,EAAa,GAAGqD,CAAC,CAACrD,CAAC,GAAC,CAAH,EAAKR,CAAC,GAAC,CAAP,CAAjB,CAAd;;AAA0C,WAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAd,EAAgB,EAAEO,CAAlB,EAAoB;AAAC,YAAG,CAACP,CAAD,EAAGoE,CAAH,IAAM9D,CAAC,CAAC0F,MAAF,CAAS/E,CAAT,EAAW,CAAX,CAAT;AAAA,YAAuB+D,CAAC,GAAC/E,IAAI,CAACkL,GAAL,CAAS,EAAEhL,CAAC,CAACJ,CAAC,CAACoB,GAAF,CAAMJ,CAAN,CAAD,EAAUhB,CAAC,CAACoB,GAAF,CAAMnB,CAAN,CAAV,CAAD,IAAsB,CAAxB,KAA4BI,CAAC,CAACW,CAAD,CAAD,GAAKX,CAAC,CAACJ,CAAD,CAAlC,CAAT,CAAzB;AAA0EgF,QAAAA,CAAC,GAAC,KAAF,KAAUA,CAAC,GAAC,KAAZ;AAAmB,YAAIE,CAAC,GAACjF,IAAI,CAACkL,GAAL,CAAS,EAAEhL,CAAC,CAACJ,CAAC,CAACoB,GAAF,CAAMJ,CAAN,CAAD,EAAUhB,CAAC,CAACoB,GAAF,CAAMiD,CAAN,CAAV,CAAD,IAAsB,CAAxB,KAA4BhE,CAAC,CAACW,CAAD,CAAD,GAAKX,CAAC,CAACgE,CAAD,CAAlC,CAAT,CAAN;AAAuDc,QAAAA,CAAC,GAAC,KAAF,KAAUA,CAAC,GAAC,KAAZ,GAAmBF,CAAC,GAACE,CAAF,KAAM,CAAClF,CAAD,EAAGoE,CAAH,IAAM,CAACA,CAAD,EAAGpE,CAAH,CAAN,EAAY,CAACgF,CAAD,EAAGE,CAAH,IAAM,CAACA,CAAD,EAAGF,CAAH,CAAxB,CAAnB;AAAkD,cAAMkB,CAAC,GAACvE,CAAC,GAACpB,CAAV;AAAYC,QAAAA,CAAC,CAACgC,SAAF,CAAY0D,CAAZ,EAAc,CAAd,EAAgBnF,CAAhB,GAAmBP,CAAC,CAACgC,SAAF,CAAY0D,CAAZ,EAAc,CAAd,EAAgBlG,CAAhB,CAAnB,EAAsCQ,CAAC,CAACgC,SAAF,CAAY0D,CAAZ,EAAc,CAAd,EAAgB9B,CAAhB,CAAtC,EAAyDtD,CAAC,CAACoF,CAAD,CAAD,GAAKlB,CAAC,GAACE,CAAhE;AAAkE;AAAC;;AAAA,WAAM;AAAC+J,MAAAA,eAAe,EAACzO,CAAjB;AAAmB0O,MAAAA,cAAc,EAACpO;AAAlC,KAAN;AAA2C;;AAAA0O,EAAAA,KAAK,CAACzP,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKkO,SAAb;AAAA,UAAuB9N,CAAC,GAAC,KAAK+N,UAA9B;AAAA,UAAyChO,CAAC,GAAC,KAAKmO,QAAhD;AAAA,UAAyDhO,CAAC,GAAC,KAAKsN,OAAhE;AAAA,UAAwE,CAACrN,CAAD,EAAGC,CAAH,IAAMT,CAAC,CAACiB,KAAhF;AAAA,UAAsFF,CAAC,GAACX,CAAC,CAACa,KAAF,CAAQ,CAAR,CAAxF;AAAA,UAAmGD,CAAC,GAAC,IAAIY,CAAJ,CAAMpB,CAAN,EAAQC,CAAR,EAAU,CAAV,CAArG;AAAkH,QAAIS,CAAC,GAAC,IAAIP,KAAJ,CAAUF,CAAV,EAAayE,IAAb,CAAkB,CAAlB,CAAN;AAAA,QAA2Bb,CAAC,GAAC,IAAI1D,KAAJ,CAAUF,CAAV,EAAayE,IAAb,CAAkB,CAAlB,CAA7B;AAAA,QAAkDD,CAAC,GAAC,CAApD;AAAA,QAAsDE,CAAC,GAAC,CAAxD;AAAA,QAA0DgB,CAAC,GAAC,CAA5D;AAAA,QAA8DC,CAAC,GAAC,CAAhE;AAAkE,UAAMkB,CAAC,GAAC9G,CAAC,GAACP,CAAF,GAAII,CAAZ;;AAAc,SAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,CAAd,EAAgB,EAAEd,CAAlB,EAAoB;AAAC,YAAK,CAACO,CAAD,EAAGO,CAAH,EAAKa,CAAL,IAAQxB,CAAC,CAACgB,GAAF,CAAMnB,CAAN,CAAb;;AAAsB,UAAGA,CAAC,GAACI,CAAF,IAAK,CAAL,IAAQJ,CAAC,IAAEqH,CAAd,EAAgB;AAACrC,QAAAA,CAAC,GAAC,CAAF,EAAIE,CAAC,GAAC,CAAN;;AAAQ,aAAI,IAAIlF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoB;AAAC,gBAAMI,CAAC,GAACL,CAAC,CAACwC,KAAF,CAAQhC,CAAR,EAAUP,CAAV,CAAR;AAAA,gBAAqBG,CAAC,GAACJ,CAAC,CAACwC,KAAF,CAAQzB,CAAR,EAAUd,CAAV,CAAvB;AAAA,gBAAoCM,CAAC,GAACP,CAAC,CAACwC,KAAF,CAAQZ,CAAR,EAAU3B,CAAV,CAAtC;AAAmDiB,UAAAA,CAAC,CAACjB,CAAD,CAAD,GAAKI,CAAC,GAACD,CAAP,EAASiE,CAAC,CAACpE,CAAD,CAAD,GAAKI,CAAC,GAACE,CAAhB,EAAkB0E,CAAC,IAAE/D,CAAC,CAACjB,CAAD,CAAD,IAAM,CAA3B,EAA6BkF,CAAC,IAAEd,CAAC,CAACpE,CAAD,CAAD,IAAM,CAAtC;AAAwC;AAAC,OAA1I,MAA8I;AAACkF,QAAAA,CAAC,GAAC,CAAF;;AAAI,aAAI,IAAIlF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoB;AAAC,gBAAMI,CAAC,GAACL,CAAC,CAACwC,KAAF,CAAQhC,CAAR,EAAUP,CAAV,CAAR;AAAA,gBAAqBG,CAAC,GAACJ,CAAC,CAACwC,KAAF,CAAQZ,CAAR,EAAU3B,CAAV,CAAvB;AAAoCoE,UAAAA,CAAC,CAACpE,CAAD,CAAD,GAAKI,CAAC,GAACD,CAAP,EAAS+E,CAAC,IAAEd,CAAC,CAACpE,CAAD,CAAD,IAAM,CAAlB;AAAoB;AAAC;;AAAAgF,MAAAA,CAAC,GAACE,CAAF,IAAK,EAAEgB,CAAP,EAASC,CAAC,IAAE7F,CAAC,CAACN,CAAD,CAAD,IAAM,IAAEkF,CAAC,GAACF,CAAV,CAAZ;AAAyB,YAAMqD,CAAC,GAAC,CAAC/H,CAAC,CAACN,CAAD,CAAD,IAAMgF,CAAC,GAACE,CAAR,CAAD,KAAc,CAAtB;;AAAwB,WAAI,IAAInF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,CAAd,EAAgB,EAAET,CAAlB,EAAoB;AAAC,cAAMC,CAAC,GAACiB,CAAC,CAAClB,CAAD,CAAD,GAAKmF,CAAL,GAAOmD,CAAf;AAAA,cAAiBjI,CAAC,GAACgE,CAAC,CAACrE,CAAD,CAAD,GAAKiF,CAAL,GAAOqD,CAA1B;AAA4BtH,QAAAA,CAAC,CAACyB,SAAF,CAAYjC,CAAZ,EAAcR,CAAd,EAAgBgB,CAAC,CAACwB,KAAF,CAAQhC,CAAR,EAAUR,CAAV,IAAaC,CAAb,GAAeI,CAA/B,GAAkCW,CAAC,CAACyB,SAAF,CAAY1B,CAAZ,EAAcf,CAAd,EAAgBgB,CAAC,CAACwB,KAAF,CAAQzB,CAAR,EAAUf,CAAV,IAAaC,CAA7B,CAAlC,EAAkEe,CAAC,CAACyB,SAAF,CAAYb,CAAZ,EAAc5B,CAAd,EAAgBgB,CAAC,CAACwB,KAAF,CAAQZ,CAAR,EAAU5B,CAAV,IAAaK,CAA7B,CAAlE;AAAkG;AAAC;;AAAA,WAAM;AAACqP,MAAAA,IAAI,EAAC1O,CAAN;AAAQ2O,MAAAA,IAAI,EAACvJ,CAAb;AAAewJ,MAAAA,MAAM,EAACzJ;AAAtB,KAAN;AAA+B;;AAAAmD,EAAAA,SAAS,CAACtJ,CAAC,GAAC,GAAH,EAAO;AAAC,SAAKuJ,UAAL;;AAAkB,SAAI,IAAItJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB,KAAK4P,KAAL,CAAW5P,CAAX;;AAAc,WAAO,KAAK0J,UAAZ;AAAuB;;AAAU,GAATF,SAAS,GAAE;AAAC,SAAKF,UAAL;;AAAkB,SAAI,IAAIvJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkB,EAAEA,CAApB,EAAsB,KAAK6P,KAAL,CAAW7P,CAAX,GAAc,MAAM,KAAK2J,UAAzB;;AAAoC,WAAO,KAAKA,UAAZ;AAAuB;;AAAAkG,EAAAA,KAAK,CAAC7P,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,GAAC,GAAF,GAAM,EAAN,GAAS,EAAjB;AAAA,UAAoBK,CAAC,GAAC,KAAKqO,CAA3B;AAAA,UAA6BtO,CAAC,GAAC,KAAKwO,GAApC;AAAA,UAAwCrO,CAAC,GAAC,KAAKiJ,CAAL,CAAO9F,GAAP,CAAWtD,CAAC,CAACoD,IAAF,CAAOvD,CAAP,CAAX,CAA1C;AAAA,UAAgE;AAACyP,MAAAA,IAAI,EAAClP,CAAN;AAAQmP,MAAAA,IAAI,EAAClP,CAAb;AAAemP,MAAAA,MAAM,EAAC7O;AAAtB,QAAyB,KAAK0O,KAAL,CAAWlP,CAAX,CAAzF;;AAAuG,WAAO,KAAKmO,CAAL,GAAOjO,CAAP,EAAS,KAAK+I,CAAL,GAAO,KAAKsG,iBAAL,CAAuBvP,CAAvB,EAAyBP,CAAzB,EAA2BQ,CAA3B,CAAhB,EAA8C,KAAKiO,EAAL,IAASpO,CAAC,GAACI,CAAC,GAAC,KAAKkO,GAAT,GAAa,IAAb,GAAkB,EAAzE,EAA4E,KAAKnF,CAAxF;AAA0F;;AAAAsG,EAAAA,iBAAiB,CAAC9P,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAK,CAACD,CAAD,EAAGG,CAAH,IAAMP,CAAC,CAACiB,KAAb;AAAA,UAAmBT,CAAC,GAACP,CAAC,GAAC,GAAF,GAAM,EAAN,GAAS,EAA9B;AAAA,UAAiCQ,CAAC,GAAC,KAAKoO,IAAxC;AAAA,UAA6C9N,CAAC,GAAC,KAAK6N,GAApD;AAAA,UAAwD5N,CAAC,GAAC,KAAKyN,EAA/D;;AAAkE,SAAI,IAAIxO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoB,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,CAAd,EAAgB,EAAEH,CAAlB,EAAoB;AAAC,YAAMG,CAAC,GAACL,IAAI,CAACsL,IAAL,CAAUzK,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAAV,KAAyBF,IAAI,CAACsL,IAAL,CAAUnL,CAAC,CAACmC,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAAV,CAAzB,GAAiDK,CAAC,CAAC+B,KAAF,CAAQvC,CAAR,EAAUG,CAAV,IAAa,EAA9D,GAAiEF,IAAI,CAACY,GAAL,CAAS,KAAGL,CAAC,CAAC+B,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAAZ,EAAyB,GAAzB,CAAzE;AAAuGK,MAAAA,CAAC,CAACgC,SAAF,CAAYxC,CAAZ,EAAcG,CAAd,EAAgBG,CAAhB,GAAmBQ,CAAC,CAAC0B,SAAF,CAAYxC,CAAZ,EAAcG,CAAd,EAAgBI,CAAC,GAACO,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAAF,GAAeY,CAAC,GAACP,CAAC,CAAC+B,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAAF,GAAeC,CAAC,CAACmC,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAA9C,CAAnB,EAA+EJ,CAAC,CAACyC,SAAF,CAAYxC,CAAZ,EAAcG,CAAd,EAAgBJ,CAAC,CAACwC,KAAF,CAAQvC,CAAR,EAAUG,CAAV,IAAaW,CAAC,CAACyB,KAAF,CAAQvC,CAAR,EAAUG,CAAV,CAA7B,CAA/E;AAA0H;;AAAA,WAAOJ,CAAP;AAAS;;AAA1+I;;AAA2+I,MAAM+P,CAAN,CAAO;AAAClO,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,QAAL,EAAcD,CAAC,GAACJ,CAAhB,EAAkB;AAAC,WAAO,KAAKgQ,GAAL,GAAS,CAAT,EAAW,KAAKC,OAAL,GAAahQ,CAAxB,EAA0B,KAAK6H,OAAL,GAAa1H,CAAvC,EAAyC,KAAK8P,QAAL,GAAc7P,CAAvD,EAAyD,KAAKqJ,IAAL,EAAzD,EAAqE,KAAKyG,IAAL,GAAU,KAAKC,EAAL,EAA/E,EAAyF,IAAhG;AAAqG;;AAAAC,EAAAA,YAAY,CAACrQ,CAAD,EAAGC,CAAC,GAAC,UAAL,EAAgB;AAAC,QAAII,CAAJ;AAAA,QAAMD,CAAC,GAAC,EAAR;;AAAW,YAAOH,CAAP;AAAU,WAAI,UAAJ;AAAeI,QAAAA,CAAC,GAACL,CAAC,IAAEA,CAAC,CAACsQ,IAAP;;AAAY;;AAAM,WAAI,OAAJ;AAAYjQ,QAAAA,CAAC,GAACL,CAAC,IAAEA,CAAC,CAACuQ,KAAP;;AAAa;;AAAM;AAAQ,cAAK,cAAL;AAAlF;;AAAsG,WAAO,KAAKC,SAAL,CAAe,KAAKL,IAApB,EAAyB9P,CAAzB,EAA2BL,CAA3B,EAA6BI,CAA7B,GAAgCA,CAAvC;AAAyC;;AAAAoQ,EAAAA,SAAS,CAACxQ,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAP,EAAS;AAACH,IAAAA,CAAC,CAACD,CAAD,CAAD,IAAMK,CAAN,GAAQD,CAAC,CAACS,IAAF,CAAOb,CAAC,CAACyQ,MAAF,EAAP,CAAR,IAA4B,KAAKD,SAAL,CAAexQ,CAAC,CAAC0Q,IAAjB,EAAsBzQ,CAAtB,EAAwBI,CAAxB,EAA0BD,CAA1B,GAA6B,KAAKoQ,SAAL,CAAexQ,CAAC,CAAC2Q,KAAjB,EAAuB1Q,CAAvB,EAAyBI,CAAzB,EAA2BD,CAA3B,CAAzD;AAAwF;;AAAAsJ,EAAAA,IAAI,GAAE;AAAC,UAAM1J,CAAC,GAAC,KAAK8H,OAAb;AAAA,UAAqB7H,CAAC,GAAC,KAAKgQ,OAA5B;AAAA,UAAoC5P,CAAC,GAAC,KAAKuQ,EAAL,GAAQ3Q,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAA9C;AAAA,UAAyDb,CAAC,GAAC,KAAKyQ,MAAL,GAAY,IAAI3O,YAAJ,CAAiB7B,CAAjB,CAAvE;AAAA,UAA2FE,CAAC,GAAC,KAAKuQ,gBAAL,GAAsB,IAAInQ,KAAJ,CAAUN,CAAV,CAAnH;;AAAgI,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoB;AAACJ,MAAAA,CAAC,CAACI,CAAD,CAAD,GAAK,CAAL,EAAOD,CAAC,CAACC,CAAD,CAAD,GAAK,IAAI0B,YAAJ,CAAiB7B,CAAjB,CAAZ;;AAAgC,WAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoBF,CAAC,CAACC,CAAD,CAAD,CAAKC,CAAL,IAAQD,CAAC,KAAGC,CAAJ,GAAM,IAAE,CAAR,GAAUT,CAAC,CAACC,CAAC,CAACmB,GAAF,CAAMZ,CAAN,CAAD,EAAUP,CAAC,CAACmB,GAAF,CAAMX,CAAN,CAAV,CAAnB,EAAuCF,CAAC,CAACC,CAAD,CAAD,CAAKJ,CAAC,CAACI,CAAD,CAAN,IAAWD,CAAC,CAACC,CAAD,CAAD,CAAKC,CAAL,CAAX,KAAqBL,CAAC,CAACI,CAAD,CAAD,GAAKC,CAA1B,CAAvC;AAAoE;;AAAA,UAAMD,CAAC,GAAC,KAAKuQ,SAAL,GAAe,IAAIpQ,KAAJ,CAAUN,CAAV,CAAvB;AAAA,UAAoCI,CAAC,GAAC,KAAKuQ,OAAL,GAAa,IAAIC,WAAJ,CAAgB5Q,CAAhB,CAAnD;;AAAsE,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoBQ,CAAC,CAACR,CAAD,CAAD,GAAK,EAAL,EAAQQ,CAAC,CAACR,CAAD,CAAD,CAAK,CAAL,IAAQ,IAAIkR,CAAJ,CAAM,KAAKlB,GAAL,EAAN,EAAiB,IAAjB,EAAsB,IAAtB,EAA2B,CAA3B,EAA6B/P,CAAC,CAACmB,GAAF,CAAMpB,CAAN,CAA7B,EAAsCA,CAAtC,EAAwC,CAAxC,EAA0C,CAA1C,CAAhB,EAA6DS,CAAC,CAACT,CAAD,CAAD,GAAK,CAAlE;;AAAoE,WAAO,IAAP;AAAY;;AAAAoQ,EAAAA,EAAE,GAAE;AAAC,UAAMpQ,CAAC,GAAC,KAAK4Q,EAAb;AAAA,UAAgB3Q,CAAC,GAAC,KAAK4Q,MAAvB;AAAA,UAA8BxQ,CAAC,GAAC,KAAKyQ,gBAArC;AAAA,UAAsD1Q,CAAC,GAAC,KAAK2Q,SAA7D;AAAA,UAAuExQ,CAAC,GAAC,KAAKyQ,OAA9E;AAAA,UAAsFxQ,CAAC,GAAC,KAAK0P,QAA7F;AAAsG,QAAIzP,CAAC,GAAC,IAAN;;AAAW,SAAI,IAAIM,CAAC,GAAC,CAAN,EAAQC,CAAC,GAAChB,CAAC,GAAC,CAAhB,EAAkBe,CAAC,GAACC,CAApB,EAAsB,EAAED,CAAxB,EAA0B;AAAC,UAAIA,CAAC,GAAC,CAAN;;AAAQ,WAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoBC,CAAC,CAACD,CAAD,CAAD,CAAKH,CAAC,CAACG,CAAD,CAAN,IAAWC,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAC,CAACc,CAAD,CAAN,CAAX,KAAwBA,CAAC,GAACX,CAA1B;;AAA6B,UAAIY,CAAC,GAACf,CAAC,CAACc,CAAD,CAAP;AAAA,UAAWa,CAAC,GAACxB,CAAC,CAACW,CAAD,CAAD,CAAK,CAAL,CAAb;AAAA,UAAqBG,CAAC,GAACd,CAAC,CAACY,CAAD,CAAD,CAAK,CAAL,CAAvB;AAAA,UAA+BqD,CAAC,GAAC,IAAI6M,CAAJ,CAAM,KAAKlB,GAAL,EAAN,EAAiBpO,CAAjB,EAAmBV,CAAnB,EAAqBb,CAAC,CAACU,CAAD,CAAD,CAAKC,CAAL,CAArB,CAAjC;AAA+DZ,MAAAA,CAAC,CAACW,CAAD,CAAD,CAAKoQ,OAAL,CAAa9M,CAAb,GAAgB9D,CAAC,CAACQ,CAAD,CAAD,IAAMR,CAAC,CAACS,CAAD,CAAvB;;AAA2B,WAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB,QAAOO,CAAP;AAAU,aAAI,QAAJ;AAAaH,UAAAA,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,IAAQI,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,CAAR,KAAkBI,CAAC,CAACJ,CAAD,CAAD,CAAKc,CAAL,IAAQV,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,IAAQI,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,CAAlC;AAA2C;;AAAM,aAAI,UAAJ;AAAeI,UAAAA,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,IAAQI,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,CAAR,KAAkBI,CAAC,CAACJ,CAAD,CAAD,CAAKc,CAAL,IAAQV,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,IAAQI,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,CAAlC;AAA2C;;AAAM,aAAI,SAAJ;AAAcI,UAAAA,CAAC,CAACJ,CAAD,CAAD,CAAKc,CAAL,IAAQV,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,IAAQ,CAACM,CAAC,CAACQ,CAAD,CAAD,GAAKV,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAL,CAAL,GAAaM,CAAC,CAACS,CAAD,CAAD,GAAKX,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,CAAnB,KAA6BM,CAAC,CAACQ,CAAD,CAAD,GAAKR,CAAC,CAACN,CAAD,CAAnC,CAAhB;AAAtJ;;AAA8MI,MAAAA,CAAC,CAACU,CAAD,CAAD,CAAKA,CAAL,IAAQ,IAAE,CAAV;;AAAY,WAAI,IAAId,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoBI,CAAC,CAACJ,CAAD,CAAD,CAAKe,CAAL,IAAQX,CAAC,CAACW,CAAD,CAAD,CAAKf,CAAL,IAAQ,IAAE,CAAlB;;AAAoB,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoBH,CAAC,CAACG,CAAD,CAAD,KAAOY,CAAP,KAAWf,CAAC,CAACG,CAAD,CAAD,GAAKW,CAAhB,GAAmBV,CAAC,CAACU,CAAD,CAAD,CAAKX,CAAL,IAAQC,CAAC,CAACU,CAAD,CAAD,CAAKd,CAAC,CAACc,CAAD,CAAN,CAAR,KAAqBd,CAAC,CAACc,CAAD,CAAD,GAAKX,CAA1B,CAAnB;;AAAgDK,MAAAA,CAAC,GAAC4D,CAAF;AAAI;;AAAA,WAAO5D,CAAP;AAAS;;AAA/+C;;AAAg/C,MAAMyQ,CAAN,CAAO;AAACrP,EAAAA,WAAW,CAAC7B,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOD,CAAP,EAASG,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeM,CAAf,EAAiB;AAAC,WAAO,KAAK6J,EAAL,GAAQ5K,CAAR,EAAU,KAAK0Q,IAAL,GAAUzQ,CAApB,EAAsB,KAAK0Q,KAAL,GAAWtQ,CAAjC,EAAmC,KAAKiQ,IAAL,GAAUlQ,CAA7C,EAA+C,KAAK2H,KAAL,GAAWvH,CAA1D,EAA4D,KAAK4Q,IAAL,GAAU,QAAM3Q,CAAN,GAAQA,CAAR,GAAUR,CAAC,CAACmR,IAAF,GAAO/Q,CAAC,CAAC+Q,IAAzF,EAA8F,KAAKb,KAAL,GAAW,QAAMxP,CAAN,GAAQA,CAAR,GAAU,IAAEb,IAAI,CAACY,GAAL,CAASb,CAAC,CAACsQ,KAAX,EAAiBlQ,CAAC,CAACkQ,KAAnB,CAArH,EAA+I,KAAKc,QAAL,GAAc,QAAM9Q,CAAN,GAAQA,CAAR,GAAU,KAAK+Q,mBAAL,CAAyBrR,CAAzB,EAA2BI,CAA3B,CAAvK,EAAqM,IAA5M;AAAiN;;AAAAiR,EAAAA,mBAAmB,CAACtR,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAACL,CAAC,CAACoR,IAAV;AAAA,UAAehR,CAAC,GAACH,CAAC,CAACmR,IAAnB;AAAA,UAAwB7Q,CAAC,GAACP,CAAC,CAACqR,QAA5B;AAAA,UAAqC7Q,CAAC,GAACP,CAAC,CAACoR,QAAzC;AAAA,UAAkD5Q,CAAC,GAAC,KAAK2Q,IAAzD;AAAA,UAA8DrQ,CAAC,GAACf,CAAC,CAACqR,QAAF,CAAW/Q,MAA3E;AAAA,UAAkFU,CAAC,GAAC,IAAIkB,YAAJ,CAAiBnB,CAAjB,CAApF;;AAAwG,SAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACe,CAAd,EAAgB,EAAEf,CAAlB,EAAoBgB,CAAC,CAAChB,CAAD,CAAD,GAAK,CAACK,CAAC,GAACE,CAAC,CAACP,CAAD,CAAH,GAAOI,CAAC,GAACI,CAAC,CAACR,CAAD,CAAX,IAAgBS,CAArB;;AAAuB,WAAOO,CAAP;AAAS;;AAAU,MAANuQ,MAAM,GAAE;AAAC,WAAO,MAAI,KAAKhB,KAAhB;AAAsB;;AAAAE,EAAAA,MAAM,GAAE;AAAC,QAAG,KAAKc,MAAR,EAAe,OAAM,CAAC,KAAKxJ,KAAN,CAAN;AAAmB,UAAM/H,CAAC,GAAC,KAAK0Q,IAAb;AAAA,UAAkBzQ,CAAC,GAAC,KAAK0Q,KAAzB;AAA+B,WAAM,CAAC3Q,CAAC,CAACuR,MAAF,GAAS,CAACvR,CAAC,CAAC+H,KAAH,CAAT,GAAmB/H,CAAC,CAACyQ,MAAF,EAApB,EAAgCzN,MAAhC,CAAuC/C,CAAC,CAACsR,MAAF,GAAS,CAACtR,CAAC,CAAC8H,KAAH,CAAT,GAAmB9H,CAAC,CAACwQ,MAAF,EAA1D,CAAN;AAA4E;;AAA7lB;;AAA8lB,MAAMe,CAAN,CAAO;AAAC3P,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAACJ,CAAP,EAASO,CAAC,GAAC,IAAX,EAAgBC,CAAC,GAAC,CAAC,CAAnB,EAAqB;AAAC,SAAKsH,OAAL,GAAa1H,CAAb,EAAe,KAAK6P,OAAL,GAAahQ,CAA5B,EAA8B,KAAKwR,EAAL,GAAQpR,CAAtC;AAAwC,UAAK,CAACI,CAAD,EAAGM,CAAH,IAAMd,CAAC,CAACgB,KAAb;AAAmB,WAAO,KAAKmE,EAAL,GAAQ3E,CAAR,EAAU,KAAKsI,EAAL,GAAQhI,CAAlB,EAAoBV,CAAC,GAACI,CAAF,KAAMJ,CAAC,GAACI,CAAR,CAApB,EAA+B,KAAKwI,WAAL,GAAiB,IAAI9D,CAAJ,CAAM5E,CAAN,CAAhD,EAAyD,KAAKwQ,SAAL,GAAe,IAAIpQ,KAAJ,CAAUF,CAAV,EAAayE,IAAb,CAAkB,KAAK,CAAvB,CAAxE,EAAkG,KAAKwM,kBAAL,GAAwB,KAAKC,qBAAL,CAA2BtR,CAA3B,CAA1H,EAAwJG,CAAC,IAAE,KAAKkJ,IAAL,CAAUrJ,CAAV,EAAY,KAAKqR,kBAAjB,CAA3J,EAAgM,IAAvM;AAA4M;;AAAArB,EAAAA,YAAY,GAAE;AAAC,UAAMrQ,CAAC,GAAC,KAAKyR,EAAb;AAAA,UAAgBxR,CAAC,GAAC,KAAK8Q,SAAvB;AAAA,UAAiC1Q,CAAC,GAAC,IAAIM,KAAJ,CAAUX,CAAV,EAAakF,IAAb,GAAoB7D,GAApB,CAAyB,MAAI,IAAIV,KAAJ,EAA7B,CAAnC;AAA4E,WAAOV,CAAC,CAACwK,OAAF,CAAW,CAACzK,CAAD,EAAGC,CAAH,KAAOI,CAAC,CAACL,CAAD,CAAD,CAAKa,IAAL,CAAUZ,CAAV,CAAlB,GAAiCI,CAAxC;AAA0C;;AAAAuR,EAAAA,eAAe,CAAC5R,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAK4P,OAAb;AAAA,UAAqB7P,CAAC,GAAC,KAAK0H,OAA5B;AAAoC,QAAIvH,CAAC,GAACP,CAAC,CAACM,MAAR;AAAe,WAAO8F,CAAC,CAACC,OAAF,CAAUpG,CAAV,EAAaA,CAAC,IAAE;AAAC,YAAMO,CAAC,GAACH,CAAC,CAACe,GAAF,CAAMnB,CAAN,CAAR;AAAiB,UAAIQ,CAAC,GAAC,CAAN;;AAAQ,WAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACM,CAAd,EAAgB,EAAEN,CAAlB,EAAoBQ,CAAC,IAAEL,CAAC,CAACI,CAAD,EAAGR,CAAC,CAACC,CAAD,CAAJ,CAAJ;;AAAa,aAAOQ,CAAP;AAAS,KAApF,EAAsF,KAAtF,EAA6FsG,GAA7F,GAAmGN,OAA1G;AAAkH;;AAAAkL,EAAAA,qBAAqB,CAAC3R,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKmF,EAAb;AAAA,UAAgB/E,CAAC,GAAC,KAAK4I,WAAvB;AAAA,UAAmC7I,CAAC,GAAC,KAAK6P,OAA1C;AAAA,UAAkD1P,CAAC,GAAC,IAAII,KAAJ,CAAUX,CAAV,EAAakF,IAAb,EAApD;AAAA,UAAwE1E,CAAC,GAAC6D,CAAC,CAAC,CAAD,EAAGpE,CAAC,GAAC,CAAL,CAA3E;AAAA,UAAmFQ,CAAC,GAACJ,CAAC,CAAC2F,UAAF,IAAc/F,CAAC,GAAC,CAAhB,CAArF;AAAwGM,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAKH,CAAC,CAACgB,GAAF,CAAMX,CAAN,CAAL;AAAc,UAAMM,CAAC,GAAC,CAACN,CAAD,CAAR;AAAA,UAAYO,CAAC,GAACd,IAAI,CAACyG,KAAL,CAAW,CAAC1G,CAAC,GAACD,CAAH,IAAMA,CAAjB,CAAd;;AAAkC,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB;AAAC,YAAMD,CAAC,GAACK,CAAC,CAAC4F,MAAF,CAASzF,CAAC,CAAC6L,MAAF,CAAUrM,CAAC,IAAE,CAAC,CAAD,IAAIe,CAAC,CAACyO,OAAF,CAAUxP,CAAV,CAAjB,CAAT,EAAyCgB,CAAzC,CAAR;AAAA,YAAoDP,CAAC,GAAC,KAAKmR,eAAL,CAAqBrR,CAAC,CAACkB,KAAF,CAAQ,CAAR,EAAUxB,CAAV,CAArB,EAAkCD,CAAlC,CAAtD;;AAA2Fe,MAAAA,CAAC,CAACF,IAAF,CAAOJ,CAAP,GAAUF,CAAC,CAACN,CAAD,CAAD,GAAKG,CAAC,CAACgB,GAAF,CAAMX,CAAN,CAAf;AAAwB;;AAAA,WAAOF,CAAP;AAAS;;AAAAsR,EAAAA,UAAU,CAAC7R,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,CAACM,MAAV;AAAA,UAAiBD,CAAC,GAAC,KAAK+E,EAAxB;AAAA,UAA2BhF,CAAC,GAAC,KAAK2I,EAAlC;AAAA,UAAqCxI,CAAC,GAAC,KAAK0P,OAA5C;AAAA,UAAoDzP,CAAC,GAAC,KAAKsH,OAA3D;AAAA,UAAmErH,CAAC,GAAC,KAAKsQ,SAA1E;AAAoF,QAAIhQ,CAAC,GAAC,CAAC,CAAP;;AAAS,SAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACE,CAAC,CAACa,GAAF,CAAMhB,CAAN,CAAR;AAAiB,UAAIY,CAAC,GAAC,IAAE,CAAR;AAAA,UAAUY,CAAC,GAAC,IAAZ;;AAAiB,WAAI,IAAIxB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoB;AAAC,YAAIH,CAAC,GAACO,CAAC,CAACR,CAAC,CAACI,CAAD,CAAF,EAAMC,CAAN,CAAP;AAAgBJ,QAAAA,CAAC,GAACe,CAAF,KAAMA,CAAC,GAACf,CAAF,EAAI2B,CAAC,GAACxB,CAAZ;AAAe;;AAAAK,MAAAA,CAAC,CAACL,CAAD,CAAD,KAAOwB,CAAP,KAAWb,CAAC,GAAC,CAAC,CAAd,GAAiBN,CAAC,CAACL,CAAD,CAAD,GAAKwB,CAAtB;AAAwB;;AAAA,SAAI,IAAIvB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,YAAMJ,CAAC,GAACD,CAAC,CAACK,CAAD,CAAT;;AAAa,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoBC,CAAC,CAACD,CAAD,CAAD,GAAK,CAAL;AAAO;;AAAA,WAAO,KAAK8R,iBAAL,CAAuB9R,CAAvB,GAA0B;AAAC+R,MAAAA,gBAAgB,EAAChR,CAAlB;AAAoBiR,MAAAA,iBAAiB,EAAChS;AAAtC,KAAjC;AAA0E;;AAAA8R,EAAAA,iBAAiB,CAAC9R,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,CAACM,MAAV;AAAA,UAAiBD,CAAC,GAAC,KAAK+E,EAAxB;AAAA,UAA2BhF,CAAC,GAAC,KAAK2I,EAAlC;AAAA,UAAqCxI,CAAC,GAAC,KAAK0P,OAA5C;AAAA,UAAoDzP,CAAC,GAAC,KAAKuQ,SAA3D;AAAA,UAAqEtQ,CAAC,GAAC,IAAIE,KAAJ,CAAUV,CAAV,EAAaiF,IAAb,CAAkB,CAAlB,CAAvE;;AAA4F,SAAI,IAAIjF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoB;AAAC,YAAMI,CAAC,GAACE,CAAC,CAACa,GAAF,CAAMnB,CAAN,CAAR;AAAA,YAAiBc,CAAC,GAACP,CAAC,CAACP,CAAD,CAApB;AAAwBQ,MAAAA,CAAC,CAACM,CAAD,CAAD;AAAO,YAAMC,CAAC,GAAChB,CAAC,CAACe,CAAD,CAAT;;AAAa,WAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgB,EAAEJ,CAAlB,EAAoBgB,CAAC,CAAChB,CAAD,CAAD,IAAMK,CAAC,CAACL,CAAD,CAAP;AAAW;;AAAA,SAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,YAAMJ,CAAC,GAACQ,CAAC,CAACJ,CAAD,CAAT;AAAaL,MAAAA,CAAC,CAACK,CAAD,CAAD,GAAKL,CAAC,CAACK,CAAD,CAAD,CAAKgB,GAAL,CAAUrB,CAAC,IAAEA,CAAC,GAACC,CAAf,CAAL;AAAwB;AAAC;;AAAAyJ,EAAAA,IAAI,CAAC1J,CAAD,EAAGC,CAAH,EAAK;AAACD,IAAAA,CAAC,KAAGA,CAAC,GAAC,KAAKyR,EAAV,CAAD,EAAexR,CAAC,KAAGA,CAAC,GAAC,KAAK0R,qBAAL,CAA2B3R,CAA3B,CAAL,CAAhB;AAAoD,QAAIK,CAAC,GAAC,CAAC,CAAP;;AAAS,OAAE;AAAC,YAAML,CAAC,GAAC,KAAK6R,UAAL,CAAgB5R,CAAhB,CAAR;;AAA2BA,MAAAA,CAAC,GAACD,CAAC,CAACgS,iBAAJ,EAAsB3R,CAAC,GAACL,CAAC,CAAC+R,gBAA1B;AAA2C,KAAzE,QAA+E1R,CAA/E;AAAkF;;AAApsD;;AAAqsD,MAAMkE,CAAN,CAAO;AAAC1C,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAC,GAAC,IAAP,EAAYG,CAAC,GAACP,CAAd,EAAgBQ,CAAC,GAAC,IAAlB,EAAuB;AAAC,SAAKsH,OAAL,GAAavH,CAAb,EAAe,KAAK0P,OAAL,GAAahQ,CAA5B,EAA8B,KAAKgS,EAAL,GAAQ,KAAKhC,OAAL,CAAarM,SAAnD,EAA6D,KAAK6N,EAAL,GAAQpR,CAArE;AAAuE,UAAK,CAACI,CAAD,EAAGM,CAAH,IAAMd,CAAC,CAACgB,KAAb;AAAmB,WAAO,KAAKmE,EAAL,GAAQ3E,CAAR,EAAU,KAAKsI,EAAL,GAAQhI,CAAlB,EAAoB,KAAKmR,SAAL,GAAe9R,CAAC,IAAE,KAAGF,IAAI,CAACiS,KAAL,CAAW1R,CAAX,CAAzC,EAAuD,KAAKqQ,gBAAL,GAAsB,IAAIlP,CAAJ,CAAMnB,CAAN,EAAQA,CAAR,EAAU,OAAV,CAA7E,EAAgGJ,CAAC,GAACI,CAAF,KAAMJ,CAAC,GAACI,CAAR,CAAhG,EAA2G,KAAKwI,WAAL,GAAiB,IAAI9D,CAAJ,CAAM3E,CAAN,CAA5H,EAAqI,KAAKuQ,SAAL,GAAe,IAAIpQ,KAAJ,CAAUF,CAAV,EAAayE,IAAb,CAAkB,KAAK,CAAvB,CAApJ,EAA8K,KAAKkN,gBAAL,GAAsB,KAAKC,mBAAL,CAAyBhS,CAAzB,CAApM,EAAgO,KAAK6I,eAAL,GAAqB,CAAC,CAAtP,EAAwP,IAA/P;AAAoQ;;AAAAmH,EAAAA,YAAY,GAAE;AAAC,UAAMrQ,CAAC,GAAC,KAAKyR,EAAb;AAAA,UAAgBxR,CAAC,GAAC,KAAKgS,EAAvB;AAA0B,SAAK/I,eAAL,IAAsB,KAAKQ,IAAL,CAAU1J,CAAV,EAAY,KAAKoS,gBAAjB,CAAtB;AAAyD,UAAM/R,CAAC,GAAC,IAAIM,KAAJ,CAAUX,CAAV,EAAakF,IAAb,GAAoB7D,GAApB,CAAyB,MAAI,IAAIV,KAAJ,EAA7B,CAAR;AAAiD,WAAOV,CAAC,CAACwK,OAAF,CAAW,CAACzK,CAAD,EAAGC,CAAH,KAAO;AAACI,MAAAA,CAAC,CAAC,KAAKiS,eAAL,CAAqBtS,CAArB,EAAuBC,CAAvB,EAA0BsS,aAA3B,CAAD,CAA2C1R,IAA3C,CAAgDZ,CAAhD;AAAmD,KAAtE,GAAyEI,CAAC,CAACmS,OAAF,GAAU,KAAKJ,gBAAxF,EAAyG/R,CAAhH;AAAkH;;AAAe,SAAToJ,SAAS,GAAE;AAAC,UAAMzJ,CAAC,GAAC,KAAKkS,SAAb;AAAuB,UAAM,KAAK7B,YAAL,EAAN;AAA0B,QAAIpQ,CAAC,GAAC,CAAC,CAAP;AAAA,QAASI,CAAC,GAAC,CAAX;;AAAa,OAAE;AAACJ,MAAAA,CAAC,GAAC,KAAK4R,UAAL,EAAF,EAAoB,MAAM,KAAKxB,YAAL,EAA1B;AAA8C,KAAjD,QAAuD,CAACpQ,CAAD,IAAI,EAAEI,CAAF,GAAIL,CAA/D;AAAkE;;AAAA6R,EAAAA,UAAU,GAAE;AAAC,UAAM7R,CAAC,GAAC,KAAKiS,EAAb;AAAA,UAAgBhS,CAAC,GAAC,KAAKwR,EAAvB;AAAA,UAA0BpR,CAAC,GAAC,KAAK+R,gBAAjC;AAAA,UAAkDhS,CAAC,GAACJ,CAAC,CAACqB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,KAAO,KAAKqS,eAAL,CAAqBtS,CAArB,EAAuBC,CAAvB,CAAd,CAApD;AAAA,UAA8FM,CAAC,GAAC,IAAII,KAAJ,CAAUV,CAAV,EAAaiF,IAAb,CAAkB,CAAlB,CAAhG;AAAA,UAAqH1E,CAAC,GAAC,IAAIG,KAAJ,CAAUV,CAAV,EAAaiF,IAAb,CAAkB,IAAlB,CAAvH;AAA+I,QAAGlF,CAAC,CAACyK,OAAF,CAAW,CAAChK,CAAD,EAAGM,CAAH,KAAO;AAAC,UAAGV,CAAC,CAAC+I,SAAF,CAAapJ,CAAC,IAAEA,CAAC,KAAGe,CAApB,IAAwB,CAA3B,EAA6B;AAAC,cAAMV,CAAC,GAACD,CAAC,CAACW,CAAD,CAAD,CAAK0R,gBAAb;AAAA,cAA8BzR,CAAC,GAAC,IAAIL,KAAJ,CAAUV,CAAV,EAAaiF,IAAb,CAAkB,CAAC7E,CAAnB,CAAhC;AAAsDL,QAAAA,CAAC,CAACyK,OAAF,CAAW,CAACzK,CAAD,EAAGK,CAAH,KAAO;AAAC,cAAGU,CAAC,KAAGV,CAAP,EAAS;;AAAO,gBAAME,CAAC,GAAC,KAAKmS,aAAL,CAAmBrS,CAAnB,EAAqBU,CAArB,EAAuBf,CAAvB,EAAyBS,CAAzB,CAAR;AAAA,gBAAoC;AAAC8R,YAAAA,aAAa,EAAC/R,CAAf;AAAiBiS,YAAAA,gBAAgB,EAAC7Q,CAAlC;AAAoC+Q,YAAAA,eAAe,EAACzR;AAApD,cAAuDd,CAAC,CAACC,CAAD,CAA5F;;AAAgG,cAAGW,CAAC,CAACR,CAAD,CAAD,IAAMN,IAAI,CAAC4D,GAAL,CAASvD,CAAT,EAAWW,CAAX,IAAcU,CAApB,EAAsBrB,CAAC,GAACqB,CAA3B,EAA6B,KAAI,IAAI5B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAd,EAAgB,EAAED,CAAlB,EAAoBA,CAAC,KAAGQ,CAAJ,KAAQQ,CAAC,CAAChB,CAAD,CAAD,IAAMO,CAAC,GAACqB,CAAhB;AAAmB,SAAvM,GAA0MZ,CAAC,CAACK,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,KAAO,CAACD,CAAD,EAAGC,CAAH,CAAd,EAAsBoM,MAAtB,CAA8B,CAAC,CAACrM,CAAD,EAAGC,CAAH,CAAD,KAASD,CAAC,GAACO,CAAC,CAACN,CAAD,CAA1C,EAAgDwK,OAAhD,CAAyD,CAAC,CAACzK,CAAD,EAAGC,CAAH,CAAD,KAAS;AAACD,UAAAA,CAAC,GAACO,CAAC,CAACN,CAAD,CAAH,KAASM,CAAC,CAACN,CAAD,CAAD,GAAKD,CAAL,EAAOQ,CAAC,CAACP,CAAD,CAAD,GAAKc,CAArB;AAAwB,SAA3F,CAA1M;AAAwS;AAAC,KAAhZ,GAAmZb,IAAI,CAAC4D,GAAL,CAAS,GAAGvD,CAAZ,KAAgB,CAAta,EAAwa,OAAM,CAAC,CAAP;;AAAS,WAAKL,IAAI,CAAC4D,GAAL,CAAS,GAAGvD,CAAZ,IAAe,CAApB,GAAuB;AAAC,YAAMN,CAAC,GAACM,CAAC,CAACc,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,KAAO,CAACD,CAAD,EAAGC,CAAH,CAAd,EAAsBuB,IAAtB,CAA4B,CAAC,CAACxB,CAAD,CAAD,EAAK,CAACC,CAAD,CAAL,KAAWD,CAAC,GAACC,CAAzC,EAA6C,CAA7C,EAAgD,CAAhD,CAAR;AAA2D,WAAGI,CAAC,CAACgM,MAAF,CAAUrM,CAAC,IAAEA,CAAC,IAAEQ,CAAC,CAACP,CAAD,CAAjB,EAAuBK,MAA1B,KAAmCD,CAAC,CAACJ,CAAD,CAAD,GAAKO,CAAC,CAACP,CAAD,CAAzC,GAA8CM,CAAC,CAACN,CAAD,CAAD,GAAK,CAAnD,EAAqDM,CAAC,CAACc,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,KAAO,CAACD,CAAD,EAAGC,CAAH,CAAd,EAAsBoM,MAAtB,CAA8B,CAAC,CAACrM,CAAD,CAAD,KAAOA,CAAC,GAAC,CAAvC,EAA2CyK,OAA3C,CAAoD,CAAC,CAACjK,CAAD,EAAGC,CAAH,CAAD,KAAS;AAAC,cAAMM,CAAC,GAACf,CAAC,CAACS,CAAD,CAAT;AAAa,YAAIO,CAAC,GAAC,CAAN;AAAQhB,QAAAA,CAAC,CAACyK,OAAF,CAAW,CAACzK,CAAD,EAAGO,CAAH,KAAO;AAACF,UAAAA,CAAC,CAAC+I,SAAF,CAAapJ,CAAC,IAAEA,CAAC,IAAES,CAAH,IAAMT,CAAC,IAAEO,CAAzB,KAA8B,CAA9B,IAAiCN,CAAC,IAAEQ,CAAH,KAAOL,CAAC,CAACG,CAAD,CAAD,CAAKgS,aAAL,KAAqBlS,CAAC,CAACI,CAAD,CAAtB,GAA0BO,CAAC,IAAEd,IAAI,CAAC4D,GAAL,CAAS,KAAK4O,aAAL,CAAmBnS,CAAnB,EAAqBE,CAArB,EAAuBT,CAAvB,EAAyBe,CAAzB,CAAT,EAAqCX,CAAC,CAACG,CAAD,CAAD,CAAKoS,eAA1C,IAA2DvS,CAAC,CAACG,CAAD,CAAD,CAAKkS,gBAA7F,GAA8GzR,CAAC,IAAEd,IAAI,CAAC4D,GAAL,CAAS,KAAK4O,aAAL,CAAmBnS,CAAnB,EAAqBE,CAArB,EAAuBT,CAAvB,EAAyBe,CAAzB,IAA4BX,CAAC,CAACG,CAAD,CAAD,CAAKkS,gBAA1C,EAA2D,CAA3D,CAAxH,CAAjC;AAAwN,SAA3O,GAA8OlS,CAAC,CAACE,CAAD,CAAD,GAAKO,CAAnP;AAAqP,OAAxU,CAArD;AAAgY;;AAAA,WAAO,KAAKoR,gBAAL,GAAsB/R,CAAtB,EAAwB,CAAC,CAAhC;AAAkC;;AAAAqS,EAAAA,aAAa,CAAC1S,CAAD,EAAGC,CAAH,EAAKI,CAAC,GAAC,IAAP,EAAYD,CAAC,GAAC,IAAd,EAAmB;AAAC,QAAGJ,CAAC,KAAGC,CAAP,EAAS,OAAO,CAAP;AAAS,UAAMM,CAAC,GAAC,KAAKuQ,gBAAb;AAAA,UAA8BtQ,CAAC,GAAC,KAAKyR,EAArC;AAAA,UAAwCxR,CAAC,GAAC,KAAKqH,OAA/C;AAAuD,QAAI/G,CAAC,GAACR,CAAC,CAACiC,KAAF,CAAQxC,CAAR,EAAUC,CAAV,CAAN;AAAmB,WAAO,MAAIc,CAAJ,KAAQA,CAAC,GAACN,CAAC,CAACJ,CAAC,IAAEG,CAAC,CAACR,CAAD,CAAL,EAASI,CAAC,IAAEI,CAAC,CAACP,CAAD,CAAb,CAAH,EAAqBM,CAAC,CAACkC,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBc,CAAhB,CAArB,EAAwCR,CAAC,CAACkC,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgBe,CAAhB,CAAhD,GAAoEA,CAA3E;AAA6E;;AAAAuR,EAAAA,eAAe,CAACtS,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAK+R,gBAAb;AAAA,UAA8BhS,CAAC,GAAC,KAAK6R,EAArC;AAAA,UAAwC,CAAC1R,CAAD,EAAGC,CAAH,IAAMH,CAAC,CAACgB,GAAF,CAAO,CAAChB,CAAD,EAAGE,CAAH,KAAO;AAAC,YAAMC,CAAC,GAACJ,CAAC,CAACC,CAAD,CAAT;AAAa,aAAM,CAAC,KAAKqS,aAAL,CAAmBzS,CAAnB,EAAqBI,CAArB,EAAuBL,CAAvB,EAAyBQ,CAAzB,CAAD,EAA6BD,CAA7B,CAAN;AAAsC,KAAlE,EAAqEiB,IAArE,CAA2E,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAAxF,CAA9C;AAA4I,WAAM;AAACwS,MAAAA,gBAAgB,EAAClS,CAAC,CAAC,CAAD,CAAnB;AAAuBgS,MAAAA,aAAa,EAAChS,CAAC,CAAC,CAAD,CAAtC;AAA0CoS,MAAAA,eAAe,EAACnS,CAAC,CAAC,CAAD,CAA3D;AAA+DoS,MAAAA,YAAY,EAACpS,CAAC,CAAC,CAAD;AAA7E,KAAN;AAAwF;;AAAAkJ,EAAAA,IAAI,CAAC1J,CAAD,EAAGC,CAAH,EAAK;AAACD,IAAAA,CAAC,KAAGA,CAAC,GAAC,KAAKyR,EAAV,CAAD,EAAexR,CAAC,KAAGA,CAAC,GAAC,KAAKoS,mBAAL,CAAyBrS,CAAzB,CAAL,CAAhB;AAAkD,UAAMK,CAAC,GAAC,KAAK6R,SAAb;AAAuB,QAAI9R,CAAC,GAAC,CAAC,CAAP;AAAA,QAASG,CAAC,GAAC,CAAX;;AAAa,OAAE;AAACH,MAAAA,CAAC,GAAC,KAAKyR,UAAL,EAAF;AAAoB,KAAvB,QAA6B,CAACzR,CAAD,IAAI,EAAEG,CAAF,GAAIF,CAArC;;AAAwC,WAAO,IAAP;AAAY;;AAAAgS,EAAAA,mBAAmB,CAACrS,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKmF,EAAb;AAAA,UAAgB/E,CAAC,GAAC,KAAK4R,EAAvB;AAAA,UAA0B7R,CAAC,GAACiE,CAAC,CAAC,CAAD,EAAGpE,CAAC,GAAC,CAAL,CAA7B;AAAA,UAAqCM,CAAC,GAAC,KAAK0I,WAA5C;AAAA,UAAwDzI,CAAC,GAACN,IAAI,CAAC4D,GAAL,CAAS7D,CAAT,EAAW,KAAGC,IAAI,CAAC2S,IAAL,CAAU3S,IAAI,CAACC,IAAL,CAAUF,CAAV,CAAV,CAAd,CAA1D;AAAA,UAAiGQ,CAAC,GAAC,IAAIE,KAAJ,CAAUH,CAAV,EAAa0E,IAAb,CAAkB,IAAE,CAApB,CAAnG;AAAA,UAA0HnE,CAAC,GAAC,EAA5H;;AAA+H,QAAIC,CAAC,GAAC,IAAE,CAAR;AAAA,QAAUY,CAAC,GAACrB,CAAC,CAAC0F,MAAF,CAAS7F,CAAT,EAAWI,CAAX,CAAZ;;AAA0B,SAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAAC2B,CAAC,CAAC5B,CAAD,CAAT;AAAA,YAAaI,CAAC,GAACC,CAAC,CAACJ,CAAD,CAAhB;;AAAoB,WAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB;AAAC,YAAGA,CAAC,KAAGD,CAAP,EAAS;AAAS,cAAMO,CAAC,GAACF,CAAC,CAACuB,CAAC,CAAC3B,CAAD,CAAF,CAAT;AAAgBQ,QAAAA,CAAC,CAACT,CAAD,CAAD,IAAM,KAAK0S,aAAL,CAAmB1S,CAAnB,EAAqBC,CAArB,EAAuBG,CAAvB,EAAyBG,CAAzB,CAAN;AAAkC;;AAAAE,MAAAA,CAAC,CAACT,CAAD,CAAD,GAAKgB,CAAL,KAASA,CAAC,GAACP,CAAC,CAACT,CAAD,CAAH,EAAOe,CAAC,CAACF,IAAF,CAAOZ,CAAP,CAAhB;AAA2B;;AAAA,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoB;AAAC,UAAID,CAAC,GAAC,IAAE,CAAR;AAAU4B,MAAAA,CAAC,GAACrB,CAAC,CAAC0F,MAAF,CAAS7F,CAAC,CAACiM,MAAF,CAAUrM,CAAC,IAAEe,CAAC,CAACqI,SAAF,CAAanJ,CAAC,IAAEA,CAAC,KAAGD,CAApB,IAAwB,CAArC,CAAT,EAAkDQ,CAAlD,CAAF;;AAAuD,WAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,CAAd,EAAgB,EAAEP,CAAlB,EAAoB;AAAC,YAAIG,CAAC,GAAC,CAAN;AAAQ,cAAMG,CAAC,GAACqB,CAAC,CAAC3B,CAAD,CAAT;AAAA,cAAaQ,CAAC,GAACJ,CAAC,CAACE,CAAD,CAAhB;;AAAoB,aAAI,IAAIP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,CAAd,EAAgB,EAAER,CAAlB,EAAoB;AAAC,cAAGA,CAAC,KAAGC,CAAP,EAAS;AAAS,gBAAMO,CAAC,GAACoB,CAAC,CAAC5B,CAAD,CAAT;AAAA,gBAAagB,CAAC,GAACX,CAAC,CAACG,CAAD,CAAhB;AAAoB,cAAIU,CAAC,GAAC,KAAKwR,aAAL,CAAmBnS,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,EAAyBO,CAAzB,IAA4Bd,IAAI,CAAC4D,GAAL,CAAS,GAAG/C,CAAC,CAACM,GAAF,CAAOrB,CAAC,IAAE,KAAK0S,aAAL,CAAmBlS,CAAnB,EAAqBR,CAArB,EAAuBgB,CAAvB,CAAV,CAAZ,CAAlC;AAAqFE,UAAAA,CAAC,GAAC,CAAF,KAAMd,CAAC,IAAEc,CAAT;AAAY;;AAAAd,QAAAA,CAAC,GAACJ,CAAF,KAAMA,CAAC,GAACI,CAAF,EAAIW,CAAC,CAACF,IAAF,CAAON,CAAP,CAAV;AAAqB;;AAAAS,MAAAA,CAAC,IAAEhB,CAAH;AAAK;;AAAA,WAAOe,CAAC,CAACU,KAAF,CAAQ,CAAR,EAAUzB,CAAV,CAAP;AAAoB;;AAAhlG;;AAAilG,MAAM2C,CAAN,CAAO;AAACd,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAL,EAAOG,CAAC,GAACP,CAAT,EAAW;AAAC,WAAO,KAAKiQ,OAAL,GAAahQ,CAAb,EAAe,KAAKsL,QAAL,GAAclL,CAA7B,EAA+B,KAAKyS,WAAL,GAAiB1S,CAAhD,EAAkD,KAAK0H,OAAL,GAAavH,CAA/D,EAAiE,KAAKwS,aAAL,GAAmB,EAApF,EAAuF,KAAKhC,SAAL,GAAe,EAAtG,EAAyG,KAAKiC,GAAL,GAAS,IAAIrS,KAAJ,CAAUV,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAAV,EAAsBiE,IAAtB,EAAlH,EAA+I,KAAKwE,IAAL,EAA/I,EAA2J,IAAlK;AAAuK;;AAAAA,EAAAA,IAAI,GAAE;AAAC,UAAM1J,CAAC,GAAC,KAAK+S,aAAb;AAAA,UAA2B9S,CAAC,GAAC,KAAKgQ,OAAlC;AAAA,UAA0C5P,CAAC,GAACJ,CAAC,CAACgB,KAAF,CAAQ,CAAR,CAA5C;AAAA,UAAuDb,CAAC,GAAC,KAAK4S,GAA9D;AAAA,UAAkEzS,CAAC,GAAC,KAAKwQ,SAAzE;AAAmF,QAAIvQ,CAAC,GAAC,KAAKyS,cAAL,GAAoB,CAA1B;;AAA4B,SAAI,IAAIjT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoBI,CAAC,CAACJ,CAAD,CAAD,GAAK;AAACyG,MAAAA,OAAO,EAACxG,CAAC,CAACmB,GAAF,CAAMpB,CAAN,CAAT;AAAkB+H,MAAAA,KAAK,EAAC/H,CAAxB;AAA0BkT,MAAAA,qBAAqB,EAAC,KAAK,CAArD;AAAuDC,MAAAA,SAAS,EAAC,CAAC;AAAlE,KAAL;;AAA0E,SAAI,MAAMlT,CAAV,IAAeG,CAAf,EAAiB,IAAG,CAACH,CAAC,CAACkT,SAAH,KAAelT,CAAC,CAACmT,SAAF,GAAY,KAAKC,cAAL,CAAoBpT,CAApB,CAAZ,EAAmCA,CAAC,CAACkT,SAAF,GAAY,CAAC,CAAhD,EAAkD5S,CAAC,CAACM,IAAF,CAAO,CAACZ,CAAC,CAAC8H,KAAH,CAAP,CAAlD,EAAoEvH,CAAC,GAACD,CAAC,CAACD,MAAF,GAAS,CAA/E,EAAiFN,CAAC,CAACa,IAAF,CAAOZ,CAAP,CAAjF,EAA2F,QAAM,KAAKqT,cAAL,CAAoBrT,CAApB,CAAhH,CAAH,EAA2I;AAAC,YAAMD,CAAC,GAAC,IAAIoG,CAAJ,CAAM,IAAN,EAAYpG,CAAC,IAAEA,CAAC,CAACkT,qBAAjB,EAAwC,KAAxC,CAAR;AAAuD,WAAKK,OAAL,CAAatT,CAAb,EAAeD,CAAf,GAAkB,KAAKwT,eAAL,CAAqBxT,CAArB,EAAuBO,CAAC,CAACC,CAAD,CAAxB,CAAlB;AAA+C;;AAAA,WAAO,IAAP;AAAY;;AAAA6S,EAAAA,cAAc,CAACrT,CAAD,EAAG;AAAC,QAAG,eAAcA,CAAjB,EAAmB,OAAOA,CAAC,CAACoT,SAAT;AAAmB,UAAMnT,CAAC,GAAC,KAAK+S,GAAb;AAAA,UAAiB3S,CAAC,GAAC,KAAKyH,OAAxB;AAAA,UAAgC1H,CAAC,GAAC,KAAKmL,QAAvC;AAAA,UAAgDhL,CAAC,GAAC,EAAlD;;AAAqD,SAAI,MAAMC,CAAV,IAAeP,CAAf,EAAiBO,CAAC,CAACuH,KAAF,IAAS/H,CAAC,CAAC+H,KAAX,IAAkB1H,CAAC,CAACL,CAAC,CAACyG,OAAH,EAAWjG,CAAC,CAACiG,OAAb,CAAD,GAAuBrG,CAAzC,IAA4CG,CAAC,CAACM,IAAF,CAAOL,CAAP,CAA5C;;AAAsD,WAAOD,CAAP;AAAS;;AAAA+S,EAAAA,cAAc,CAACtT,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK6S,WAAb;AAAA,UAAyBzS,CAAC,GAAC,KAAKyH,OAAhC;AAAwC,QAAG,EAAE9H,CAAC,CAACoT,SAAF,IAAapT,CAAC,CAACoT,SAAF,CAAY9S,MAAZ,IAAoBL,CAAnC,CAAH,EAAyC,OAAOI,CAAC,CAACL,CAAC,CAACyG,OAAH,EAAWzG,CAAC,CAACoT,SAAF,CAAYnT,CAAZ,EAAewG,OAA1B,CAAR;AAA2C;;AAAA8M,EAAAA,OAAO,CAACvT,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAKyH,OAAb;AAAA,UAAqB1H,CAAC,GAAC,KAAKkT,cAAL,CAAoBtT,CAApB,CAAvB;AAAA,UAA8CO,CAAC,GAAC,KAAK8S,cAAL,CAAoBrT,CAApB,CAAhD;;AAAuE,SAAI,MAAMQ,CAAV,IAAeD,CAAf,EAAiB;AAAC,UAAGC,CAAC,CAAC2S,SAAL,EAAe;AAAS,YAAM5S,CAAC,GAACL,IAAI,CAACY,GAAL,CAASV,CAAT,EAAWC,CAAC,CAACL,CAAC,CAACyG,OAAH,EAAWjG,CAAC,CAACiG,OAAb,CAAZ,CAAR;AAA2CxG,MAAAA,CAAC,CAACmH,QAAF,GAAagC,SAAb,CAAwBpJ,CAAC,IAAEA,CAAC,CAACyG,OAAF,IAAWjG,CAAtC,IAA0C,CAA1C,IAA6CA,CAAC,CAAC0S,qBAAF,GAAwB3S,CAAxB,EAA0BN,CAAC,CAACY,IAAF,CAAOL,CAAP,CAAvE,IAAkFD,CAAC,GAACC,CAAC,CAAC0S,qBAAJ,KAA4B1S,CAAC,CAAC0S,qBAAF,GAAwB3S,CAAxB,EAA0BN,CAAC,GAACmG,CAAC,CAACC,OAAF,CAAUpG,CAAC,CAACkH,IAAF,EAAV,EAAoBnH,CAAC,IAAEA,CAAC,CAACkT,qBAAzB,EAAgD,KAAhD,CAAxD,CAAlF;AAAkM;AAAC;;AAAAM,EAAAA,eAAe,CAACxT,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMI,CAAC,GAAC,KAAK0S,aAAb;;AAA2B,WAAK,CAAC/S,CAAC,CAACqH,KAAR,GAAe;AAAC,YAAMjH,CAAC,GAACJ,CAAC,CAAC+G,GAAF,GAAQN,OAAhB;AAAwBrG,MAAAA,CAAC,CAACgT,SAAF,GAAY,KAAKC,cAAL,CAAoBjT,CAApB,CAAZ,EAAmCA,CAAC,CAAC+S,SAAF,GAAY,CAAC,CAAhD,EAAkDlT,CAAC,CAACY,IAAF,CAAOT,CAAC,CAAC2H,KAAT,CAAlD,EAAkE1H,CAAC,CAACQ,IAAF,CAAOT,CAAP,CAAlE,EAA4E,QAAM,KAAKkT,cAAL,CAAoBlT,CAApB,CAAN,KAA+B,KAAKmT,OAAL,CAAanT,CAAb,EAAeJ,CAAf,GAAkB,KAAKwT,eAAL,CAAqBxT,CAArB,EAAuBC,CAAvB,CAAjD,CAA5E;AAAwJ;AAAC;;AAAAoQ,EAAAA,YAAY,GAAE;AAAC,UAAMrQ,CAAC,GAAC,EAAR;AAAA,UAAWC,CAAC,GAAC,EAAb;AAAA,UAAgBI,CAAC,GAAC,KAAKyS,WAAvB;;AAAmC,SAAI,MAAM1S,CAAV,IAAe,KAAK2Q,SAApB,EAA8B3Q,CAAC,CAACE,MAAF,GAASD,CAAT,GAAWJ,CAAC,CAACY,IAAF,CAAO,GAAGT,CAAV,CAAX,GAAwBJ,CAAC,CAACa,IAAF,CAAOT,CAAP,CAAxB;;AAAkC,WAAOJ,CAAC,CAACa,IAAF,CAAOZ,CAAP,GAAUD,CAAjB;AAAmB;;AAAAyT,EAAAA,uBAAuB,GAAE;AAAC,UAAMzT,CAAC,GAAC,KAAKiQ,OAAL,CAAahP,KAAb,CAAmB,CAAnB,CAAR;AAAA,UAA8BhB,CAAC,GAAC,IAAIU,KAAJ,CAAUX,CAAV,EAAakF,IAAb,EAAhC;AAAA,UAAoD7E,CAAC,GAAC,KAAKgQ,YAAL,EAAtD;;AAA0E,SAAI,IAAIrQ,CAAC,GAAC,CAAN,EAAQI,CAAC,GAACC,CAAC,CAACC,MAAhB,EAAuBN,CAAC,GAACI,CAAzB,EAA2B,EAAEJ,CAA7B,EAA+B;AAAC,YAAMO,CAAC,GAACF,CAAC,CAACL,CAAD,CAAT;;AAAa,WAAI,MAAMK,CAAV,IAAeE,CAAf,EAAiBN,CAAC,CAACI,CAAD,CAAD,GAAKL,CAAC,GAACI,CAAC,GAAC,CAAJ,GAAMJ,CAAN,GAAQ,CAAC,CAAd;AAAgB;;AAAA,WAAOC,CAAP;AAAS;;AAA14D;;AAA24D,MAAMyT,CAAN,SAAgBhL,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAH,EAAKD,CAAL,EAAOG,CAAC,GAAC,CAAT,EAAWC,CAAC,GAACR,CAAb,EAAeS,CAAC,GAAC,IAAjB,EAAsB;AAAC,WAAO,MAAMR,CAAN,EAAQM,CAAR,EAAUC,CAAV,EAAYC,CAAZ,GAAe,MAAMkI,cAAN,GAAqB,CAAC,GAAD,EAAK,gBAAL,CAApC,EAA2D,KAAKQ,SAAL,CAAe,GAAf,EAAmBjJ,IAAI,CAAC4D,GAAL,CAASzD,CAAT,aAASA,CAAT,cAASA,CAAT,GAAYH,IAAI,CAACY,GAAL,CAASZ,IAAI,CAACyG,KAAL,CAAW,KAAKvB,EAAL,GAAQ,EAAnB,CAAT,EAAgC,CAAhC,CAAZ,EAA+C,KAAKA,EAAL,GAAQ,CAAvD,CAAnB,CAA3D,EAAyI,KAAK+D,SAAL,CAAe,gBAAf,EAAgCjJ,IAAI,CAAC4D,GAAL,CAAS1D,CAAT,aAASA,CAAT,cAASA,CAAT,GAAYF,IAAI,CAAC2S,IAAL,CAAU3S,IAAI,CAACC,IAAL,CAAU,KAAKiF,EAAf,CAAV,CAAZ,EAA0C,KAAKA,EAAL,GAAQ,CAAlD,CAAhC,CAAzI,EAA+N,KAAK8D,eAAL,GAAqB,CAAC,CAArP,EAAuP,IAA9P;AAAmQ;;AAAAQ,EAAAA,IAAI,CAAC1J,CAAC,GAAC8J,CAAH,EAAK7J,CAAC,GAAC,EAAP,EAAUI,CAAC,GAACiH,CAAZ,EAAc;AAAC,QAAG,KAAK4B,eAAR,EAAwB,OAAO,IAAP;AAAY,UAAM9I,CAAC,GAAC,KAAK0I,CAAb;AAAA,UAAevI,CAAC,GAAC,KAAK6E,EAAtB;AAAA,UAAyB5E,CAAC,GAAC,KAAK2I,SAAL,CAAe,GAAf,CAA3B;AAAA,UAA+C1I,CAAC,GAAC,KAAKuI,EAAtD;AAAA,UAAyDjI,CAAC,GAAC,KAAK+G,OAAhE;AAAA,UAAwE9G,CAAC,GAAC,KAAKmI,SAAL,CAAe,gBAAf,CAA1E;AAAA,UAA2GjI,CAAC,GAAC,IAAIqD,CAAJ,CAAMnE,CAAN,EAAQY,CAAR,EAAU,IAAV,EAAeD,CAAf,EAAkBsP,YAAlB,GAAiCmC,OAA9I;AAAA,UAAsJnO,CAAC,GAAC,IAAIzC,CAAJ,CAAMZ,CAAN,EAAQT,CAAR,EAAU,OAAV,CAAxJ;AAA2KW,IAAAA,CAAC,CAACuJ,OAAF,CAAW,CAACzK,CAAD,EAAGC,CAAH,KAAO;AAACoE,MAAAA,CAAC,CAAC5B,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgB,CAAhB;AAAmB,KAAtC;AAAyC,UAAMiF,CAAC,GAAC,IAAIjF,CAAJ,CAAM4B,CAAC,CAACT,IAAF,CAAOD,CAAC,CAACG,GAAF,CAAOrB,CAAC,IAAEI,CAAC,CAACgB,GAAF,CAAMpB,CAAN,CAAV,CAAP,CAAN,EAAmC,GAAGC,CAAtC,EAAwCQ,CAAxC,EAA2C6I,SAA3C,EAAR;AAAA,UAA+DnE,CAAC,GAAC/E,CAAC,CAACwD,SAAnE;AAAA,UAA6EuC,CAAC,GAAC,IAAI9F,CAAJ,CAAM8E,CAAN,EAAQpE,CAAR,CAA/E;AAAA,UAA0FqF,CAAC,GAAC,IAAIxE,CAAJ,CAAMrB,CAAN,EAAQA,CAAR,EAAU,GAAV,CAA5F;AAAA,UAA2G+H,CAAC,GAAC,CAAC,CAAD,GAAG9H,CAAhH;AAAkH2E,IAAAA,CAAC,CAACsF,OAAF,CAAW,CAACzK,CAAD,EAAGC,CAAH,KAAO;AAAC,WAAI,MAAK;AAAC8H,QAAAA,KAAK,EAAC1H;AAAP,OAAT,IAAqB8F,CAAC,CAACiC,MAAF,CAASpI,CAAT,EAAWQ,CAAX,EAAcyG,OAAd,EAArB,EAA6ChH,CAAC,KAAGI,CAAJ,IAAO+F,CAAC,CAAC3D,SAAF,CAAYxC,CAAZ,EAAcI,CAAd,EAAgBiI,CAAhB,CAAP;AAA0B,KAA1F;AAA6F,UAAMG,CAAC,GAACrC,CAAC,CAACpD,MAAF,CAASqB,CAAT,EAAW,UAAX,CAAR;AAAA,UAA+BqE,CAAC,GAAC,IAAI9G,CAAJ,CAAMrB,CAAN,EAAQE,CAAR,EAAU,OAAV,EAAmBuC,MAAnB,CAA0BiC,CAA1B,EAA4B,UAA5B,CAAjC;AAAyE,WAAO,KAAKgN,EAAL,GAAQxJ,CAAR,EAAU,KAAKwE,EAAL,GAAQvE,CAAlB,EAAoB,KAAKQ,eAAL,GAAqB,CAAC,CAA1C,EAA4C,IAAnD;AAAwD;;AAAAI,EAAAA,SAAS,GAAE;AAAC,SAAKC,UAAL;AAAkB,UAAMvJ,CAAC,GAAC,KAAKiS,EAAb;AAAA,UAAgBhS,CAAC,GAACD,CAAC,CAAC2C,CAApB;AAAA,UAAsBtC,CAAC,GAAC,KAAK4M,EAA7B;AAAA,UAAgC7M,CAAC,GAACH,CAAC,CAAC4C,GAAF,CAAM7C,CAAN,CAAlC;AAAA,UAA2CO,CAAC,GAACN,CAAC,CAAC4C,GAAF,CAAMxC,CAAN,CAA7C;AAAsD,WAAO,KAAKmJ,CAAL,GAAO5H,CAAC,CAACuC,QAAF,CAAW/D,CAAX,EAAaG,CAAb,EAAe,KAAK0I,WAApB,CAAP,EAAwC,KAAKU,UAApD;AAA+D;;AAAphC;;AAAqhC,MAAMgK,CAAN,SAAgBjL,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,EAAD,EAAGI,GAAC,GAAC,CAAL,EAAOD,GAAC,GAACJ,CAAT,EAAWO,EAAC,GAAC,IAAb,EAAkB;AAAA;;AAAC,WAAO,eAAMN,EAAN,EAAQI,GAAR,EAAUD,GAAV,EAAYG,EAAZ,QAAw3DqT,kBAAx3D,GAA24D,CAAC5T,CAAD,EAAGC,CAAH,EAAKI,CAAL,KAAS;AAAC,YAAMD,CAAC,GAAC,CAAC,GAAGJ,CAAC,CAAC6T,cAAF,CAAiBC,QAArB,CAAR;AAAA,YAAuCvT,CAAC,GAAC,CAAC,GAAGN,CAAC,CAAC4T,cAAF,CAAiBC,QAArB,CAAzC;AAAA,YAAwEtT,CAAC,GAAC,KAAKuT,MAAL,CAAY3T,CAAZ,CAA1E;AAAA,YAAyFK,CAAC,GAAC,KAAKsT,MAAL,CAAYxT,CAAZ,CAA3F;AAAA,YAA0GQ,CAAC,GAAC,KAAKiT,YAAL,CAAkBxT,CAAlB,EAAoBR,CAApB,EAAsB,CAAC,CAAvB,CAA5G;AAAA,YAAsIgB,CAAC,GAAC,KAAKgT,YAAL,CAAkBvT,CAAlB,EAAoBR,CAApB,EAAsB,CAAC,CAAvB,CAAxI;;AAAkK,WAAKgU,qBAAL,CAA2B7T,CAA3B,EAA6BW,CAA7B,EAA+B,CAA/B,GAAkC,KAAKkT,qBAAL,CAA2B1T,CAA3B,EAA6BS,CAA7B,EAA+BX,CAA/B,CAAlC;AAAoE,KAA3nE,UAAe,MAAMsI,cAAN,GAAqB,EAApC,EAAuC,CAAC,KAAKvD,EAAN,EAAS,KAAK2D,EAAd,IAAkB,KAAKD,CAAL,CAAO7H,KAAhE,EAAsE,KAAK6P,gBAAL,GAAsB,IAAIlP,CAAJ,CAAM,KAAKwD,EAAX,EAAc,KAAKA,EAAnB,EAAsB,CAAtB,CAA5F,EAAqH,IAA5H;AAAiI;;AAAA8O,EAAAA,sBAAsB,CAAClU,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAMD,CAAC,GAAC,KAAK0Q,gBAAb;AAAA,UAA8BvQ,CAAC,GAAC,KAAKuI,CAArC;AAAA,UAAuCtI,CAAC,GAACJ,CAAC,CAACoC,KAAF,CAAQxC,CAAR,EAAUC,CAAV,CAAzC;;AAAsD,QAAG,MAAIO,CAAP,EAAS;AAAC,UAAIA,CAAC,GAACH,CAAC,CAACE,CAAC,CAACa,GAAF,CAAMpB,CAAN,CAAD,EAAUO,CAAC,CAACa,GAAF,CAAMnB,CAAN,CAAV,CAAP;AAA2B,aAAOG,CAAC,CAACqC,SAAF,CAAYzC,CAAZ,EAAcC,CAAd,EAAgBO,CAAhB,GAAmBJ,CAAC,CAACqC,SAAF,CAAYxC,CAAZ,EAAcD,CAAd,EAAgBQ,CAAhB,CAAnB,EAAsCA,CAA7C;AAA+C;;AAAA,WAAOA,CAAP;AAAS;;AAAA2T,EAAAA,2BAA2B,CAAClU,CAAC,GAACD,CAAH,EAAK;AAAC,UAAMK,CAAC,GAAC,KAAK+E,EAAb;AAAA,UAAgBhF,CAAC,GAAC,CAAC,GAAG,KAAK0I,CAAT,CAAlB;AAA8B,QAAIvI,CAAC,GAAC,IAAI6T,CAAJ,CAAMhU,CAAN,CAAN;AAAe,UAAMI,CAAC,GAAC,EAAR;AAAW,QAAIC,CAAC,GAAC,EAAN;;AAAS,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB,KAAI,IAAII,CAAC,GAACJ,CAAC,GAAC,CAAZ,EAAcI,CAAC,GAACC,CAAhB,EAAkB,EAAED,CAApB,EAAsBK,CAAC,CAACI,IAAF,CAAO,CAACb,CAAD,EAAGI,CAAH,EAAK,KAAK8T,sBAAL,CAA4BlU,CAA5B,EAA8BI,CAA9B,EAAgCH,CAAhC,CAAL,CAAP;;AAAiDQ,IAAAA,CAAC,GAACA,CAAC,CAACe,IAAF,CAAQ,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAArB,CAAF;;AAA6B,SAAI,MAAK,CAACD,CAAD,EAAGC,CAAH,EAAKI,CAAL,CAAT,IAAmBI,CAAnB,EAAqB;AAAC,YAAMA,CAAC,GAACF,CAAC,CAAC6J,IAAF,CAAOhK,CAAC,CAACJ,CAAD,CAAR,CAAR;AAAA,YAAqBe,CAAC,GAACR,CAAC,CAAC6J,IAAF,CAAOhK,CAAC,CAACH,CAAD,CAAR,CAAvB;AAAoCQ,MAAAA,CAAC,KAAGM,CAAJ,KAAQP,CAAC,CAACK,IAAF,CAAO,CAACb,CAAD,EAAGC,CAAH,EAAKI,CAAL,CAAP,GAAgBE,CAAC,CAAC8T,KAAF,CAAQ5T,CAAR,EAAUM,CAAV,CAAxB;AAAsC;;AAAA,WAAOP,CAAC,CAACgB,IAAF,CAAQ,CAACxB,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAAC,CAAD,CAAD,GAAKC,CAAC,CAAC,CAAD,CAArB,CAAP;AAAkC;;AAAAyJ,EAAAA,IAAI,GAAE;AAAC,WAAO,KAAKF,CAAL,GAAO,IAAI5H,CAAJ,CAAM,KAAKwD,EAAX,EAAc,KAAK4D,EAAnB,EAAsB,CAAtB,CAAP,EAAgC,KAAKsL,KAAL,GAAW,KAAKH,2BAAL,CAAiC,KAAKrM,OAAtC,CAA3C,EAA0F,KAAKoB,eAAL,GAAqB,CAAC,CAAhH,EAAkH,IAAzH;AAA8H;;AAAAqL,EAAAA,YAAY,CAAC,CAACvU,CAAD,EAAGC,CAAH,CAAD,EAAO,CAACI,CAAD,EAAGD,CAAH,CAAP,EAAa,CAACG,CAAD,EAAGC,CAAH,CAAb,EAAmB;AAAC,WAAM,CAACH,CAAC,GAACL,CAAH,KAAOQ,CAAC,GAACP,CAAT,IAAY,CAACG,CAAC,GAACH,CAAH,KAAOM,CAAC,GAACP,CAAT,CAAZ,IAAyB,CAA/B;AAAiC;;AAAA+T,EAAAA,MAAM,CAAC/T,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,CAACwB,IAAF,CAAQ,CAAC,CAACxB,CAAD,EAAGC,CAAH,CAAD,EAAO,CAACI,CAAD,EAAGD,CAAH,CAAP,KAAeH,CAAC,GAACG,CAAF,IAAKJ,CAAC,GAACK,CAA9B,CAAR;AAAA,UAA0CA,CAAC,GAACJ,CAAC,CAACK,MAA9C;AAAqD,QAAGD,CAAC,IAAE,CAAN,EAAQ,OAAOJ,CAAP;AAAS,UAAMG,CAAC,GAAC,EAAR;;AAAW,SAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,aAAKI,CAAC,CAACE,MAAF,IAAU,CAAV,IAAa,KAAKiU,YAAL,CAAkBnU,CAAC,CAACA,CAAC,CAACE,MAAF,GAAS,CAAV,CAAnB,EAAgCF,CAAC,CAACA,CAAC,CAACE,MAAF,GAAS,CAAV,CAAjC,EAA8CL,CAAC,CAACD,CAAD,CAA/C,CAAlB,GAAuEI,CAAC,CAAC2G,GAAF;;AAAQ3G,MAAAA,CAAC,CAACS,IAAF,CAAOZ,CAAC,CAACD,CAAD,CAAR;AAAa;;AAAA,UAAMO,CAAC,GAAC,EAAR;;AAAW,SAAI,IAAIP,CAAC,GAACK,CAAC,GAAC,CAAZ,EAAcL,CAAC,IAAE,CAAjB,EAAmB,EAAEA,CAArB,EAAuB;AAAC,aAAKO,CAAC,CAACD,MAAF,IAAU,CAAV,IAAa,KAAKiU,YAAL,CAAkBhU,CAAC,CAACA,CAAC,CAACD,MAAF,GAAS,CAAV,CAAnB,EAAgCC,CAAC,CAACA,CAAC,CAACD,MAAF,GAAS,CAAV,CAAjC,EAA8CL,CAAC,CAACD,CAAD,CAA/C,CAAlB,GAAuEO,CAAC,CAACwG,GAAF;;AAAQxG,MAAAA,CAAC,CAACM,IAAF,CAAOZ,CAAC,CAACD,CAAD,CAAR;AAAa;;AAAA,WAAOO,CAAC,CAACwG,GAAF,IAAQ3G,CAAC,CAAC2G,GAAF,EAAR,EAAgB3G,CAAC,CAAC4C,MAAF,CAASzC,CAAT,CAAvB;AAAmC;;AAAAiU,EAAAA,WAAW,CAAC,CAACvU,CAAD,EAAGI,CAAH,CAAD,EAAO,CAACD,CAAD,EAAGG,CAAH,CAAP,EAAa;AAAC,UAAMC,CAAC,GAACR,CAAC,CAAC,CAACC,CAAD,EAAGI,CAAH,CAAD,EAAO,CAACD,CAAD,EAAGG,CAAH,CAAP,CAAT;AAAuB,QAAG,MAAIC,CAAP,EAAS,OAAM;AAACiU,MAAAA,GAAG,EAAC,CAAL;AAAOC,MAAAA,GAAG,EAAC;AAAX,KAAN;AAAoB,UAAMjU,CAAC,GAAC,CAAC,CAACL,CAAC,GAACH,CAAH,IAAMO,CAAP,EAAS,CAACD,CAAC,GAACF,CAAH,IAAMG,CAAf,CAAR;AAAA,UAA0BO,CAAC,GAACN,CAAC,CAAC,CAAD,CAA7B;AAAiC,QAAIO,CAAC,GAACd,IAAI,CAACC,IAAL,CAAU,IAAEY,CAAC,GAACA,CAAd,CAAN;AAAuB,WAAOC,CAAC,GAACP,CAAC,CAAC,CAAD,CAAD,IAAM,CAAN,GAAQ,CAACO,CAAT,GAAWA,CAAb,EAAe;AAACyT,MAAAA,GAAG,EAACzT,CAAL;AAAO0T,MAAAA,GAAG,EAAC3T;AAAX,KAAtB;AAAoC;;AAAAiT,EAAAA,YAAY,CAAC/T,CAAD,EAAGI,CAAH,EAAKD,CAAL,EAAO;AAAC,QAAIG,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQC,CAAR;AAAA,QAAUM,CAAC,GAAC,CAAC,CAAb;;AAAe,SAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACK,MAAhB,EAAuB,EAAEF,CAAzB,EAA2B;AAAC,YAAMI,CAAC,GAACR,CAAC,CAACC,CAAC,CAACG,CAAD,CAAF,EAAMC,CAAN,CAAT;AAAkB,OAAC,CAAC,CAAD,KAAKU,CAAL,IAAQR,CAAC,GAACC,CAAX,MAAgBD,CAAC,GAACC,CAAF,EAAIO,CAAC,GAACX,CAAtB;AAAyB;;AAAAA,IAAAA,CAAC,IAAEI,CAAC,GAACP,CAAC,CAACc,CAAD,CAAH,EAAON,CAAC,GAACR,CAAC,CAAC,CAACc,CAAC,GAAC,CAAH,IAAMd,CAAC,CAACK,MAAT,CAAZ,KAA+B,KAAGS,CAAH,KAAOA,CAAC,GAACd,CAAC,CAACK,MAAF,GAAS,CAAlB,GAAqBE,CAAC,GAACP,CAAC,CAACc,CAAD,CAAxB,EAA4BN,CAAC,GAACR,CAAC,CAAC,CAACc,CAAC,GAAC,CAAH,IAAMd,CAAC,CAACK,MAAT,CAA9D,CAAD;AAAiF,UAAMU,CAAC,GAAC;AAAC2T,MAAAA,EAAE,EAAC,CAAC1U,CAAC,CAACc,CAAD,CAAD,CAAK,CAAL,CAAL;AAAa6T,MAAAA,EAAE,EAAC,CAAC3U,CAAC,CAACc,CAAD,CAAD,CAAK,CAAL;AAAjB,KAAR;;AAAkC,QAAGd,CAAC,CAACK,MAAF,IAAU,CAAb,EAAe;AAAC,YAAK;AAACmU,QAAAA,GAAG,EAACzU,CAAL;AAAO0U,QAAAA,GAAG,EAACzU;AAAX,UAAc,KAAKuU,WAAL,CAAiBhU,CAAjB,EAAmBC,CAAnB,CAAnB;;AAAyCO,MAAAA,CAAC,CAACyT,GAAF,GAAMzU,CAAN,EAAQgB,CAAC,CAAC0T,GAAF,GAAMzU,CAAd;AAAgB,KAAzE,MAA8Ee,CAAC,CAACyT,GAAF,GAAM,CAAN,EAAQzT,CAAC,CAAC0T,GAAF,GAAM,CAAd;;AAAgB,WAAO1T,CAAP;AAAS;;AAAA6T,EAAAA,WAAW,CAAC,CAAC7U,CAAD,EAAGC,CAAH,CAAD,EAAO;AAAC0U,IAAAA,EAAE,EAACtU,CAAJ;AAAMuU,IAAAA,EAAE,EAACxU,CAAT;AAAWqU,IAAAA,GAAG,EAAClU,CAAf;AAAiBmU,IAAAA,GAAG,EAAClU;AAArB,GAAP,EAA+B;AAAC,QAAIC,CAAC,GAACT,CAAC,GAACK,CAAR;AAAA,QAAUU,CAAC,GAACd,CAAC,GAACG,CAAd;AAAgB,WAAM,CAACK,CAAC,GAACD,CAAF,GAAIO,CAAC,GAACR,CAAP,EAASE,CAAC,GAACF,CAAF,GAAIQ,CAAC,GAACP,CAAf,CAAN;AAAwB;;AAAAyT,EAAAA,qBAAqB,CAACjU,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAO;AAAC,UAAMD,CAAC,GAACJ,CAAC,CAACM,MAAV;;AAAiB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAd,EAAgB,EAAEG,CAAlB,EAAoB;AAAC,YAAMH,CAAC,GAACJ,CAAC,CAACO,CAAD,CAAT;AAAA,YAAa,CAACC,CAAD,EAAGC,CAAH,IAAM,KAAKoU,WAAL,CAAiBzU,CAAjB,EAAmBH,CAAnB,CAAnB;;AAAyCG,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAKI,CAAL,EAAOJ,CAAC,CAAC,CAAD,CAAD,GAAKK,CAAC,GAACJ,CAAd;AAAgB;AAAC;;AAAoQiJ,EAAAA,SAAS,GAAE;AAAC,SAAKJ,eAAL,IAAsB,KAAKQ,IAAL,EAAtB;AAAkC,UAAM1J,CAAC,GAAC,KAAKsU,KAAb;AAAA,UAAmBrU,CAAC,GAAC,CAAC,GAAG,KAAKuJ,CAAT,CAArB;AAAA,UAAiCnJ,CAAC,GAAC,IAAI+T,CAAJ,CAAMnU,CAAC,CAACoB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,MAAQD,CAAC,CAACO,CAAF,GAAIN,CAAJ,EAAMD,CAAd,CAAP,CAAN,CAAnC;;AAAoE,SAAI,MAAK,CAACI,CAAD,EAAGG,CAAH,EAAKC,CAAL,CAAT,IAAmBR,CAAnB,EAAqB;AAAC,YAAMA,CAAC,GAACK,CAAC,CAAC+J,IAAF,CAAOnK,CAAC,CAACG,CAAD,CAAR,CAAR;AAAA,YAAqBK,CAAC,GAACJ,CAAC,CAAC+J,IAAF,CAAOnK,CAAC,CAACM,CAAD,CAAR,CAAvB;AAAoCP,MAAAA,CAAC,KAAGS,CAAJ,KAAQ,KAAKmT,kBAAL,CAAwB5T,CAAxB,EAA0BS,CAA1B,EAA4BD,CAA5B,GAA+BH,CAAC,CAACgU,KAAF,CAAQrU,CAAR,EAAUS,CAAV,CAAvC;AAAqD;;AAAA,WAAO,KAAKkJ,UAAZ;AAAuB;;AAAU,GAATF,SAAS,GAAE;AAAC,SAAKP,eAAL,IAAsB,KAAKQ,IAAL,EAAtB;AAAkC,UAAM1J,CAAC,GAAC,KAAKsU,KAAb;AAAA,UAAmBrU,CAAC,GAAC,CAAC,GAAG,KAAKuJ,CAAT,CAArB;AAAA,UAAiCnJ,CAAC,GAAC,IAAI+T,CAAJ,CAAMnU,CAAC,CAACoB,GAAF,CAAO,CAACrB,CAAD,EAAGC,CAAH,MAAQD,CAAC,CAACO,CAAF,GAAIN,CAAJ,EAAMD,CAAd,CAAP,CAAN,CAAnC;;AAAoE,SAAI,MAAK,CAACI,CAAD,EAAGG,CAAH,EAAKC,CAAL,CAAT,IAAmBR,CAAnB,EAAqB;AAAC,YAAMA,CAAC,GAACK,CAAC,CAAC+J,IAAF,CAAOnK,CAAC,CAACG,CAAD,CAAR,CAAR;AAAA,YAAqBK,CAAC,GAACJ,CAAC,CAAC+J,IAAF,CAAOnK,CAAC,CAACM,CAAD,CAAR,CAAvB;AAAoCP,MAAAA,CAAC,KAAGS,CAAJ,KAAQ,KAAKmT,kBAAL,CAAwB5T,CAAxB,EAA0BS,CAA1B,EAA4BD,CAA5B,GAA+BH,CAAC,CAACgU,KAAF,CAAQrU,CAAR,EAAUS,CAAV,CAA/B,EAA4C,MAAM,KAAKkJ,UAA/D;AAA2E;;AAAA,WAAO,KAAKA,UAAZ;AAAuB;;AAAzqF;;AAA0qF,MAAMyK,CAAN,CAAO;AAACvS,EAAAA,WAAW,CAAC7B,CAAC,GAAC,IAAH,EAAQ;AAAC,QAAG,KAAK8U,KAAL,GAAW,IAAIC,GAAJ,EAAX,EAAmB/U,CAAtB,EAAwB,KAAI,MAAMC,CAAV,IAAeD,CAAf,EAAiB,KAAKgV,QAAL,CAAc/U,CAAd;AAAiB,WAAO,IAAP;AAAY;;AAAA+U,EAAAA,QAAQ,CAAChV,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK6U,KAAb;AAAmB,WAAO7U,CAAC,CAACgV,GAAF,CAAMjV,CAAN,MAAWC,CAAC,CAACyD,GAAF,CAAM1D,CAAN,GAASA,CAAC,CAAC6T,cAAF,GAAiB,EAA1B,EAA6B7T,CAAC,CAAC6T,cAAF,CAAiBqB,MAAjB,GAAwBlV,CAArD,EAAuDA,CAAC,CAAC6T,cAAF,CAAiBC,QAAjB,GAA0B,IAAIiB,GAAJ,CAAQ,CAAC/U,CAAD,CAAR,CAAjF,EAA8FA,CAAC,CAAC6T,cAAF,CAAiBzC,IAAjB,GAAsB,CAA/H,GAAkI,IAAzI;AAA8I;;AAAAhH,EAAAA,IAAI,CAACpK,CAAD,EAAG;AAAC,WAAO,KAAK8U,KAAL,CAAWG,GAAX,CAAejV,CAAf,IAAkBA,CAAC,CAAC6T,cAAF,CAAiBqB,MAAjB,KAA0BlV,CAA1B,IAA6BA,CAAC,CAAC6T,cAAF,CAAiBC,QAAjB,CAA0BpQ,GAA1B,CAA8B,GAAG1D,CAAjC,GAAoCA,CAAC,CAAC6T,cAAF,CAAiBqB,MAAjB,GAAwB,KAAK9K,IAAL,CAAUpK,CAAC,CAAC6T,cAAF,CAAiBqB,MAA3B,CAA5D,EAA+FlV,CAAC,CAAC6T,cAAF,CAAiBqB,MAA7I,IAAqJlV,CAAvK,GAAyK,IAAhL;AAAqL;;AAAAqU,EAAAA,KAAK,CAACrU,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAII,CAAC,GAAC,KAAK+J,IAAL,CAAUpK,CAAV,CAAN;AAAA,QAAmBI,CAAC,GAAC,KAAKgK,IAAL,CAAUnK,CAAV,CAArB;AAAkC,WAAOI,CAAC,KAAGD,CAAJ,KAAQC,CAAC,CAACwT,cAAF,CAAiBzC,IAAjB,GAAsBhR,CAAC,CAACyT,cAAF,CAAiBzC,IAAvC,KAA8C,CAAC/Q,CAAD,EAAGD,CAAH,IAAM,CAACA,CAAD,EAAGC,CAAH,CAApD,GAA2DD,CAAC,CAACyT,cAAF,CAAiBqB,MAAjB,GAAwB7U,CAAnF,EAAqFD,CAAC,CAACyT,cAAF,CAAiBC,QAAjB,CAA0BrJ,OAA1B,CAAkCpK,CAAC,CAACwT,cAAF,CAAiBC,QAAjB,CAA0BpQ,GAA5D,EAAgErD,CAAC,CAACwT,cAAF,CAAiBC,QAAjF,CAArF,EAAgLzT,CAAC,CAACwT,cAAF,CAAiBzC,IAAjB,IAAuBhR,CAAC,CAACyT,cAAF,CAAiBzC,IAAhO,GAAsO,IAA7O;AAAkP;;AAApuB;;AAAquB,MAAM7I,CAAN,SAAgBG,CAAhB,CAAiB;AAAC7G,EAAAA,WAAW,CAAC5B,CAAD,EAAGI,CAAC,GAAC,CAAL,EAAOD,CAAC,GAAC,CAAT,EAAWG,CAAC,GAACP,CAAb,EAAeQ,CAAC,GAAC,IAAjB,EAAsB;AAAC,WAAO,MAAMP,CAAN,EAAQG,CAAR,EAAUG,CAAV,EAAYC,CAAZ,GAAe,MAAMmI,cAAN,GAAqB,CAAC,YAAD,CAApC,EAAmD,KAAKQ,SAAL,CAAe,YAAf,EAA4B9I,CAA5B,CAAnD,EAAkF,CAAC,KAAK+E,EAAN,EAAS,KAAK2D,EAAd,IAAkB,KAAKD,CAAL,CAAO7H,KAA3G,EAAiH,IAAxH;AAA6H;;AAAAyI,EAAAA,IAAI,CAAC1J,CAAC,GAAC,QAAH,EAAYC,CAAC,GAAC,IAAd,EAAmB;AAAC,UAAMI,CAAC,GAAC,KAAK+E,EAAb;AAAA,UAAgBhF,CAAC,GAAC,KAAK4I,EAAvB;;AAA0B,QAAG,aAAWhJ,CAAd,EAAgB;AAAC,YAAMA,CAAC,GAAC,KAAKiJ,WAAb;AAAyBkM,MAAAA,OAAO,CAACnK,GAAR,CAAYhL,CAAZ,GAAe,KAAKwJ,CAAL,GAAO,IAAI5H,CAAJ,CAAMvB,CAAN,EAAQD,CAAR,EAAW,MAAIJ,CAAC,CAACoE,MAAjB,CAAtB;AAAgD,KAA1F,MAA+F,KAAKoF,CAAL,GAAOxJ,CAAC,CAACsJ,SAAF,CAAY,KAAKR,CAAjB,CAAP;;AAA2B,UAAMvI,CAAC,GAAC,KAAKiJ,CAAb;AAAevJ,IAAAA,CAAC,KAAGA,CAAC,GAAC,IAAI2B,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAL,CAAD;AAAkB,UAAMG,CAAC,GAAC,KAAKsH,OAAb;AAAqB,QAAIrH,CAAC,GAAC,IAAImB,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAN;AAAA,QAAiBU,CAAC,GAAC,IAAIa,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAAnB;;AAA8B,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,CAAd,EAAgB,EAAEL,CAAlB,EAAoB;AAAC,YAAMI,CAAC,GAACG,CAAC,CAACa,GAAF,CAAMpB,CAAN,CAAR;;AAAiB,WAAI,IAAIgB,CAAC,GAAChB,CAAV,EAAYgB,CAAC,GAACX,CAAd,EAAgB,EAAEW,CAAlB,EAAoB;AAAC,YAAIX,CAAC,GAACL,CAAC,KAAGgB,CAAJ,GAAM,CAAN,GAAQR,CAAC,CAACJ,CAAD,EAAGG,CAAC,CAACa,GAAF,CAAMJ,CAAN,CAAH,CAAf;AAAA,YAA4BY,CAAC,GAAC,IAAEvB,CAAhC;;AAAkC,YAAGI,CAAC,CAACgC,SAAF,CAAYzC,CAAZ,EAAcgB,CAAd,EAAgBX,CAAhB,GAAmBI,CAAC,CAACgC,SAAF,CAAYzB,CAAZ,EAAchB,CAAd,EAAgBK,CAAhB,CAAnB,EAAsCU,CAAC,CAAC0B,SAAF,CAAYzC,CAAZ,EAAcgB,CAAd,EAAgBY,CAAhB,CAAtC,EAAyDb,CAAC,CAAC0B,SAAF,CAAYzB,CAAZ,EAAchB,CAAd,EAAgB4B,CAAhB,CAAzD,EAA4E,CAAC3B,CAAhF,EAAkF;AAAC,cAAII,CAAC,GAACL,CAAC,KAAGgB,CAAJ,GAAM,CAAN,GAAQR,CAAC,CAACsI,CAAC,CAAC1H,GAAF,CAAMpB,CAAN,CAAD,EAAU8I,CAAC,CAAC1H,GAAF,CAAMJ,CAAN,CAAV,CAAf;AAAmCf,UAAAA,CAAC,CAACwC,SAAF,CAAYzC,CAAZ,EAAcgB,CAAd,EAAgBX,CAAhB,GAAmBJ,CAAC,CAACwC,SAAF,CAAYzB,CAAZ,EAAchB,CAAd,EAAgBK,CAAhB,CAAnB;AAAsC;AAAC;AAAC;;AAAA,QAAIW,CAAC,GAACf,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOA,CAAC,GAACD,CAArB,CAAN;AAAA,QAA+BkB,CAAC,GAACjB,CAAC,CAAC0D,GAAF,CAAMlD,CAAN,CAAjC;AAAA,QAA0C4D,CAAC,GAACnD,CAAC,CAACqC,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOC,IAAI,CAAC+J,GAAL,CAASjK,CAAT,EAAWC,CAAX,CAAnB,EAAmCuD,IAAnC,CAAwCxC,CAAxC,CAA5C;;AAAuF,WAAOmU,OAAO,CAACnK,GAAR,CAAY3G,CAAZ,GAAe,KAAKyM,gBAAL,GAAsBrQ,CAArC,EAAuC,KAAK2U,wBAAL,GAA8BrU,CAArE,EAAuE,KAAKsU,gBAAL,GAAsBpV,CAA7F,EAA+F,KAAKqV,wBAAL,GAA8BvU,CAA7H,EAA+H,KAAKwU,MAAL,GAAYrU,CAA3I,EAA6I,KAAKsU,KAAL,GAAW,IAAI5T,CAAJ,CAAMvB,CAAN,EAAQD,CAAR,EAAU,CAAV,CAAxJ,EAAqK,KAAKqV,EAAL,GAAQpR,CAAC,CAACL,GAA/K,EAAmL,IAA1L;AAA+L;;AAAA0R,EAAAA,iBAAiB,CAAC1V,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK6H,OAAb;AAAA,UAAqBzH,CAAC,GAACL,CAAC,CAACiB,KAAF,CAAQ,CAAR,CAAvB;AAAA,UAAkCb,CAAC,GAAC,IAAIwB,CAAJ,CAAMvB,CAAN,EAAQA,CAAR,CAApC;;AAA+C,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB;AAAC,YAAMC,CAAC,GAACR,CAAC,CAACoB,GAAF,CAAMb,CAAN,CAAR;;AAAiB,WAAI,IAAIE,CAAC,GAACF,CAAV,EAAYE,CAAC,GAACJ,CAAd,EAAgB,EAAEI,CAAlB,EAAoB;AAAC,YAAIJ,CAAC,GAACE,CAAC,KAAGE,CAAJ,GAAM,CAAN,GAAQR,CAAC,CAACO,CAAD,EAAGR,CAAC,CAACoB,GAAF,CAAMX,CAAN,CAAH,CAAf;AAA4BL,QAAAA,CAAC,CAACqC,SAAF,CAAYlC,CAAZ,EAAcE,CAAd,EAAgBJ,CAAhB,GAAmBD,CAAC,CAACqC,SAAF,CAAYhC,CAAZ,EAAcF,CAAd,EAAgBF,CAAhB,CAAnB;AAAsC;AAAC;;AAAA,WAAOD,CAAP;AAAS;;AAAAkJ,EAAAA,SAAS,CAACtJ,CAAC,GAAC,EAAH,EAAM;AAAC,SAAKkJ,eAAL,IAAsB,KAAKQ,IAAL,EAAtB;;AAAkC,SAAI,IAAIzJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAd,EAAgB,EAAEC,CAAlB,EAAoBkV,OAAO,CAACnK,GAAR,CAAY,CAAC,GAAG,KAAKxB,CAAT,CAAZ,GAAyB,KAAKmM,KAAL,EAAzB;;AAAsC,WAAO,KAAKhM,UAAZ;AAAuB;;AAAU,GAATF,SAAS,GAAE;AAAC,SAAKP,eAAL,IAAsB,KAAKQ,IAAL,EAAtB;;AAAkC,SAAI,IAAI1J,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4V,QAAd,EAAuB,EAAE5V,CAAzB,EAA2B,KAAK2V,KAAL,IAAa,MAAM,KAAKhM,UAAxB;;AAAmC,WAAO,KAAKA,UAAZ;AAAuB;;AAAAgM,EAAAA,KAAK,GAAE;AAAC,UAAM3V,CAAC,GAAC,KAAKmJ,SAAL,CAAe,YAAf,CAAR;;AAAqC,QAAIlJ,CAAC,GAAC,KAAK6Q,gBAAX;AAAA,QAA4BzQ,CAAC,GAAC,KAAK+U,wBAAnC;AAAA,QAA4DhV,CAAC,GAAC,KAAKiV,gBAAnE;AAAA,QAAoF9U,CAAC,GAAC,KAAK+U,wBAA3F;AAAA,QAAoH9U,CAAC,GAAC,KAAKgV,KAA3H;AAAA,QAAiI/U,CAAC,GAAC,KAAKgV,EAAxI;AAAA,QAA2I1U,CAAC,GAAC,KAAKyI,CAAlJ;AAAA,QAAoJxI,CAAC,GAACX,CAAC,CAACsD,GAAF,CAAMpD,CAAN,CAAtJ;AAAA,QAA+JqB,CAAC,GAACZ,CAAC,CAAC6B,GAAF,CAAMrC,CAAN,CAAjK;AAAA,QAA0KU,CAAC,GAACF,CAAC,CAAC6B,GAAF,CAAM9B,CAAN,EAAS4C,GAAT,CAAa5C,CAAC,CAACyC,IAAF,CAAO5B,CAAP,CAAb,CAA5K;AAAA,QAAoMyC,CAAC,GAAChE,CAAC,CAACkD,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOC,IAAI,CAAC+J,GAAL,CAASjK,CAAT,EAAWC,CAAX,CAAnB,CAAtM;AAAA,QAAyOgF,CAAC,GAAClE,CAAC,CAACwC,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOC,IAAI,CAAC+J,GAAL,CAASjK,CAAT,EAAWC,CAAX,CAAnB,CAA3O;AAAA,QAA8QkF,CAAC,GAACd,CAAC,CAACxB,GAAF,CAAMoC,CAAN,EAAStB,GAAT,CAAa/B,CAAb,EAAgB+B,GAAhB,CAAoB5C,CAAC,CAACyC,IAAF,CAAO,CAAP,EAAUA,IAAV,CAAea,CAAC,CAACxB,GAAF,CAAM9B,CAAN,CAAf,CAApB,EAA8C2C,GAA9C,CAAkDuB,CAAC,CAACzB,IAAF,CAAOa,CAAC,CAACxB,GAAF,CAAMrC,CAAN,CAAP,CAAlD,CAAhR;;AAAoV2E,IAAAA,CAAC,GAACA,CAAC,CAAC5B,MAAF,CAAS,IAAT,EAAevD,CAAC,IAAEE,IAAI,CAACQ,GAAL,CAASV,CAAT,CAAlB,CAAF;AAAkC,QAAImG,CAAC,GAACjF,CAAC,CAACuC,MAAF,CAAS0B,CAAT,CAAN;AAAA,QAAkBiB,CAAC,GAACrF,CAAC,CAACoB,KAAF,EAApB;;AAA8B,SAAI,IAAI3B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAd,EAAgB,EAAEQ,CAAlB,EAAoB;AAAC,UAAGO,CAAC,GAACqF,CAAC,CAAC1C,GAAF,CAAMyC,CAAN,CAAF,EAAWlG,CAAC,GAAC,KAAKyV,iBAAL,CAAuB3U,CAAvB,CAAb,EAAuCV,CAAC,GAACJ,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOA,CAAC,GAACD,CAArB,CAAzC,EAAkEgB,CAAC,GAACZ,CAAC,CAACuD,GAAF,CAAM1D,CAAN,CAApE,EAA6Ee,CAAC,CAACuC,MAAF,CAAS,CAAT,EAAY,CAACvD,CAAD,EAAGC,CAAH,KAAOC,IAAI,CAAC+J,GAAL,CAASjK,CAAT,EAAWC,CAAX,CAAnB,EAAmCuD,IAAnC,CAAwCjD,CAAxC,EAA2CyD,GAA3C,GAA+CvD,CAA/H,EAAiI;AAAM0F,MAAAA,CAAC,GAACA,CAAC,CAAC3C,IAAF,CAAO,EAAP,CAAF;AAAa;;AAAA,SAAKgG,CAAL,GAAOzI,CAAP;AAAS;;AAAt/D;;AAAu/D,IAAI8U,CAAC,GAAC,OAAN;AAAc,SAAOvO,CAAC,IAAIwO,QAAZ,EAAqBzL,CAAC,IAAI0L,OAA1B,EAAkC3P,CAAC,IAAI4P,IAAvC,EAA4CjG,CAAC,IAAIkG,uBAAjD,EAAyE/L,CAAC,IAAIgM,MAA9E,EAAqF1E,CAAC,IAAI2E,MAA1F,EAAiG5R,CAAC,IAAI6R,QAAtG,EAA+G7L,CAAC,IAAI8L,GAApH,EAAwHxL,CAAC,IAAIyL,GAA7H,EAAiI5C,CAAC,IAAI6C,GAAtI,EAA0IjV,CAAC,IAAIkV,IAA/I,EAAoJ1M,CAAC,IAAI2M,GAAzJ,EAA6J7U,CAAC,IAAI8U,MAAlK,EAAyK/T,CAAC,IAAIgU,MAA9K,EAAqL9M,CAAC,IAAI+M,GAA1L,EAA8LzR,CAAC,IAAI0R,UAAnM,EAA8MtO,CAAC,IAAIuO,MAAnN,EAA0NhM,CAAC,IAAIiM,IAA/N,EAAoOpD,CAAC,IAAIqD,OAAzO,EAAiP/I,CAAC,IAAIgJ,MAAtP,EAA6PzN,CAAC,IAAI0N,IAAlQ,EAAuQnW,CAAC,IAAIoW,QAA5Q,EAAqR1W,CAAC,IAAI2W,SAA1R,EAAoS7W,CAAC,IAAI8W,MAAzS,EAAgTnW,CAAC,IAAIoW,eAArT,EAAqUtX,CAAC,IAAIuX,SAA1U,EAAoVnX,CAAC,IAAIoX,iBAAzV,EAA2WxW,CAAC,IAAIyW,mBAAhX,EAAoYxX,CAAC,IAAIyX,SAAzY,EAAmZrT,CAAC,IAAIsT,QAAxZ,EAAianX,CAAC,IAAIoX,SAAta,EAAgbzR,CAAC,IAAIrF,GAArb,EAAybT,CAAC,IAAIwX,WAA9b,EAA0c5S,CAAC,IAAI6S,IAA/c,EAAodnS,CAAC,IAAIoS,MAAzd,EAAgezP,CAAC,IAAI0P,EAAre,EAAwevP,CAAC,IAAI5D,2BAA7e,EAAygBgR,CAAC,IAAIoC,OAA9gB","sourcesContent":["function t(t,e){return Math.sqrt(r(t,e))}function e(t){let e,s,r=t.length,i=0,n=0;for(let o=0;o<r;++o)e=t[o]-n,s=i+e,n=s-i-e,i=s;return i}function s(t){let e=t.length,s=0,r=0;for(let i=0;i<e;++i){let e=t[i],n=s+e;Math.abs(s)>=Math.abs(e)?r+=s-n+e:r+=e-n+s,s=n}return s+r}function r(t,e){if(t.length!=e.length)return;let r=t.length,i=new Array(r);for(let s=0;s<r;++s){let r=t[s],n=e[s];i[s]=(r-n)*(r-n)}return s(i)}function i(t,e){if(t.length!==e.length)return;let s=t.length,r=0,i=0,n=0;for(let o=0;o<s;++o)r+=t[o]*e[o],i+=t[o]*t[o],n+=e[o]*e[o];return Math.acos(r/(Math.sqrt(i)*Math.sqrt(n)))}function n(t,e){if(t.length!=e.length)return;let s=t.length,r=0;for(let i=0;i<s;++i)r+=Math.abs(t[i]-e[i]);return r}function o(t,e){if(t.length!=e.length)return;let s=t.length,r=[];for(let i=0;i<s;++i)r.push(Math.abs(t[i]-e[i]));return Math.max(...r)}function h(t,e){if(t.length!==e.length)return;let s=t.length,r=0;for(let i=0;i<s;++i)r+=Math.abs(t[i]-e[i])/(Math.abs(t[i])+Math.abs(e[i]));return r}function a(e,s,r=null,i=t){const n=e.shape[0];let o=r??l(e,i),h=new Array(n);for(let t=0;t<n;++t)h[t]=Array.from(o.row(t)).map(((e,s)=>({i:t,j:s,distance:e}))).sort(((t,e)=>t.distance-e.distance)).slice(1,s+1);return h}class _{constructor(t=null,e=null,s=null){if(this._rows=t,this._cols=e,this._data=null,t&&e){if(!s)return this._data=new Float64Array(t*e),this;if(\"function\"==typeof s){this._data=new Float64Array(t*e);for(let r=0;r<t;++r)for(let t=0;t<e;++t)this._data[r*e+t]=s(r,t);return this}if(\"string\"==typeof s){if(\"zeros\"===s)return new _(t,e,0);if(\"identity\"===s||\"I\"===s){this._data=new Float64Array(t*e);for(let s=0;s<t;++s)this._data[s*e+s]=1;return this}if(\"center\"===s&&t==e){this._data=new Float64Array(t*e),s=(e,s)=>(e===s?1:0)-1/t;for(let r=0;r<t;++r)for(let t=0;t<e;++t)this._data[r*e+t]=s(r,t);return this}}if(\"number\"==typeof s){this._data=new Float64Array(t*e);for(let r=0;r<t;++r)for(let t=0;t<e;++t)this._data[r*e+t]=s;return this}}return this}static from(t,e=\"row\"){if(t instanceof _)return t.clone();if(!(Array.isArray(t)||t instanceof Float64Array)){if(\"number\"==typeof t)return new _(1,1,t);throw\"error\"}{let s=t.length;if(0===s)throw\"Array is empty\";if(!(Array.isArray(t[0])||t[0]instanceof Float64Array)){if(\"row\"===e)return new _(1,s,((e,s)=>t[s]));if(\"col\"===e)return new _(s,1,(e=>t[e]));if(\"diag\"===e)return new _(s,s,((e,s)=>e==s?t[e]:0));throw\"1d array has NaN entries\"}if(Array.isArray(t[0])||t[0]instanceof Float64Array){let e=t[0].length;for(let r=0;r<s;++r)if(t[r].length!==e)throw\"various array lengths\";return new _(s,e,((e,s)=>t[e][s]))}}}row(t){const e=this._data,s=this._cols;return e.subarray(t*s,(t+1)*s)}*iterate_rows(){const t=this._cols,e=this._rows,s=this._data;for(let r=0;r<e;++r)yield s.subarray(r*t,(r+1)*t)}[Symbol.iterator]=this.iterate_rows;set_row(t,e){let s=this._cols;if(Array.isArray(e)&&e.length===s){let r=t*s;for(let t=0;t<s;++t)this._data[r+t]=e[t]}else if(e instanceof _&&e.shape[1]===s&&1===e.shape[0]){let r=t*s;for(let t=0;t<s;++t)this._data[r+t]=e._data[t]}return this}col(t){let e=new Float64Array(this._rows);for(let s=0;s<this._rows;++s)e[s]=this._data[s*this._cols+t];return e}entry(t,e){return this._data[t*this._cols+e]}set_entry(t,e,s){return this._data[t*this._cols+e]=s,this}transpose(){return new _(this._cols,this._rows,((t,e)=>this.entry(e,t)))}get T(){return this.transpose()}inverse(){const t=this._rows,e=this._cols;let s=new _(t,2*e,((t,s)=>s>=e?t===s-e?1:0:this.entry(t,s))),r=0,i=0;for(;r<t&&i<e;){var n=0;let o=-1/0;for(let e=r;e<t;++e){let t=Math.abs(s.entry(e,i));o<t&&(n=e,o=t)}if(0==s.entry(n,i))i++;else{for(let t=0;t<2*e;++t){let e=s.entry(r,t),i=s.entry(n,t);s.set_entry(r,t,e),s.set_entry(n,t,i)}for(let n=r+1;n<t;++n){let t=s.entry(n,i)/s.entry(r,i);s.set_entry(n,i,0);for(let o=i+1;o<2*e;++o)s.set_entry(n,o,s.entry(n,o)-s.entry(r,o)*t)}r++,i++}}for(let r=0;r<t;++r){let t=s.entry(r,r);for(let i=r;i<2*e;++i)s.set_entry(r,i,s.entry(r,i)/t)}for(let r=t-1;r>=0;--r){let t=s.entry(r,r);for(let i=0;i<r;i++){let n=s.entry(i,r)/t;for(let t=i;t<2*e;++t){let e=s.entry(i,t);e-=s.entry(r,t)*n,s.set_entry(i,t,e)}}}return new _(t,e,((t,r)=>s.entry(t,r+e)))}dot(t){if(t instanceof _){let e=this;if(e.shape[1]!==t.shape[0])throw`A.dot(B): A is a ${e.shape.join(\" x \")}-Matrix, B is a ${t.shape.join(\" x \")}-Matrix: \\n                A has ${e.shape[1]} cols and B ${t.shape[0]} rows. \\n                Must be equal!`;let s=e.shape[1];return new _(e.shape[0],t.shape[1],((r,i)=>{const n=e.row(r),o=t.col(i);let h=0;for(let t=0;t<s;++t)h+=n[t]*o[t];return h}))}if(Array.isArray(t)||t instanceof Float64Array){let e=this._rows;if(t.length!==e)throw`A.dot(B): A has ${e} cols and B has ${t.length} rows. Must be equal!`;let r=new Array(e);for(let i=0;i<e;++i)r[i]=s(this.row(i).map((e=>e*t[i])));return r}throw\"B must be Matrix or Array\"}outer(t){let e=this,s=e._data.length;if(s!=t._data.length)return;let r=new _;return r.shape=[s,s,(s,i)=>s<=i?e._data[s]*t._data[i]:r.entry(i,s)],r}concat(t,e=\"horizontal\"){const s=this,[r,i]=s.shape,[n,o]=t.shape;if(\"horizontal\"==e){if(r!=n)throw`A.concat(B, \"horizontal\"): A and B need same number of rows, A has ${r} rows, B has ${n} rows.`;const e=new _(r,i+o,\"zeros\");return e.set_block(0,0,s),e.set_block(0,i,t),e}if(\"vertical\"==e){if(i!=o)throw`A.concat(B, \"vertical\"): A and B need same number of columns, A has ${i} columns, B has ${o} columns.`;const e=new _(r+n,i,\"zeros\");return e.set_block(0,0,s),e.set_block(r,0,t),e}if(\"diag\"==e){const e=new _(r+n,i+o,\"zeros\");return e.set_block(0,0,s),e.set_block(r,i,t),e}throw`type must be \"horizontal\" or \"vertical\", but type is ${e}!`}set_block(t,e,s){let[r,i]=s.shape;for(let n=0;n<r;++n)if(!(n>this._rows))for(let r=0;r<i;++r)r>this._cols||this.set_entry(n+t,r+e,s.entry(n,r));return this}get_block(t,e,s=null,r=null){const[i,n]=this.shape;if(r=r??n,(s=s??i)<=t||r<=e)throw`\\n                end_row must be greater than start_row, and \\n                end_col must be greater than start_col, but\\n                end_row = ${s}, start_row = ${t}, end_col = ${r}, and start_col = ${e}!`;const o=new _(s-t,r-e,\"zeros\");for(let i=t,n=0;i<s;++i,++n)for(let t=e,s=0;t<r;++t,++s)o.set_entry(n,s,this.entry(i,t));return o}gather(t,e){const s=t.length,r=e.length,i=new _(s,r);for(let r=0;r<s;++r){const n=t[r];for(let t=0;t<s;++t){const s=e[t];i.set_entry(r,t,this.entry(n,s))}}return i}_apply_array(t,e){const s=this._data,[r,i]=this.shape;for(let n=0;n<r;++n){const r=n*i;for(let o=0;o<i;++o){const i=r+o;s[i]=t(s[i],e(n,o))}}return this}_apply_rowwise_array(t,e){return this._apply_array(e,((e,s)=>t[s]))}_apply_colwise_array(t,e){const s=this._data,[r,i]=this.shape;for(let n=0;n<r;++n){const r=n*i;for(let o=0;o<i;++o){const i=r+o;s[i]=e(s[i],t[n])}}return this}_apply(t,e){let s=this._data;if(t instanceof _){let[r,i]=t.shape,[n,o]=this.shape;if(1===r){if(o!==i)throw\"cols !== value_cols\";for(let r=0;r<n;++r)for(let i=0;i<o;++i)s[r*o+i]=e(s[r*o+i],t.entry(0,i))}else if(1===i){if(n!==r)throw\"rows !== value_rows\";for(let r=0;r<n;++r)for(let i=0;i<o;++i)s[r*o+i]=e(s[r*o+i],t.entry(r,0))}else{if(n!=r||o!=i)throw\"error\";for(let r=0;r<n;++r)for(let i=0;i<o;++i)s[r*o+i]=e(s[r*o+i],t.entry(r,i))}}else if(Array.isArray(t)){let r=this._rows,i=this._cols;if(t.length===r)for(let n=0;n<r;++n)for(let r=0;r<i;++r)s[n*i+r]=e(s[n*i+r],t[n]);else{if(t.length!==i)throw\"error\";for(let n=0;n<r;++n)for(let r=0;r<i;++r)s[n*i+r]=e(s[n*i+r],t[r])}}else for(let r=0,i=this._rows*this._cols;r<i;++r)s[r]=e(s[r],t);return this}clone(){let t=new _;return t._rows=this._rows,t._cols=this._cols,t._data=this._data.slice(0),t}mult(t){return this.clone()._apply(t,((t,e)=>t*e))}divide(t){return this.clone()._apply(t,((t,e)=>t/e))}add(t){return this.clone()._apply(t,((t,e)=>t+e))}sub(t){return this.clone()._apply(t,((t,e)=>t-e))}get shape(){return[this._rows,this._cols]}set shape([t,e,s=(()=>0)]){this._rows=t,this._cols=e,this._data=new Float64Array(t*e);for(let r=0;r<t;++r)for(let t=0;t<e;++t)this._data[r*e+t]=s(r,t);return this}get to2dArray(){return[...this.iterate_rows()]}get diag(){const t=this._rows,e=this._cols,s=Math.min(t,e);let r=new Float64Array(s);for(let t=0;t<s;++t)r[t]=this.entry(t,t);return r}get mean(){return this.sum/(this._rows*this._cols)}get sum(){return s(this._data)}get meanRows(){const t=this._data,e=this._rows,s=this._cols;let r=[];for(let i=0;i<e;++i){r[i]=0;for(let e=0;e<s;++e)r[i]+=t[i*s+e];r[i]/=s}return r}get meanCols(){const t=this._data,e=this._rows,s=this._cols;let r=[];for(let i=0;i<s;++i){r[i]=0;for(let n=0;n<e;++n)r[i]+=t[n*s+i];r[i]/=e}return r}static solve_CG(t,e,s,r=.001){const i=t.shape[0],n=e.shape[1];let o=new _(i,0);for(let h=0;h<n;++h){const n=_.from(e.col(h)).T;let a=new _(i,1,(()=>s.random)),l=n.sub(t.dot(a)),c=l.clone();do{const e=t.dot(c),s=l.T.dot(l).entry(0,0)/c.T.dot(e).entry(0,0);a=a.add(c.mult(s));const r=l.sub(e.mult(s)),i=r.T.dot(r).entry(0,0)/l.T.dot(l).entry(0,0);c=r.add(c.mult(i)),l=r}while(Math.abs(l.mean)>r);o=o.concat(a,\"horizontal\")}return o}static solve(t,e){let{L:s,U:r}=\"L\"in t&&\"U\"in t?t:_.LU(t),i=s.shape[0],n=e.clone();for(let t=0;t<i;++t){for(let e=0;e<t-1;++e)n.set_entry(0,t,n.entry(0,t)-s.entry(t,e)*n.entry(1,e));n.set_entry(0,t,n.entry(0,t)/s.entry(t,t))}for(let t=i-1;t>=0;--t){for(let e=i-1;e>t;--e)n.set_entry(0,t,n.entry(0,t)-r.entry(t,e)*n.entry(0,e));n.set_entry(0,t,n.entry(0,t)/r.entry(t,t))}return n}static LU(t){const e=t.shape[0],s=new _(e,e,\"zeros\"),r=new _(e,e,\"identity\");for(let i=0;i<e;++i){for(let n=i;n<e;++n){let e=0;for(let t=0;t<i;++t)e+=s.entry(n,t)*r.entry(t,i);s.set_entry(n,i,t.entry(n,i)-e)}for(let n=i;n<e;++n){if(0===s.entry(i,i))return;let e=0;for(let t=0;t<i;++t)e+=s.entry(i,t)*r.entry(t,n);r.set_entry(i,n,(t.entry(i,n)-e)/s.entry(i,i))}}return{L:s,U:r}}static SVD(t,e=2){const s=t.T;let r=s.dot(t),i=t.dot(s),{eigenvectors:n,eigenvalues:o}=simultaneous_poweriteration(r,e),{eigenvectors:h}=simultaneous_poweriteration(i,e);return{U:h,Sigma:o.map((t=>Math.sqrt(t))),V:n}}}function l(e,s=t){let r=e.shape[0];const i=new _(r,r);for(let t=0;t<r;++t){const n=e.row(t);for(let o=t+1;o<r;++o){const r=s(n,e.row(o));i.set_entry(t,o,r),i.set_entry(o,t,r)}}return i}function c(t,e,s=null){if(s||(s=Math.max(Math.round(e-t)+1,1)),s<2)return 1===s?[t]:[];let r=new Array(s);for(let i=s-=1;i>=0;--i)r[i]=(i*e+(s-i)*t)/s;return r}function u(e,s=t){let r=null;if(e instanceof _){let[t,s]=e.shape;if(1===t)r=e.row(0);else{if(1!==s)throw\"matrix must be 1d!\";r=e.col(0)}}else r=e;let i=r.length,n=new Array(i);return n.fill(0),s(r,n)}class f{constructor(t){return this._N=624,this._M=397,this._MATRIX_A=2567483615,this._UPPER_MASK=2147483648,this._LOWER_MASK=2147483647,this._mt=new Array(this._N),this._mti=this.N+1,this.seed=t||(new Date).getTime(),this}set seed(t){this._seed=t;let e=this._mt;for(e[0]=t>>>0,this._mti=1;this._mti<this._N;this._mti+=1){let t=this._mti,s=e[t-1]^e[t-1]>>>30;e[t]=(1812433253*((4294901760&s)>>>16)<<16)+1812433253*(65535&s)+t,e[t]>>>=0}}get seed(){return this._seed}get random(){return this.random_int*(1/4294967296)}get random_int(){let t,e=new Array(0,this._MATRIX_A);if(this._mti>=this._N){let s;this._mti==this._N+1&&(this.seed=5489);let r=this._N-this._M,i=this._M-this._N;for(s=0;s<r;++s)t=this._mt[s]&this._UPPER_MASK|this._mt[s+1]&this._LOWER_MASK,this._mt[s]=this._mt[s+this._M]^t>>>1^e[1&t];for(;s<this._N-1;++s)t=this._mt[s]&this._UPPER_MASK|this._mt[s+1]&this._LOWER_MASK,this._mt[s]=this._mt[s+i]^t>>>1^e[1&t];t=this._mt[this._N-1]&this._UPPER_MASK|this._mt[0]&this._LOWER_MASK,this._mt[this._N-1]=this._mt[this._M-1]^t>>>1^e[1&t],this._mti=0}return t=this._mt[this._mti+=1],t^=t>>>11,t^=t<<7&2636928640,t^=t<<15&4022730752,t^=t>>>18,t>>>0}choice(t,e){if(t instanceof _){let[s,r]=t.shape;if(e>s)throw\"n bigger than A!\";let i=new Array(e),n=c(0,s-1);for(let t=0,s=n.length;t<e;++t,--s){let e=this.random_int%s;i[t]=n.splice(e,1)[0]}return i.map((e=>t.row(e)))}if(Array.isArray(t)||t instanceof Float64Array){let s=t.length;if(e>s)throw\"n bigger than A!\";let r=new Array(e),i=c(0,s-1);for(let t=0,s=i.length;t<e;++t,--s){let e=this.random_int%s;r[t]=i.splice(e,1)[0]}return r.map((e=>t[e]))}}static choice(t,e,s=19870307){let[r,i]=t.shape;if(e>r)throw\"n bigger than A!\";let n=new f(s),o=new Array(e),h=c(0,r-1);for(let t=0,s=h.length;t<e;++t,--s){let e=n.random_int%s;o[t]=h.splice(e,1)[0]}return o.map((e=>t.row(e)))}}function d(t){let e;for(const s of t)null!=s&&(e<s||void 0===e&&s>=s)&&(e=s);return e}class p{constructor(t=null,e=(t=>t),s=\"min\"){return t?p.heapify(t,e,s):(this._accessor=e,this._container=[],this._comparator=\"min\"==s?(t,e)=>t<e:\"max\"==s?(t,e)=>t>e:s,this)}static heapify(t,e=(t=>t),s=\"min\"){const r=new p(null,e,s),i=r._container;for(const s of t)i.push({element:s,value:e(s)});for(let e=Math.floor(t.length/2-1);e>=0;--e)r._heapify_down(e);return r}_swap(t,e){const s=this._container;[s[e],s[t]]=[s[t],s[e]]}_heapify_up(){const t=this._container;let e=t.length-1;for(;e>0;){let s=Math.floor((e-1)/2);if(!this._comparator(t[e].value,t[s].value))break;this._swap(s,e),e=s}}push(t){const e={element:t,value:this._accessor(t)};return this._container.push(e),this._heapify_up(),this}_heapify_down(t=0){const e=this._container,s=this._comparator,r=e.length;let i=2*t+1,n=2*t+2,o=t;if(o>r)throw\"index higher than length\";i<r&&s(e[i].value,e[o].value)&&(o=i),n<r&&s(e[n].value,e[o].value)&&(o=n),o!==t&&(this._swap(t,o),this._heapify_down(o))}pop(){const t=this._container;if(0===t.length)return null;if(1===t.length)return t.pop();this._swap(0,t.length-1);const e=t.pop();return this._heapify_down(),e}get first(){return this._container.length>0?this._container[0]:null}*iterate(){for(let t=0,e=this._container.length;t<e;++t)yield this._container[t].element}toArray(){return this.data().sort(((t,e)=>this._comparator(t,e)?-1:0))}data(){return this._container.map((t=>t.element))}raw_data(){return this._container}get length(){return this._container.length}get empty(){return 0===this.length}}class m{constructor(e=null,s=t){return this._Node=class{constructor(t,e=null,s=null,r=null){this.pivot=t,this.child1=e,this.child2=s,this.radius=r}},this._Leaf=class{constructor(t){this.points=t}},this._metric=s,e&&this.add(e),this}add(t){return t=t.map(((t,e)=>({index:e,element:t}))),this._root=this._construct(t),this}_construct(t){if(1===t.length)return new this._Leaf(t);{let e,s=this._greatest_spread(t),r=t.sort(((t,e)=>t.element[s]-e.element[s])),i=r.length,n=Math.floor(i/2),o=t[n],h=r.slice(0,n),a=r.slice(n,i),_=Math.max(...t.map((t=>this._metric(o.element,t.element))));return e=h.length>0&&a.length>0?new this._Node(o,this._construct(h),this._construct(a),_):new this._Leaf(t),e}}_greatest_spread(t){let e=t[0].element.length,s=new Array(e);for(let t=0;t<e;++t)s[t]=[1/0,-1/0];let r=t.reduce(((t,s)=>{for(let r=0;r<e;++r)t[r][0]=Math.min(t[r][0],s.element[r]),t[r][1]=Math.max(t[r][1],s.element[r]);return t}),s);r=r.map((t=>t[1]-t[0]));let i=0;for(let t=0;t<e;++t)i=r[t]>r[i]?t:i;return i}search(t,e=5){return this._search(t,e,new p(null,(e=>this._metric(e.element,t)),\"max\"),this._root)}_search(t,e,s,r){if(s.length>=e&&r.pivot&&r.radius&&this._metric(t,r.pivot.element)-r.radius>=s.first.value)return s;if(r.child1&&this._search(t,e,s,r.child1),r.child2&&this._search(t,e,s,r.child2),r.points)for(let t=0,i=r.points.length;t<i;++t){let i=r.points[t];e>s.length?s.push(i):(s.push(i),s.pop())}return s}}function y(e){const[r,i]=e.shape,n=new _(r,i,\"identity\"),o=new _(i,i,0);for(let h=0;h<i;++h){let i=e.col(h);for(let t=0;t<h;++t){const e=n.col(t),r=s(e.map(((t,e)=>t*i[e])));o.set_entry(t,h,r),i=i.map(((t,s)=>t-r*e[s]))}const a=u(i,t);for(let t=0;t<r;++t)n.set_entry(t,h,i[t]/a);o.set_entry(h,h,a)}return{R:o,Q:n}}function w(t,e=2,r=100,i=1212){const n=i instanceof f?i:new f(i);t instanceof _||(t=_.from(t));const o=t.shape[0];let{Q:h,R:a}=y(new _(o,e,(()=>n.random)));for(;r--;){const e=a.clone(),i=y(t.dot(h));h=i.Q,a=i.R,s(a.sub(e).diag)/o<1e-12&&(r=0)}return{eigenvalues:a.diag,eigenvectors:h.transpose().to2dArray}}class g{get parameter_list(){return this._parameter_list}set parameter_list(t){return this._parameter_list=t,this}constructor(e,s=2,r=t,i=1212){if(Array.isArray(e))this._type=\"array\",this.X=_.from(e);else{if(!(e instanceof _))throw\"no valid type for X\";this._type=\"matrix\",this.X=e}return[this._N,this._D]=this.X.shape,this._d=s,this._metric=r,this._seed=i,this._randomizer=new f(i),this._is_initialized=!1,this}parameter(t,e=null){if(-1===this.parameter_list.findIndex((e=>e===t)))throw t+\" is not a valid parameter!\";return e?(this[\"_\"+t]=e,this):this[\"_\"+t]}para(t,e=null){return this.parameter(t,e)}p(t,e=null){return this.parameter(t,e)}transform(){return this.check_init(),this.Y}generator(){return this.transform()}check_init(){this._is_initialized||\"function\"!=typeof this.init||(this.init(),this._is_initialized=!0)}get projection(){return\"matrix\"===this._type?this.Y:this.Y.to2dArray}async transform_async(){return this.transform()}static transform(...t){return new this(...t).transform()}static async transform_async(...t){return this.transform(...t)}static*generator(...t){const e=new this(...t).generator();for(const t of e)yield t}}class x extends g{constructor(t,e=2){return super(t,e),this}transform(){let t=this.X,e=t.shape[1],s=new _(e,e,\"center\"),r=t.dot(s),i=r.transpose().dot(r),{eigenvectors:n}=w(i,this._d);return n=_.from(n).transpose(),this.Y=t.dot(n),this.projection}}class A extends g{constructor(e,s=2,r=t,i=1212){return super(e,s,r,i),this}transform(){const t=this.X,e=t.shape[0],s=this._metric;let r=new Float64Array(e),i=new Float64Array(e),n=0;const o=new _;o.shape=[e,e,(e,h)=>{if(e===h)return 0;const a=e<h?s(t.row(e),t.row(h)):o.entry(h,e);return r[e]+=a,i[h]+=a,n+=a,a}],this._d_X=o,r=r.map((t=>t/e)),i=i.map((t=>t/e)),n/=e**2;const h=new _(e,e,((t,e)=>o.entry(t,e)-r[t]-i[e]+n)),{eigenvectors:a}=w(h,this._d);return this.Y=_.from(a).transpose(),this.projection}get stress(){const e=this.X.shape[0],s=this.Y,r=this._d_X,i=new _;i.shape=[e,e,(e,r)=>e<r?t(s.row(e),s.row(r)):i.entry(r,e)];let n=0,o=0;for(let t=0;t<e;++t)for(let s=t+1;s<e;++s)n+=Math.pow(r.entry(t,s)-i.entry(t,s),2),o+=Math.pow(r.entry(t,s),2);return Math.sqrt(n/o)}}class M extends g{constructor(e,s,r=2,i=t,n=1212){return super(e,r,i,n),super.parameter_list=[\"k\"],this.parameter(\"k\",Math.min(s??Math.max(Math.floor(this.X.shape[0]/10),2),this._N-1)),this}transform(){this.check_init();const t=this.X,e=this._N,s=this._metric,r=new _;r.shape=[e,e,(e,i)=>e<=i?s(t.row(e),t.row(i)):r.entry(i,e)];const i=[];for(let t=0;t<e;++t){const s=[];for(let i=0;i<e;++i)s.push({index:i,distance:r.entry(t,i)});const n=new p(s,(t=>t.distance),\"min\");i.push(n.toArray().slice(1,this._k+1))}const n=new _(e,e,((t,e)=>{const s=i[t].find((t=>t.index===e));return s?s.distance:1/0}));for(let t=0;t<e;++t)for(let s=0;s<e;++s)for(let r=0;r<e;++r)n.set_entry(t,s,Math.min(n.entry(t,s),n.entry(t,r)+n.entry(r,s)));let o=new Float64Array(e),h=new Float64Array(e),a=0,l=new _(e,e,((t,e)=>{let s=n.entry(t,e);return s=s===1/0?0:s,o[t]+=s,h[e]+=s,a+=s,s}));o=o.map((t=>t/e)),h=h.map((t=>t/e)),a/=e**2;const c=new _(e,e,((t,e)=>l.entry(t,e)-o[t]-h[e]+a)),{eigenvectors:u}=w(c,this._d);return this.Y=_.from(u).transpose(),this.projection}}class v extends g{constructor(e,s=2,r=t,i=1212){return super(e,s,r,i),this}_choose_distant_objects(t){const e=this.X.shape[0];let s=this._randomizer.random_int%e-1,r=null,i=-1/0;for(let n=0;n<e;++n){const e=t(s,n);e>i&&(i=e,r=n)}i=-1/0;for(let n=0;n<e;++n){const e=t(r,n);e>i&&(i=e,s=n)}return[s,r,i]}transform(){const t=this.X,e=t.shape[0],s=this._d,r=this._metric,i=new _(e,s,0);let n=(e,s)=>r(t.row(e),t.row(s));for(let t=0;t<s;++t){let s=n;const[r,o,h]=this._choose_distant_objects(n);if(0!==h){for(let s=0;s<e;++s){const e=(n(r,s)**2+h**2-n(o,s)**2)/(2*h);i.set_entry(s,t,e)}n=(e,r)=>Math.sqrt(s(e,r)**2-(i.entry(e,t)-i.entry(r,t))**2)}}return this.Y=i,this.projection}}class b extends g{constructor(e,s,r=2,i=t,n=1212){return super(e,r,i,n),super.parameter_list=[\"labels\"],this.parameter(\"labels\",s),this}transform(){let t=this.X,[e,s]=t.shape,r=this._labels,i={},n=0;r.forEach(((e,s)=>{e in i?(i[e].count++,i[e].rows.push(t.row(s))):i[e]={id:n++,count:1,rows:[t.row(s)]}}));let o=t.mean,h=new _(n,s);for(let t in i){let e=_.from(i[t].rows).meanCols;for(let r=0;r<s;++r)h.set_entry(i[t].id,r,e[r])}let a=new _(s,s);for(let t in i){let e=h.row(i[t].id),r=new _(s,1,(t=>e[t]-o)),n=i[t].count;a=a.add(r.dot(r.transpose()).mult(n))}let l=new _(s,s);for(let t in i){let e=h.row(i[t].id),r=new _(s,1,(t=>e[t])),n=i[t].rows;for(let e=0,o=i[t].count;e<o;++e){let t=new _(s,1,((t,s)=>n[e][t]-r.entry(t,0)));l=l.add(t.dot(t.transpose()))}}let{eigenvectors:c}=w(l.inverse().dot(a),this._d);return c=_.from(c).transpose(),this.Y=t.dot(c),this.projection}}class z extends g{constructor(e,s,r=2,i=t,n=1212){return super(e,r,i,n),super.parameter_list=[\"k\"],this.parameter(\"k\",Math.min(s??Math.max(Math.floor(this._N/10),2),this._N-1)),this}transform(){const t=this.X,e=this._d,r=this._N,i=this._D,n=this.parameter(\"k\"),o=a(t,n,null,this._metric),h=new _(n,1,1),l=new _(r,r);for(let e=0;e<r;++e){const r=o[e],a=new _(n,i,((s,i)=>t.entry(r[s].j,i)-t.entry(e,i))),c=a.dot(a.T);if(n>i){const t=s(c.diag)/1e3;for(let e=0;e<n;++e)c.set_entry(e,e,c.entry(e,e)+t)}let u=_.solve_CG(c,h,this._randomizer);u=u.divide(u.sum);for(let t=0;t<n;++t)l.set_entry(e,r[t].j,u.entry(t,0))}const c=new _(r,r,\"identity\").sub(l),u=c.T.dot(c),{eigenvectors:f}=w(u.T.inverse(),e+1);return this.Y=_.from(f.slice(1,1+e)).T,this.projection}}class j extends g{constructor(e,s,r=2,i=t,n=1212){if(super(e,r,i,n),super.parameter_list=[\"k\"],this.parameter(\"k\",Math.min(s??Math.max(Math.floor(this._N/10),2),this._N-1)),this._D<=r)throw`Dimensionality of X (D = ${this._D}) must be greater than the required dimensionality of the result (d = ${r})!`;return this}transform(){const t=this.X,e=this._d,[s,r]=t.shape,i=this.parameter(\"k\"),n=a(t,i,null,this._metric),o=new _(r,r,\"center\"),h=new _(s,s,0);for(let r=0;r<s;++r){const s=[r,...n[r].map((t=>t.j))];let a=_.from(s.map((e=>t.row(e))));a=a.dot(o);const l=a.dot(a.transpose()),{eigenvectors:c}=w(l,e),u=_.from(c),f=u.transpose().dot(u).add(1/Math.sqrt(i+1));for(let t=0;t<i+1;++t)for(let e=0;e<i+1;++e)h.set_entry(s[t],s[e],h.entry(s[t],s[e])-(t===e?1:0)+f.entry(t,e))}const{eigenvectors:l}=w(h,e+1);return this.Y=_.from(l.slice(1)).transpose(),this.projection}}class k extends g{constructor(e,s=50,r=10,i=2,n=t,o=1212){return super(e,i,n,o),super.parameter_list=[\"perplexity\",\"epsilon\"],[this._N,this._D]=this.X.shape,this.parameter(\"perplexity\",Math.min(s,this._N-1)),this.parameter(\"epsilon\",r),this._iter=0,this.Y=new _(this._N,this._d,(()=>this._randomizer.random)),this}init(t=null){const e=Math.log(this._perplexity),s=this._N,r=this._D,i=this._metric,n=this.X;let o;if(t)o=t;else{o=new _(s,s);for(let t=0;t<s;++t){const e=n.row(t);for(let r=t+1;r<s;++r){const s=i(e,n.row(r));o.set_entry(t,r,s),o.set_entry(r,t,s)}}}const h=new _(s,s,\"zeros\");this._ystep=new _(s,r,\"zeros\"),this._gains=new _(s,r,1);let a=new Array(s).fill(0);for(let t=0;t<s;++t){let r=-1/0,i=1/0,n=1,_=!1,l=0;for(;!_;){let h=0;for(let e=0;e<s;++e){let s=Math.exp(-o.entry(t,e)*n);t===e&&(s=0),a[e]=s,h+=s}let c=0;for(let t=0;t<s;++t){let e=0===h?0:a[t]/h;a[t]=e,e>1e-7&&(c-=e*Math.log(e))}c>e?(r=n,n=i===1/0?2*n:(n+i)/2):(i=n,n=r===-1/0?n/2:(n+r)/2),++l,Math.abs(c-e)<1e-4&&(_=!0),l>=50&&(_=!0)}for(let e=0;e<s;++e)h.set_entry(t,e,a[e])}const l=new _(s,s,\"zeros\"),c=2*s;for(let t=0;t<s;++t)for(let e=t;e<s;++e){const s=Math.max((h.entry(t,e)+h.entry(e,t))/c,1e-100);l.set_entry(t,e,s),l.set_entry(e,t,s)}return this._P=l,this}transform(t=500){this.check_init();for(let e=0;e<t;++e)this.next();return this.projection}*generator(){for(this.check_init();;)this.next(),yield this.projection}next(){const t=++this._iter,e=this._P,s=this._ystep,r=this._gains,i=this._N,n=this._epsilon,o=this._d;let h=this.Y;const a=t<100?4:1,l=new _(i,i,\"zeros\");let c=0;for(let t=0;t<i;++t)for(let e=t+1;e<i;++e){let s=0;for(let r=0;r<o;++r){const i=h.entry(t,r)-h.entry(e,r);s+=i*i}const r=1/(1+s);l.set_entry(t,e,r),l.set_entry(e,t,r),c+=2*r}const u=new _(i,i,0);for(let t=0;t<i;++t)for(let e=t+1;e<i;++e){const s=Math.max(l.entry(t,e)/c,1e-100);u.set_entry(t,e,s),u.set_entry(e,t,s)}const f=new _(i,o,\"zeros\");for(let t=0;t<i;++t)for(let s=0;s<i;++s){const r=4*(a*e.entry(t,s)-u.entry(t,s))*l.entry(t,s);for(let e=0;e<o;++e)f.set_entry(t,e,f.entry(t,e)+r*(h.entry(t,e)-h.entry(s,e)))}let d=new Float64Array(o);for(let e=0;e<i;++e)for(let i=0;i<o;++i){const o=f.entry(e,i),a=s.entry(e,i),_=r.entry(e,i);let l=Math.sign(o)===Math.sign(a)?.8*_:_+.2;l<.01&&(l=.01),r.set_entry(e,i,l);const c=(t<250?.5:.8)*a-n*l*o;s.set_entry(e,i,c),h.set_entry(e,i,h.entry(e,i)+c),d[i]+=h.entry(e,i)}for(let t=0;t<i;++t)for(let e=0;e<2;++e)h.set_entry(t,e,h.entry(t,e)-d[e]/i);return this.Y}}function N(t,e,s=300){const r=e.length;let i=.001,n=1e4,o=e.slice(),h=t(o),a=!1;for(;s-- >=0&&!a;){a=!0;for(let e=0;e<r;++e){o[e]+=1e-6;let s=t(o);o[e]-=1e-6;let r=(s-h)/1e-6;Math.abs(r)>.01&&(a=!1),o[e]-=i*r,h=t(o)}i*=n>=h?1.05:.4,n=h}return o}class Y extends g{constructor(e,s=15,r=1,i=1,n=2,o=t,h=1212){return super(e,n,o,h),super.parameter_list=[\"n_neighbors\",\"local_connectivity\",\"min_dist\"],[this._N,this._D]=this.X.shape,s=Math.min(this._N-1,s),this.parameter(\"n_neighbors\",s),this.parameter(\"local_connectivity\",Math.min(r,s-1)),this.parameter(\"min_dist\",i),this._iter=0,this._spread=1,this._set_op_mix_ratio=1,this._repulsion_strength=1,this._negative_sample_rate=5,this._n_epochs=350,this._initial_alpha=1,this.Y=new _(this._N,this._d,(()=>this._randomizer.random)),this}_find_ab_params(t,e){const r=c(0,3*t,300),i=c(0,3*t,300);for(let s=0,n=r.length;s<n;++s){const n=r[s];i[s]=n<e?1:Math.exp(-(n-e)/t)}return N((t=>{const e=c(1,300).map(((e,s)=>{return i[s]-(n=r[s],o=t[0],h=t[1],1/(1+o*Math.pow(n,2*h)));var n,o,h}));return Math.sqrt(s(e.map((t=>t*t))))}),[1,1])}_compute_membership_strengths(t,e,s){for(let r=0,i=t.length;r<i;++r)for(let i=0,n=t[r].length;i<n;++i){const n=t[r][i].value-s[r];t[r][i].value=n>0?Math.exp(-n/e[r]):1}return t}_smooth_knn_dist(t,e){const s=1e-5,r=.001,i=this._local_connectivity,n=Math.log2(e),o=[],h=[],a=this.X,_=[...a].map((s=>t.search(s,e).raw_data().reverse()));for(let t=0,l=a.shape[0];t<l;++t){let a=0,l=1/0,c=1;const u=_[t],f=u.filter((t=>t.value>0)),d=f.length;if(d>=i){const e=Math.floor(i),r=i-e;e>0?(o.push(f[e-1]),r>s&&(o[t].value+=r*(f[e].value-f[e-1]))):o[t].value=r*f[0].value}else d>0&&(o[t]=f[d-1].value);for(let r=0;r<64;++r){let r=0;for(let s=0;s<e;++s){const e=u[s].value-o[t];r+=e>0?Math.exp(-e/c):1}if(Math.abs(r-n)<s)break;r>n?[l,c]=[c,(a+l)/2]:[a,c]=l===1/0?[c,2*c]:[c,(a+l)/2]}h[t]=c;const p=u.reduce(((t,e)=>t+e.value),0)/u.length;if(o[t]>0)h[t]<r*p&&(h[t]=r*p);else{const e=_.reduce(((t,e)=>t+e.reduce(((t,e)=>t+e.value),0)/e.length));h[t]>r*e&&(h[t]=r*e)}}return{distances:_,sigmas:h,rhos:o}}_fuzzy_simplicial_set(e,s){const r=e.shape[0],i=new m(e.to2dArray,t);let{distances:n,sigmas:o,rhos:h}=this._smooth_knn_dist(i,s);n=this._compute_membership_strengths(n,o,h);const a=new _(r,r,\"zeros\");for(let t=0;t<r;++t){const e=n[t];for(let s=0;s<e.length;++s)a.set_entry(t,e[s].element.index,e[s].value)}const l=a.T,c=a.mult(l);return a.add(l).sub(c).mult(this._set_op_mix_ratio).add(c.mult(1-this._set_op_mix_ratio))}_make_epochs_per_sample(t){const e=this._weights,s=new Float32Array(e.length).fill(-1),r=d(e),i=e.map((e=>t*(e/r)));for(let e=0;e<s.length;++e)i[e]>0&&(s[e]=Math.round(t/i[e]));return s}_tocoo(t){const e=[],s=[],r=[],[i,n]=t.shape;for(let o=0;o<i;++o)for(let i=0;i<n;++i){const n=t.entry(o,i);0!==n&&(e.push(o),s.push(i),r.push(n))}return{rows:e,cols:s,data:r}}init(){const[t,e]=this._find_ab_params(this._spread,this._min_dist);this._a=t,this._b=e,this._graph=this._fuzzy_simplicial_set(this.X,this._n_neighbors);const{rows:s,cols:r,data:i}=this._tocoo(this._graph);return this._head=s,this._tail=r,this._weights=i,this._epochs_per_sample=this._make_epochs_per_sample(this._n_epochs),this._epochs_per_negative_sample=this._epochs_per_sample.map((t=>t*this._negative_sample_rate)),this._epoch_of_next_sample=this._epochs_per_sample.slice(),this._epoch_of_next_negative_sample=this._epochs_per_negative_sample.slice(),this}set local_connectivity(t){this._local_connectivity=t}get local_connectivity(){return this._local_connectivity}set min_dist(t){this._min_dist=t}get min_dist(){return this._min_dist}graph(){return this.check_init(),{cols:this._head,rows:this._tail,weights:this._weights}}transform(t){this.check_init(),t=t||this._n_epochs;for(let e=0;e<t;++e)this.next();return this.projection}*generator(){for(this.check_init(),this._iter=0;this._iter<this._n_epochs;)this.next(),yield this.projection;return this.projection}_clip(t){return t>4?4:t<-4?-4:t}_optimize_layout(t,e,s,i){const{_d:n,_alpha:o,_repulsion_strength:h,_a:a,_b:_,_epochs_per_sample:l,_epochs_per_negative_sample:c,_epoch_of_next_negative_sample:u,_epoch_of_next_sample:f,_clip:d}=this,p=i.length;for(let m=0,y=l.length;m<y;++m)if(f[m]<=this._iter){const y=s[m],w=i[m],g=t.row(y),x=e.row(w),A=r(g,x);let M=0;A>0&&(M=-2*a*_*Math.pow(A,_-1)/(a*Math.pow(A,_)+1));for(let s=0;s<n;++s){const r=d(M*(g[s]-x[s]))*o,i=g[s]+r,n=x[s]-r;g[s]=i,x[s]=n,t.set_entry(y,s,i),e.set_entry(w,s,n)}f[m]+=l[m];const v=(this._iter-u[m])/c[m];for(let s=0;s<v;++s){const s=Math.floor(this._randomizer.random*p),l=e.row(i[s]),c=r(g,l);let u=0;if(c>0)u=2*h*_/((.01+c)*(a*Math.pow(c,_)+1));else if(y===s)continue;for(let r=0;r<n;++r){const n=d(u*(g[r]-l[r]))*o,h=g[r]+n,a=l[r]-n;g[r]=h,l[r]=a,t.set_entry(y,r,h),e.set_entry(i[s],r,a)}}u[m]+=v*c[m]}return t}next(){let t=++this._iter,e=this.Y;return this._alpha=this._initial_alpha*(1-t/this._n_epochs),this.Y=this._optimize_layout(e,e,this._head,this._tail),this.Y}}class F extends g{constructor(e,s=500,r=5,i=2,n=t,o=1212){return super(e,i,n,o),super.parameter_list=[\"weight_adj\",\"c\"],this.parameter(\"weight_adj\",s),this.parameter(\"c\",r),this}init(t=null,e=null){const s=this.X,r=s.shape[0],i=this._d,n=this._metric,o=this._c;this.n_inliers=2*o,this.n_outliers=1*o,this.n_random=1*o,this.Y=t||new x(s,i).transform(),this.knn=e||new m(s.to2dArray,n);const{triplets:h,weights:a}=this._generate_triplets(this.n_inliers,this.n_outliers,this.n_random);return this.triplets=h,this.weights=a,this.lr=1e3*r/h.shape[0],this.C=1/0,this.tol=1e-7,this.vel=new _(r,i,0),this.gain=new _(r,i,1),this}_generate_triplets(t,e,s){const r=this._metric,i=this._weight_adj,n=this.X,o=n.shape[0],h=this.knn,a=Math.min(t+20,o),l=new _(o,a),c=new _(o,a);for(let t=0;t<o;++t)h.search(n.row(t),a+1).raw_data().filter((t=>0!=t.value)).sort(((t,e)=>t.value-e.value)).forEach(((e,s)=>{l.set_entry(t,s,e.element.index),c.set_entry(t,s,e.value)}));const u=new Float64Array(o);for(let t=0;t<o;++t)u[t]=Math.max((c.entry(t,3)+c.entry(t,4)+c.entry(t,5)+c.entry(t,6))/4,1e-10);const f=this._find_p(c,u,l);let d=this._sample_knn_triplets(f,l,t,e),p=d.shape[0];const m=new Float64Array(p);for(let t=0;t<p;++t){const e=d.entry(t,0),s=d.entry(t,2);m[t]=r(n.row(e),n.row(s))}let y=this._find_weights(d,f,l,m,u);if(s>0){const{random_triplets:t,random_weights:e}=this._sample_random_triplets(n,s,u);d=d.concat(t,\"vertical\"),y=Float64Array.from([...y,...e])}p=d.shape[0];let w=-1/0;for(let t=0;t<p;++t)isNaN(y[t])&&(y[t]=0),w<y[t]&&(w=y[t]);let g=-1/0;for(let t=0;t<p;++t)y[t]/=w,y[t]+=1e-4,y[t]=Math.log(1+i*y[t]),g<y[t]&&(g=y[t]);for(let t=0;t<p;++t)y[t]/=g;return{triplets:d,weights:y}}_find_p(t,e,s){const[r,i]=t.shape;return new _(r,i,((r,i)=>Math.exp(-(t.entry(r,i)**2)/e[r]/e[s.entry(r,i)])))}_sample_knn_triplets(t,e,s,r){const i=e.shape[0],n=new _(i*s*r,3);for(let o=0;o<i;++o){let h=o*s*r;const a=this.__argsort(t.row(o).map((t=>-t)));for(let t=0;t<s;++t){let s=t*r;const _=e.entry(o,a[t]),l=this._rejection_sample(r,i,a.slice(0,t+1));for(let t=0;t<r;++t){const e=h+s+t,r=l[t];n.set_entry(e,0,o),n.set_entry(e,1,_),n.set_entry(e,2,r)}}}return n}__argsort(t){return t.map(((t,e)=>({d:t,i:e}))).sort(((t,e)=>t.d-e.d)).map((t=>t.i))}_rejection_sample(t,e,s){const r=this._randomizer,i=c(0,e-1).filter((t=>s.indexOf(t)<0));return r.choice(i,Math.min(t,i.length-2))}_find_weights(t,e,s,r,i){const n=t.shape[0],o=new Float64Array(n);for(let h=0;h<n;++h){const n=t.entry(h,0),a=s.row(n).indexOf(t.entry(h,1)),_=e.entry(n,a);let l=Math.exp(-(r[h]**2)/(i[n]*i[t.entry(h,2)]));l<1e-20&&(l=1e-20),o[h]=_/l}return o}_sample_random_triplets(t,e,s){const r=this._metric,i=this._randomizer,n=t.shape[0],o=new _(n*e,3),h=new Float64Array(n*e);for(let a=0;a<n;++a){const _=a*e,l=[...c(0,a-1),...c(a+1,n-1)];for(let n=0;n<e;++n){let[e,c]=i.choice(l,2),u=Math.exp(-(r(t.row(a),t.row(e))**2)/(s[a]*s[e]));u<1e-20&&(u=1e-20);let f=Math.exp(-(r(t.row(a),t.row(c))**2)/(s[a]*s[c]));f<1e-20&&(f=1e-20),u<f&&([e,c]=[c,e],[u,f]=[f,u]);const d=_+n;o.set_entry(d,0,a),o.set_entry(d,1,e),o.set_entry(d,2,c),h[d]=u/f}}return{random_triplets:o,random_weights:h}}_grad(t){const e=this.n_inliers,s=this.n_outliers,r=this.triplets,i=this.weights,[n,o]=t.shape,h=r.shape[0],a=new _(n,o,0);let l=new Array(o).fill(0),c=new Array(o).fill(0),u=1,f=1,d=0,p=0;const m=n*e*s;for(let e=0;e<h;++e){const[n,h,_]=r.row(e);if(e%s==0||e>=m){u=1,f=1;for(let e=0;e<o;++e){const s=t.entry(n,e),r=t.entry(h,e),i=t.entry(_,e);l[e]=s-r,c[e]=s-i,u+=l[e]**2,f+=c[e]**2}}else{f=1;for(let e=0;e<o;++e){const s=t.entry(n,e),r=t.entry(_,e);c[e]=s-r,f+=c[e]**2}}u>f&&++d,p+=i[e]/(1+f/u);const y=(i[e]/(u+f))**2;for(let t=0;t<o;++t){const e=l[t]*f*y,s=c[t]*u*y;a.set_entry(n,t,a.entry(n,t)+e-s),a.set_entry(h,t,a.entry(h,t)-e),a.set_entry(_,t,a.entry(_,t)+s)}}return{grad:a,loss:p,n_viol:d}}transform(t=400){this.check_init();for(let e=0;e<t;++e)this._next(e);return this.projection}*generator(){this.check_init();for(let t=0;t<800;++t)this._next(t),yield this.projection;return this.projection}_next(t){const e=t>150?.5:.3,s=this.C,r=this.vel,i=this.Y.add(r.mult(e)),{grad:n,loss:o,n_viol:h}=this._grad(i);return this.C=o,this.Y=this._update_embedding(i,t,n),this.lr*=s>o+this.tol?1.01:.9,this.Y}_update_embedding(t,e,s){const[r,i]=t.shape,n=e>150?.9:.5,o=this.gain,h=this.vel,a=this.lr;for(let e=0;e<r;++e)for(let r=0;r<i;++r){const i=Math.sign(h.entry(e,r))!=Math.sign(s.entry(e,r))?o.entry(e,r)+.2:Math.max(.8*o.entry(e,r),.01);o.set_entry(e,r,i),h.set_entry(e,r,n*h.entry(e,r)-a*o.entry(e,r)*s.entry(e,r)),t.set_entry(e,r,t.entry(e,r)+h.entry(e,r))}return t}}class E{constructor(e,s=\"single\",r=t){return this._id=0,this._matrix=e,this._metric=r,this._linkage=s,this.init(),this.root=this.do(),this}get_clusters(t,e=\"distance\"){let s,r=[];switch(e){case\"distance\":s=t=>t.dist;break;case\"depth\":s=t=>t.depth;break;default:throw\"invalid type\"}return this._traverse(this.root,s,t,r),r}_traverse(t,e,s,r){e(t)<=s?r.push(t.leaves()):(this._traverse(t.left,e,s,r),this._traverse(t.right,e,s,r))}init(){const t=this._metric,e=this._matrix,s=this._n=e.shape[0],r=this._d_min=new Float64Array(s),i=this._distance_matrix=new Array(s);for(let n=0;n<s;++n){r[n]=0,i[n]=new Float64Array(s);for(let o=0;o<s;++o)i[n][o]=n===o?1/0:t(e.row(n),e.row(o)),i[n][r[n]]>i[n][o]&&(r[n]=o)}const n=this._clusters=new Array(s),o=this._c_size=new Uint16Array(s);for(let t=0;t<s;++t)n[t]=[],n[t][0]=new D(this._id++,null,null,0,e.row(t),t,1,0),o[t]=1;return this}do(){const t=this._n,e=this._d_min,s=this._distance_matrix,r=this._clusters,i=this._c_size,n=this._linkage;let o=null;for(let h=0,a=t-1;h<a;++h){let h=0;for(let r=0;r<t;++r)s[r][e[r]]<s[h][e[h]]&&(h=r);let a=e[h],_=r[h][0],l=r[a][0],c=new D(this._id++,_,l,s[h][a]);r[h].unshift(c),i[h]+=i[a];for(let e=0;e<t;++e)switch(n){case\"single\":s[h][e]>s[a][e]&&(s[e][h]=s[h][e]=s[a][e]);break;case\"complete\":s[h][e]<s[a][e]&&(s[e][h]=s[h][e]=s[a][e]);break;case\"average\":s[e][h]=s[h][e]=(i[h]*s[h][e]+i[a]*s[a][e])/(i[h]+i[e])}s[h][h]=1/0;for(let e=0;e<t;++e)s[e][a]=s[a][e]=1/0;for(let r=0;r<t;++r)e[r]===a&&(e[r]=h),s[h][r]<s[h][e[h]]&&(e[h]=r);o=c}return o}}class D{constructor(t,e,s,r,i,n,o,h){return this.id=t,this.left=e,this.right=s,this.dist=r,this.index=n,this.size=null!=o?o:e.size+s.size,this.depth=null!=h?h:1+Math.max(e.depth,s.depth),this.centroid=null!=i?i:this._calculate_centroid(e,s),this}_calculate_centroid(t,e){const s=t.size,r=e.size,i=t.centroid,n=e.centroid,o=this.size,h=t.centroid.length,a=new Float64Array(h);for(let t=0;t<h;++t)a[t]=(s*i[t]+r*n[t])/o;return a}get isLeaf(){return 0===this.depth}leaves(){if(this.isLeaf)return[this.index];const t=this.left,e=this.right;return(t.isLeaf?[t.index]:t.leaves()).concat(e.isLeaf?[e.index]:e.leaves())}}class ${constructor(e,s,r=t,i=1987,n=!0){this._metric=r,this._matrix=e,this._K=s;const[o,h]=e.shape;return this._N=o,this._D=h,s>o&&(s=o),this._randomizer=new f(i),this._clusters=new Array(o).fill(void 0),this._cluster_centroids=this._get_random_centroids(s),n&&this.init(s,this._cluster_centroids),this}get_clusters(){const t=this._K,e=this._clusters,s=new Array(t).fill().map((()=>new Array));return e.forEach(((t,e)=>s[t].push(e))),s}_furthest_point(t,e){const s=this._matrix,r=this._metric;let i=t.length;return p.heapify(e,(e=>{const n=s.row(e);let o=0;for(let e=0;e<i;++e)o+=r(n,t[e]);return o}),\"max\").pop().element}_get_random_centroids(t){const e=this._N,s=this._randomizer,r=this._matrix,i=new Array(t).fill(),n=c(0,e-1),o=s.random_int%(e-1);i[0]=r.row(o);const h=[o],a=Math.floor((e-t)/t);for(let e=1;e<t;++e){const t=s.choice(n.filter((t=>-1==h.indexOf(t))),a),o=this._furthest_point(i.slice(0,e),t);h.push(o),i[e]=r.row(o)}return i}_iteration(t){const e=t.length,s=this._N,r=this._D,i=this._matrix,n=this._metric,o=this._clusters;let h=!1;for(let r=0;r<s;++r){const s=i.row(r);let a=1/0,_=null;for(let r=0;r<e;++r){let e=n(t[r],s);e<a&&(a=e,_=r)}o[r]!==_&&(h=!0),o[r]=_}for(let s=0;s<e;++s){const e=t[s];for(let t=0;t<r;++t)e[t]=0}return this._compute_centroid(t),{clusters_changed:h,cluster_centroids:t}}_compute_centroid(t){const e=t.length,s=this._N,r=this._D,i=this._matrix,n=this._clusters,o=new Array(e).fill(0);for(let e=0;e<s;++e){const s=i.row(e),h=n[e];o[h]++;const a=t[h];for(let t=0;t<r;++t)a[t]+=s[t]}for(let s=0;s<e;++s){const e=o[s];t[s]=t[s].map((t=>t/e))}}init(t,e){t||(t=this._K),e||(e=this._get_random_centroids(t));let s=!1;do{const t=this._iteration(e);e=t.cluster_centroids,s=t.clusters_changed}while(s)}}class L{constructor(e,s,r=null,i=t,n=1212){this._metric=i,this._matrix=e,this._A=this._matrix.to2dArray,this._K=s;const[o,h]=e.shape;return this._N=o,this._D=h,this._max_iter=r||10*Math.log10(o),this._distance_matrix=new _(o,o,\"zeros\"),s>o&&(s=o),this._randomizer=new f(n),this._clusters=new Array(o).fill(void 0),this._cluster_medoids=this._get_random_medoids(s),this._is_initialized=!1,this}get_clusters(){const t=this._K,e=this._A;this._is_initialized||this.init(t,this._cluster_medoids);const s=new Array(t).fill().map((()=>new Array));return e.forEach(((t,e)=>{s[this._nearest_medoid(t,e).index_nearest].push(e)})),s.medoids=this._cluster_medoids,s}async*generator(){const t=this._max_iter;yield this.get_clusters();let e=!1,s=0;do{e=this._iteration(),yield this.get_clusters()}while(!e&&++s<t)}_iteration(){const t=this._A,e=this._K,s=this._cluster_medoids,r=t.map(((t,e)=>this._nearest_medoid(t,e))),i=new Array(e).fill(0),n=new Array(e).fill(null);if(t.forEach(((o,h)=>{if(s.findIndex((t=>t===h))<0){const s=r[h].distance_nearest,a=new Array(e).fill(-s);t.forEach(((t,s)=>{if(h===s)return;const i=this._get_distance(s,h,t,o),{index_nearest:n,distance_nearest:_,distance_second:l}=r[s];if(a[n]+=Math.min(i,l)-_,i<_)for(let t=0;t<e;++t)t!==n&&(a[t]+=i-_)})),a.map(((t,e)=>[t,e])).filter((([t,e])=>t<i[e])).forEach((([t,e])=>{t<i[e]&&(i[e]=t,n[e]=h)}))}})),Math.min(...i)>=0)return!0;for(;Math.min(...i)<0;){const e=i.map(((t,e)=>[t,e])).sort((([t],[e])=>t-e))[0][1];0==s.filter((t=>t==n[e])).length&&(s[e]=n[e]),i[e]=0,i.map(((t,e)=>[t,e])).filter((([t])=>t<0)).forEach((([n,o])=>{const h=t[o];let a=0;t.forEach(((t,i)=>{s.findIndex((t=>t!=o&&t==i))>=0||e!=o&&(r[i].index_nearest===s[o]?a+=Math.min(this._get_distance(i,o,t,h),r[i].distance_second)-r[i].distance_nearest:a+=Math.min(this._get_distance(i,o,t,h)-r[i].distance_nearest,0))})),i[o]=a}))}return this._cluster_medoids=s,!1}_get_distance(t,e,s=null,r=null){if(t===e)return 0;const i=this._distance_matrix,n=this._A,o=this._metric;let h=i.entry(t,e);return 0===h&&(h=o(s||n[t],r||n[e]),i.set_entry(t,e,h),i.set_entry(e,t,h)),h}_nearest_medoid(t,e){const s=this._cluster_medoids,r=this._A,[i,n]=s.map(((s,i)=>{const n=r[s];return[this._get_distance(e,s,t,n),i]})).sort(((t,e)=>t[0]-e[0]));return{distance_nearest:i[0],index_nearest:i[1],distance_second:n[0],index_second:n[1]}}init(t,e){t||(t=this._K),e||(e=this._get_random_medoids(t));const s=this._max_iter;let r=!1,i=0;do{r=this._iteration()}while(!r&&++i<s);return this}_get_random_medoids(t){const e=this._N,s=this._A,r=c(0,e-1),i=this._randomizer,n=Math.min(e,10+Math.ceil(Math.sqrt(e))),o=new Array(n).fill(1/0),h=[];let a=1/0,_=i.choice(r,n);for(let t=0;t<n;++t){const e=_[t],r=s[e];for(let e=0;e<n;++e){if(e===t)continue;const i=s[_[e]];o[t]+=this._get_distance(t,e,r,i)}o[t]<a&&(a=o[t],h.push(e))}for(let e=1;e<t;++e){let t=1/0;_=i.choice(r.filter((t=>h.findIndex((e=>e===t))<0)),n);for(let e=0;e<n;++e){let r=0;const i=_[e],o=s[i];for(let t=0;t<n;++t){if(t===e)continue;const n=_[t],a=s[n];let l=this._get_distance(i,n,o,a)-Math.min(...h.map((t=>this._get_distance(n,t,a))));l<0&&(r+=l)}r<t&&(t=r,h.push(i))}a+=t}return h.slice(0,t)}}class T{constructor(e,s,r,i=t){return this._matrix=e,this._epsilon=s,this._min_points=r,this._metric=i,this._ordered_list=[],this._clusters=[],this._DB=new Array(e.shape[0]).fill(),this.init(),this}init(){const t=this._ordered_list,e=this._matrix,s=e.shape[0],r=this._DB,i=this._clusters;let n=this._cluster_index=0;for(let t=0;t<s;++t)r[t]={element:e.row(t),index:t,reachability_distance:void 0,processed:!1};for(const e of r)if(!e.processed&&(e.neighbors=this._get_neighbors(e),e.processed=!0,i.push([e.index]),n=i.length-1,t.push(e),null!=this._core_distance(e))){const t=new p(null,(t=>t.reachability_distance),\"min\");this._update(e,t),this._expand_cluster(t,i[n])}return this}_get_neighbors(t){if(\"neighbors\"in t)return t.neighbors;const e=this._DB,s=this._metric,r=this._epsilon,i=[];for(const n of e)n.index!=t.index&&s(t.element,n.element)<r&&i.push(n);return i}_core_distance(t){const e=this._min_points,s=this._metric;if(!(t.neighbors&&t.neighbors.length<=e))return s(t.element,t.neighbors[e].element)}_update(t,e){const s=this._metric,r=this._core_distance(t),i=this._get_neighbors(t);for(const n of i){if(n.processed)continue;const i=Math.max(r,s(t.element,n.element));e.raw_data().findIndex((t=>t.element==n))<0?(n.reachability_distance=i,e.push(n)):i<n.reachability_distance&&(n.reachability_distance=i,e=p.heapify(e.data(),(t=>t.reachability_distance),\"min\"))}}_expand_cluster(t,e){const s=this._ordered_list;for(;!t.empty;){const r=t.pop().element;r.neighbors=this._get_neighbors(r),r.processed=!0,e.push(r.index),s.push(r),null!=this._core_distance(r)&&(this._update(r,t),this._expand_cluster(t,e))}}get_clusters(){const t=[],e=[],s=this._min_points;for(const r of this._clusters)r.length<s?e.push(...r):t.push(r);return t.push(e),t}get_cluster_affirmation(){const t=this._matrix.shape[0],e=new Array(t).fill(),s=this.get_clusters();for(let t=0,r=s.length;t<r;++t){const i=s[t];for(const s of i)e[s]=t<r-1?t:-1}return e}}class B extends g{constructor(e,s,r,i=2,n=t,o=1212){return super(e,i,n,o),super.parameter_list=[\"k\",\"control_points\"],this.parameter(\"k\",Math.min(s??Math.max(Math.floor(this._N/10),2),this._N-1)),this.parameter(\"control_points\",Math.min(r??Math.ceil(Math.sqrt(this._N)),this._N-1)),this._is_initialized=!1,this}init(t=A,e=[],s=m){if(this._is_initialized)return this;const r=this.X,i=this._N,n=this.parameter(\"k\"),o=this._d,h=this._metric,a=this.parameter(\"control_points\"),l=new L(r,a,null,h).get_clusters().medoids,c=new _(a,i,\"zeros\");l.forEach(((t,e)=>{c.set_entry(e,t,1)}));const u=new t(_.from(l.map((t=>r.row(t)))),...e,o).transform(),f=r.to2dArray,d=new s(f,h),p=new _(i,i,\"I\"),y=-1/n;f.forEach(((t,e)=>{for(const{index:s}of d.search(t,n).iterate())e!==s&&p.set_entry(e,s,y)}));const w=p.concat(c,\"vertical\"),g=new _(i,o,\"zeros\").concat(u,\"vertical\");return this._A=w,this._b=g,this._is_initialized=!0,this}transform(){this.check_init();const t=this._A,e=t.T,s=this._b,r=e.dot(t),i=e.dot(s);return this.Y=_.solve_CG(r,i,this._randomizer),this.projection}}class K extends g{constructor(e,s=2,r=t,i=1212){return super(e,s,r,i),super.parameter_list=[],[this._N,this._D]=this.X.shape,this._distance_matrix=new _(this._N,this._N,0),this}__lazy_distance_matrix(t,e,s){const r=this._distance_matrix,i=this.X,n=r.entry(t,e);if(0===n){let n=s(i.row(t),i.row(e));return r.set_entry(t,e,n),r.set_entry(e,t,n),n}return n}_make_minimum_spanning_tree(e=t){const s=this._N,r=[...this.X];let i=new q(r);const n=[];let o=[];for(let t=0;t<s;++t)for(let r=t+1;r<s;++r)o.push([t,r,this.__lazy_distance_matrix(t,r,e)]);o=o.sort(((t,e)=>t[2]-e[2]));for(const[t,e,s]of o){const o=i.find(r[t]),h=i.find(r[e]);o!==h&&(n.push([t,e,s]),i.union(o,h))}return n.sort(((t,e)=>t[2]-e[2]))}init(){return this.Y=new _(this._N,this._d,0),this._Emst=this._make_minimum_spanning_tree(this._metric),this._is_initialized=!0,this}__hull_cross([t,e],[s,r],[i,n]){return(s-t)*(n-e)-(r-e)*(i-t)<=0}__hull(t){const e=t.sort((([t,e],[s,r])=>e-r||t-s)),s=e.length;if(s<=2)return e;const r=[];for(let t=0;t<s;++t){for(;r.length>=2&&this.__hull_cross(r[r.length-2],r[r.length-1],e[t]);)r.pop();r.push(e[t])}const i=[];for(let t=s-1;t>=0;--t){for(;i.length>=2&&this.__hull_cross(i[i.length-2],i[i.length-1],e[t]);)i.pop();i.push(e[t])}return i.pop(),r.pop(),r.concat(i)}__findAngle([e,s],[r,i]){const n=t([e,s],[r,i]);if(0===n)return{sin:0,cos:1};const o=[(r-e)/n,(i-s)/n],h=o[0];let a=Math.sqrt(1-h*h);return a=o[1]>=0?-a:a,{sin:a,cos:h}}__align_hull(e,s,r){let i,n,o,h=-1;for(let r=0;r<e.length;++r){const n=t(e[r],s);(-1===h||i>n)&&(i=n,h=r)}r?(n=e[h],o=e[(h+1)%e.length]):(0==h&&(h=e.length-1),n=e[h],o=e[(h-1)%e.length]);const a={tx:-e[h][0],ty:-e[h][1]};if(e.length>=2){const{sin:t,cos:e}=this.__findAngle(n,o);a.sin=t,a.cos=e}else a.sin=0,a.cos=1;return a}__transform([t,e],{tx:s,ty:r,sin:i,cos:n}){let o=t+s,h=e+r;return[o*n-h*i,o*i+h*n]}__transform_component(t,e,s){const r=t.length;for(let i=0;i<r;++i){const r=t[i],[n,o]=this.__transform(r,e);r[0]=n,r[1]=o+s}}__align_components=(t,e,s)=>{const r=[...t.__disjoint_set.children],i=[...e.__disjoint_set.children],n=this.__hull(r),o=this.__hull(i),h=this.__align_hull(n,t,!1),a=this.__align_hull(o,e,!0);this.__transform_component(r,h,0),this.__transform_component(i,a,s)};transform(){this._is_initialized||this.init();const t=this._Emst,e=[...this.Y],s=new q(e.map(((t,e)=>(t.i=e,t))));for(const[r,i,n]of t){const t=s.find(e[r]),o=s.find(e[i]);t!==o&&(this.__align_components(t,o,n),s.union(t,o))}return this.projection}*generator(){this._is_initialized||this.init();const t=this._Emst,e=[...this.Y],s=new q(e.map(((t,e)=>(t.i=e,t))));for(const[r,i,n]of t){const t=s.find(e[r]),o=s.find(e[i]);t!==o&&(this.__align_components(t,o,n),s.union(t,o),yield this.projection)}return this.projection}}class q{constructor(t=null){if(this._list=new Set,t)for(const e of t)this.make_set(e);return this}make_set(t){const e=this._list;return e.has(t)||(e.add(t),t.__disjoint_set={},t.__disjoint_set.parent=t,t.__disjoint_set.children=new Set([t]),t.__disjoint_set.size=1),this}find(t){return this._list.has(t)?t.__disjoint_set.parent!==t?(t.__disjoint_set.children.add(...t),t.__disjoint_set.parent=this.find(t.__disjoint_set.parent),t.__disjoint_set.parent):t:null}union(t,e){let s=this.find(t),r=this.find(e);return s===r||(s.__disjoint_set.size<r.__disjoint_set.size&&([s,r]=[r,s]),r.__disjoint_set.parent=s,r.__disjoint_set.children.forEach(s.__disjoint_set.children.add,s.__disjoint_set.children),s.__disjoint_set.size+=r.__disjoint_set.size),this}}class R extends g{constructor(e,s=5,r=2,i=t,n=1212){return super(e,r,i,n),super.parameter_list=[\"max_halves\"],this.parameter(\"max_halves\",s),[this._N,this._D]=this.X.shape,this}init(t=\"random\",e=null){const s=this._N,r=this._d;if(\"random\"===t){const t=this._randomizer;console.log(t),this.Y=new _(s,r,(()=>t.random))}else this.Y=t.transform(this.X);const i=this.Y;e||(e=new _(s,s));const n=this._metric;let o=new _(s,s),h=new _(s,s);for(let t=0;t<s;++t){const r=i.row(t);for(let a=t;a<s;++a){let s=t===a?1:n(r,i.row(a)),_=1/s;if(o.set_entry(t,a,s),o.set_entry(a,t,s),h.set_entry(t,a,_),h.set_entry(a,t,_),!e){let s=t===a?1:n(X.row(t),X.row(a));e.set_entry(t,a,s),e.set_entry(a,t,s)}}}let a=e._apply(1,((t,e)=>e/t)),l=e.sub(o),c=l._apply(2,((t,e)=>Math.pow(t,e))).mult(a);return console.log(c),this._distance_matrix=o,this._distance_inverse_matrix=h,this._Distance_matrix=e,this._Distance_inverse_matrix=h,this._delta=l,this._ones=new _(s,r,1),this._E=c.sum,this}__distance_matrix(t){const e=this._metric,s=t.shape[0],r=new _(s,s);for(let i=0;i<s;++i){const n=t.row(i);for(let o=i;o<s;++o){let s=i===o?1:e(n,t.row(o));r.set_entry(i,o,s),r.set_entry(o,i,s)}}return r}transform(t=20){this._is_initialized||this.init();for(let e=0;e<t;++e)console.log([...this.Y]),this._step();return this.projection}*generator(){this._is_initialized||this.init();for(let t=0;t<max_iter;++t)this._step(),yield this.projection;return this.projection}_step(){const t=this.parameter(\"max_halves\");let e=this._distance_matrix,s=this._distance_inverse_matrix,r=this._Distance_matrix,i=this._Distance_inverse_matrix,n=this._ones,o=this._E,h=this.Y,a=s.sub(i),_=a.dot(n),l=a.dot(h).sub(h.mult(_)),c=s._apply(3,((t,e)=>Math.pow(t,e))),u=h._apply(2,((t,e)=>Math.pow(t,e))),f=c.dot(u).sub(_).sub(h.mult(2).mult(c.dot(h))).add(u.mult(c.dot(n)));f=f._apply(null,(t=>Math.abs(t)));let d=l.divide(f),p=h.clone();for(let n=0;n<t;++n){if(h=p.add(d),e=this.__distance_matrix(h),s=e._apply(1,((t,e)=>e/t)),a=r.sub(e),a._apply(2,((t,e)=>Math.pow(t,e))).mult(i).sum<o)break;d=d.mult(.5)}this.Y=h}}var S=\"0.3.7\";export{m as BallTree,v as FASTMAP,p as Heap,E as Hierarchical_Clustering,M as ISOMAP,$ as KMeans,L as KMedoids,b as LDA,z as LLE,B as LSP,j as LTSA,A as MDS,_ as Matrix,T as OPTICS,x as PCA,f as Randomizer,R as SAMMON,k as TSNE,K as TopoMap,F as TriMap,Y as UMAP,h as canberra,o as chebyshev,i as cosine,l as distance_matrix,t as euclidean,r as euclidean_squared,a as k_nearest_neighbors,e as kahan_sum,c as linspace,n as manhattan,d as max,s as neumair_sum,u as norm,N as powell,y as qr,w as simultaneous_poweriteration,S as version};\n"]},"metadata":{},"sourceType":"module"}