{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/workspace/POC/demoreact/src/components/ScatterPlotDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport ScatterPlot from \"./SP\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScatterPlotDiv(props) {\n  _s();\n\n  const data = props.data;\n  const keys = Object.keys(data[0]);\n  const [xVar, setXVar] = useState(keys[0]);\n  const [yVar, setYVar] = useState(keys[1]); //const dims = props.dims;\n\n  useEffect(() => {\n    setXVar(keys[0]);\n    setYVar(keys[1]);\n  }, [data]); // Get list of possible x and y variables\n  // Store all of the data to be plotted \n\n  let allData = [];\n  data.map(line => {\n    allData.push({\n      \"x\": line[xVar],\n      \"y\": line[yVar],\n      \"label\": \"X: \" + line[xVar] + \" Y: \" + line[yVar]\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"xVar\",\n          children: \"X Variable:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"xVar\",\n          value: xVar,\n          className: \"form-select\",\n          onChange: d => setXVar(d.target.value),\n          children: keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yVar\",\n          children: \"Y Variable:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"yVar\",\n          value: yVar,\n          className: \"form-select\",\n          onChange: d => setYVar(d.target.value),\n          children: keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n      xTitle: xVar,\n      yTitle: yVar,\n      data: allData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ScatterPlotDiv, \"vUwwz/CevJZ7LNp9DoEWUpqF92U=\");\n\n_c = ScatterPlotDiv;\nScatterPlotDiv.propTypes = {\n  data: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterPlotDiv\");","map":{"version":3,"sources":["/Users/dude/Documents/workspace/POC/demoreact/src/components/ScatterPlotDiv.js"],"names":["React","useState","useEffect","PropTypes","ScatterPlot","ScatterPlotDiv","props","data","keys","Object","xVar","setXVar","yVar","setYVar","allData","map","line","push","d","target","value","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport ScatterPlot from \"./SP\";\n\nexport default function ScatterPlotDiv (props) {\n    const data = props.data;\n    const keys = Object.keys(data[0]);\n    const [xVar, setXVar] = useState(keys[0]);\n    const [yVar, setYVar] = useState(keys[1]);\n    \n    //const dims = props.dims;\n\n    useEffect(() => {\n        setXVar(keys[0])\n        setYVar(keys[1])\n    }, [data])\n    // Get list of possible x and y variables\n    // Store all of the data to be plotted \n    let allData = [];\n    data.map((line) => {\n        allData.push({\n            \"x\" : line[xVar],\n            \"y\" : line[yVar],\n            \"label\": \"X: \" + line[xVar] + \" Y: \"+line[yVar]\n        });\n    });\n    return (\n        <div>\n            <div className=\"d-inline-flex p-3\">\n                {/* X Variable Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"xVar\">X Variable:</label>\n                    <select id=\"xVar\" value={xVar} className=\"form-select\" onChange={(d) => setXVar(d.target.value)}>\n                        {keys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n\n                {/* Y Variable Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"yVar\">Y Variable:</label>\n                    <select id=\"yVar\" value={yVar} className=\"form-select\" onChange={(d) => setYVar(d.target.value)}>\n                        {keys.map((d) => {\n                            return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>                        \n            </div>\n\n            {/* Render scatter plot*/}\n            <ScatterPlot\n                xTitle={xVar}\n                yTitle={yVar}\n                data={allData}\n            />\n        </div>\n    )\n}\n\nScatterPlotDiv.propTypes = {\n    data : PropTypes.array,\n}"]},"metadata":{},"sourceType":"module"}