{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/workspace/POC/demoreact/src/components/ScatterPlotMatrixDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport ScatterPlotMatrix from \"./SPM\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScatterPlotMatrixDiv(props) {\n  _s();\n\n  const data = props.data;\n  const dims = props.dims;\n  const keys = dims.filter(dim => dim.isChecked).map(d => d.value);\n  const catKeys = dims.filter(dim => !dim.isNumeric && dim.isChecked).map(d => d.value);\n  const [Dims, setDims] = useState(keys.slice(0, 4));\n  const [DimColore, setDimColore] = useState(catKeys[0] ? catKeys[0] : \"-\"); //Per l'aggiornamento delle dimensioni nelle label delle select quando cambia file\n\n  useEffect(() => {\n    setDims(keys.slice(0, 4));\n    setDimColore(catKeys[0] ? catKeys[0] : \"-\");\n  }, [data]); //Funzione che non permette di selezionare più volte la stessa dimensione\n\n  function handeSelectChange(e) {\n    let v = e.target.value;\n\n    if (!Dims.includes(v) || v == \"-\") {\n      let newDims = [...Dims];\n      newDims[e.target.id.slice(-1)] = v;\n      setDims(newDims);\n    } else {\n      alert(\"non puoi selezionare la stessa dimensione più volte\");\n    }\n  } // Get list of possible x and y variables\n  // Store all of the data to be plotted\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex flex-wrap p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectDim0\",\n          children: \"First Dimension:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectDim0\",\n          value: Dims[0],\n          className: \"form-select\",\n          onChange: handeSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-\"\n          }, \"null\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectDim1\",\n          children: \"Second Dimension:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectDim1\",\n          value: Dims[1],\n          className: \"form-select\",\n          onChange: handeSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-\"\n          }, \"null\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectDim2\",\n          children: \"Third Dimension:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectDim2\",\n          value: Dims[2],\n          className: \"form-select\",\n          onChange: handeSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-\"\n          }, \"null\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectDim3\",\n          children: \"Fourth Dimension:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectDim3\",\n          value: Dims[3],\n          className: \"form-select\",\n          onChange: handeSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-\"\n          }, \"null\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), keys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dCol\",\n          children: \"Color Dimension:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dCol\",\n          value: DimColore,\n          className: \"form-select\",\n          onChange: d => setDimColore(d.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-\"\n          }, \"null\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), catKeys.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScatterPlotMatrix, {\n      dimColor: DimColore,\n      data: data,\n      dims: Dims.filter(d => d != \"-\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ScatterPlotMatrixDiv, \"HU+Gc86+vlMOjTK0Yxt8zAv2/5E=\");\n\n_c = ScatterPlotMatrixDiv;\nScatterPlotMatrixDiv.propTypes = {\n  data: PropTypes.array,\n  dims: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterPlotMatrixDiv\");","map":{"version":3,"sources":["/Users/dude/Documents/workspace/POC/demoreact/src/components/ScatterPlotMatrixDiv.js"],"names":["React","useState","useEffect","PropTypes","ScatterPlotMatrix","ScatterPlotMatrixDiv","props","data","dims","keys","filter","dim","isChecked","map","d","value","catKeys","isNumeric","Dims","setDims","slice","DimColore","setDimColore","handeSelectChange","e","v","target","includes","newDims","id","alert","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport ScatterPlotMatrix from \"./SPM\";\n\nexport default function ScatterPlotMatrixDiv (props) {\n    const data = props.data;\n    const dims = props.dims;\n    const keys = dims.filter(dim => dim.isChecked).map((d) => d.value);\n    const catKeys = dims.filter(dim => !dim.isNumeric && dim.isChecked).map((d) => d.value);\n    \n    const [Dims, setDims] = useState(keys.slice(0, 4));\n    const [DimColore, setDimColore] = useState(catKeys[0] ? catKeys[0] : \"-\")\n    //Per l'aggiornamento delle dimensioni nelle label delle select quando cambia file\n    useEffect(() => {\n        setDims(keys.slice(0, 4));\n        setDimColore(catKeys[0] ? catKeys[0] : \"-\");\n    }, [data])\n\n    //Funzione che non permette di selezionare più volte la stessa dimensione\n    function handeSelectChange(e){\n        let v = e.target.value;\n        if(!Dims.includes(v)|| v==\"-\"){\n            let newDims = [...Dims];\n            newDims[e.target.id.slice(-1)] = v;\n            setDims(newDims);\n        }else{\n            alert(\"non puoi selezionare la stessa dimensione più volte\");\n        }\n    }\n    // Get list of possible x and y variables\n    // Store all of the data to be plotted\n    return (\n        <div>\n            <div className=\"d-inline-flex flex-wrap p-3\">\n                {/* First Dimension Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"selectDim0\">First Dimension:</label>\n                    <select id=\"selectDim0\" value={Dims[0]} className=\"form-select\" onChange={handeSelectChange}>\n                        <option key={\"null\"}>-</option>\n                        {keys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n                {/* First Dimension Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"selectDim1\">Second Dimension:</label>\n                    <select id=\"selectDim1\" value={Dims[1]} className=\"form-select\" onChange={handeSelectChange}>\n                        <option key={\"null\"}>-</option>\n                        {keys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n                {/* First Dimension Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"selectDim2\">Third Dimension:</label>\n                    <select id=\"selectDim2\" value={Dims[2]} className=\"form-select\" onChange={handeSelectChange}>\n                        <option key={\"null\"}>-</option>\n                        {keys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n                {/* First Dimension Select Menu */}\n                <div className=\"m-2\">\n                    <label htmlFor=\"selectDim3\">Fourth Dimension:</label>\n                    <select id=\"selectDim3\" value={Dims[3]} className=\"form-select\" onChange={handeSelectChange}>\n                        <option key={\"null\"}>-</option>\n                        {keys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n                {/* Dim Colore*/}\n                <div className=\"m-2\">\n                    <label htmlFor=\"dCol\">Color Dimension:</label>\n                    <select id=\"dCol\" value={DimColore} className=\"form-select\" onChange={(d) => setDimColore(d.target.value)}>\n                        <option key={\"null\"}>-</option>\n                        {catKeys.map((d) => {\n                                return <option key={d}>{d}</option>\n                        })}\n                    </select>\n                </div>\n            </div>\n            {/* Render scatter plot*/}\n            <ScatterPlotMatrix\n                dimColor={DimColore}\n                data={data}\n                dims={Dims.filter((d) => d!=\"-\")}\n                    />\n        </div>\n    )\n}\n\nScatterPlotMatrixDiv.propTypes = {\n    data : PropTypes.array,\n    dims: PropTypes.array\n}"]},"metadata":{},"sourceType":"module"}